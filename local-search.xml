<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Logstash利用redis做缓存从filebeat收集nginx日志和系统日志</title>
    <link href="/2023/09/27/Logstash%E5%88%A9%E7%94%A8redis%E5%81%9A%E7%BC%93%E5%AD%98%E4%BB%8Efilebeat%E6%94%B6%E9%9B%86nginx%E6%97%A5%E5%BF%97%E5%92%8C%E7%B3%BB%E7%BB%9F%E6%97%A5%E5%BF%97/"/>
    <url>/2023/09/27/Logstash%E5%88%A9%E7%94%A8redis%E5%81%9A%E7%BC%93%E5%AD%98%E4%BB%8Efilebeat%E6%94%B6%E9%9B%86nginx%E6%97%A5%E5%BF%97%E5%92%8C%E7%B3%BB%E7%BB%9F%E6%97%A5%E5%BF%97/</url>
    
    <content type="html"><![CDATA[<h2 id="1、Logstash利用redis做缓存从filebeat收集nginx日志和系统日志。"><a href="#1、Logstash利用redis做缓存从filebeat收集nginx日志和系统日志。" class="headerlink" title="1、Logstash利用redis做缓存从filebeat收集nginx日志和系统日志。"></a>1、Logstash利用redis做缓存从filebeat收集nginx日志和系统日志。</h2><p>实验目的：</p><p>将nginx服务器中的系统日志，访问日志和错误日志通过filebeat收集到redis缓存数据库中，利用 Redis 缓存日志数据,主要解决应用解耦，异步消息，流量削锋等问题。然后通过另外的logstash将redis服<br>务器的数据取出在写入到elasticsearch(以下简称ES)服务器。最后在kibana中建立日志索引，查看索引中的日志。</p><p>ELK简介：</p><p>ELK是由一家elastic公司开发的三个开源项目的首字母缩写<br>这三个项目分别是：Elasticsearch、Logstash 和 Kibana。三个项目各有不同的功能<br>之后又增加了许多新项目, 于是 从5.X版本后改名为Elastic Stack<br>Elastic Stack 是一套适用于数据采集、扩充、存储、分析和可视化的免费开源工具。人们通常将 Elastic<br>Stack 称为 ELK Stack（代指 Elasticsearch、Logstash 和 Kibana），目前 Elastic Stack 包括一系列丰<br>富的轻量型数据采集代理，这些代理统称为 Beats，可用来向 Elasticsearch 发送数据。<br>Elasticsearch 是一个实时的全文搜索,存储库和分析引擎。<br>Logstash 是服务器端数据处理的管道，能够同时从多个来源采集数据，转换数据，然后将数据发送到诸<br>如 Elasticsearch 等存储库中。<br>Kibana 则可以让用户在 Elasticsearch 中使用图形和图表对数据进行可视化。</p><p>实验系统架构：本实验使用的linux系统版本为rocky8.5</p><p>2023/09/27/Logstash利用redis做缓存从filebeat收集nginx日志和系统日志</p><p><img src="image-20230922093633179.png" alt="image-20230922093633179"></p><p>实验步骤：</p><p>准备以下rpm安装包</p><p>elasticsearch-7.17.11-x86_64.rpm</p><p>filebeat-7.17.11-x86_64.rpm</p><p>kibana-7.17.11-x86_64.rpm</p><p>logstash-7.17.11-x86_64.rpm</p><p>下载地址：</p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/elasticstack/">https://mirrors.tuna.tsinghua.edu.cn/elasticstack/</a></p><h4 id="1-1-安装ES1-10-0-0-133-ES2-10-0-0-134-ES3-10-0-0-136"><a href="#1-1-安装ES1-10-0-0-133-ES2-10-0-0-134-ES3-10-0-0-136" class="headerlink" title="1.1 安装ES1-10.0.0.133,ES2-10.0.0.134,ES3-10.0.0.136"></a>1.1 安装ES1-10.0.0.133,ES2-10.0.0.134,ES3-10.0.0.136</h4><p>Elasticsearch 是一个分布式的免费开源搜索和分析引擎，适用于包括文本、数字、地理空间、结构化和<br>非结构化数据等在内的所有类型的数据。Elasticsearch 在 Apache Lucene 的基础上开发而成，由<br>Elasticsearch N.V.（即现在的 Elastic）于 2010 年首次发布。Elasticsearch 以其简单的 REST 风格<br>API、分布式特性、速度和可扩展性而闻名，是 Elastic Stack 的核心组件<br>Elasticsearch 支持数据的实时全文搜索搜索、支持分布式和高可用、提供API接口，可以处理大规模的<br>各种日志数据的处理，比如: Nginx、Tomcat、系统日志等功能。<br>Elasticsearch 基于 Java 语言开发，利用全文搜索引擎 Apache Lucene 实现</p><figure class="highlight autoit"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></div></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta">#系统优化配置最小4G内存2核CPU,内核优化</span><br>[root<span class="hljs-symbol">@es</span>-node1 ~]<span class="hljs-meta">#echo <span class="hljs-string">&quot;vm.max_map_count = 262144&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br>[root<span class="hljs-symbol">@es</span>-node1 ~]<span class="hljs-meta">#echo <span class="hljs-string">&quot;fs.file-max = 1000000&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br>[root<span class="hljs-symbol">@es</span>-node1 ~]<span class="hljs-meta">#sysctl -p</span><br>vm.max_map_count = <span class="hljs-number">262144</span><br><br>[root<span class="hljs-symbol">@es</span>-node1 ~]<span class="hljs-meta"># yum -y install elasticsearch-7.17.11-x86_64.rpm</span><br><br>[root<span class="hljs-symbol">@es</span>-node1 ~]<span class="hljs-meta"># grep <span class="hljs-string">&quot;^[a-Z]&quot;</span> /etc/elasticsearch/elasticsearch.yml #修改每个节点的配置节点</span><br>cluster.name: ELK-Cluster<br>node.name: node<span class="hljs-number">-1</span> <span class="hljs-meta">#只需要修改此行，每个节点都不能相同</span><br>path.data: /var/lib/elasticsearch<br>path.logs: /var/<span class="hljs-built_in">log</span>/elasticsearch<br>bootstrap.memory_lock: <span class="hljs-literal">true</span><br>network.host: <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><br>discovery.seed_hosts: [<span class="hljs-string">&quot;10.0.0.133&quot;</span>, <span class="hljs-string">&quot;10.0.0.134&quot;</span>,<span class="hljs-string">&quot;10.0.0.136&quot;</span>]<br>cluster.initial_master_nodes: [<span class="hljs-string">&quot;10.0.0.133&quot;</span>, <span class="hljs-string">&quot;10.0.0.134&quot;</span>,<span class="hljs-string">&quot;10.0.0.136&quot;</span>]<br>action.destructive_requires_name: <span class="hljs-literal">true</span><br>gateway.recover_after_nodes: <span class="hljs-number">2</span><br><br><span class="hljs-meta">#开启 bootstrap.memory_lock: true 导致无法启动的错误解决方法</span><br>[root<span class="hljs-symbol">@es</span>-node1 ~]<span class="hljs-meta"># systemctl edit elasticsearch</span><br>[Service]<br>LimitMEMLOCK=infinity<br>[root<span class="hljs-symbol">@es</span>-node1 ~]<span class="hljs-meta"># cat /etc/systemd/system/elasticsearch.service.d/override.conf</span><br>[Service]<br>LimitMEMLOCK=infinity<br>[root<span class="hljs-symbol">@es</span>-node1 ~]<span class="hljs-meta"># systemctl daemon-reload</span><br>[root<span class="hljs-symbol">@es</span>-node1 ~]<span class="hljs-meta"># systemctl restart elasticsearch.service</span><br><br><span class="hljs-meta">#查看es集群状态</span><br>[root<span class="hljs-symbol">@es</span>-node1 ~]<span class="hljs-meta"># curl http://127.0.0.1:9200/_cat/health</span><br><span class="hljs-number">1695019355</span> <span class="hljs-number">06</span>:<span class="hljs-number">42</span>:<span class="hljs-number">35</span> ELK-Cluster green <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">6</span> <span class="hljs-number">3</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span> - <span class="hljs-number">100.0</span>%<br><br><span class="hljs-meta">#查看所有的节点信息</span><br>[root<span class="hljs-symbol">@es</span>-node1 ~]<span class="hljs-meta"># curl <span class="hljs-string">&#x27;http://127.0.0.1:9200/_cat/nodes?v&#x27;</span></span><br>ip         heap.percent ram.percent cpu load_1m load_5m load_15m node.role   master name<br><span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.133</span>           <span class="hljs-number">10</span>          <span class="hljs-number">82</span>   <span class="hljs-number">1</span>    <span class="hljs-number">0.00</span>    <span class="hljs-number">0.01</span>     <span class="hljs-number">0.03</span> cdfhilmrstw *      node<span class="hljs-number">-1</span><br><span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.136</span>           <span class="hljs-number">13</span>          <span class="hljs-number">97</span>   <span class="hljs-number">1</span>    <span class="hljs-number">0.04</span>    <span class="hljs-number">0.11</span>     <span class="hljs-number">0.08</span> cdfhilmrstw -      node<span class="hljs-number">-3</span><br><span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.134</span>           <span class="hljs-number">10</span>          <span class="hljs-number">88</span>   <span class="hljs-number">1</span>    <span class="hljs-number">0.05</span>    <span class="hljs-number">0.09</span>     <span class="hljs-number">0.06</span> cdfhilmrstw -      node<span class="hljs-number">-2</span><br></code></pre></td></tr></table></figure><h4 id="1-2-安装ngxin-10-0-0-138"><a href="#1-2-安装ngxin-10-0-0-138" class="headerlink" title="1.2 安装ngxin-10.0.0.138"></a>1.2 安装ngxin-10.0.0.138</h4><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs julia">[root<span class="hljs-meta">@nginx</span> ~]<span class="hljs-comment"># yum -y install nginx</span><br>[root<span class="hljs-meta">@nginx</span> ~]<span class="hljs-comment"># vim /etc/nginx/nginx.conf #修改access日志格式为json格式</span><br>events &#123;<br>    worker_connections <span class="hljs-number">1024</span>;<br>&#125;<br><br>http &#123;<br>    log_format access_json &#x27;&#123;<span class="hljs-string">&quot;@timestamp&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$time_iso8601</span>&quot;</span>,&#x27;<br>        &#x27;<span class="hljs-string">&quot;host&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$server_addr</span>&quot;</span>,&#x27;<br>        &#x27;<span class="hljs-string">&quot;clientip&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$remote_addr</span>&quot;</span>,&#x27;<br>        &#x27;<span class="hljs-string">&quot;size&quot;</span>:$body_bytes_sent,&#x27;<br>        &#x27;<span class="hljs-string">&quot;responsetime&quot;</span>:$request_time,&#x27;<br>        &#x27;<span class="hljs-string">&quot;upstreamtime&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$upstream_response_time</span>&quot;</span>,&#x27;<br>        &#x27;<span class="hljs-string">&quot;upstreamhost&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$upstream_addr</span>&quot;</span>,&#x27;<br>        &#x27;<span class="hljs-string">&quot;http_host&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$host</span>&quot;</span>,&#x27;<br>        &#x27;<span class="hljs-string">&quot;uri&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$uri</span>&quot;</span>,&#x27;<br>        &#x27;<span class="hljs-string">&quot;domain&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$host</span>&quot;</span>,&#x27;<br>        &#x27;<span class="hljs-string">&quot;xff&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$http_x_forwarded_for</span>&quot;</span>,&#x27;<br>        &#x27;<span class="hljs-string">&quot;referer&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$http_referer</span>&quot;</span>,&#x27;<br>        &#x27;<span class="hljs-string">&quot;tcp_xff&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$proxy_protocol_addr</span>&quot;</span>,&#x27;<br>        &#x27;<span class="hljs-string">&quot;http_user_agent&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$http_user_agent</span>&quot;</span>,&#x27;<br>        &#x27;<span class="hljs-string">&quot;status&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-variable">$status</span>&quot;</span>&#125;&#x27;;<br><br><br>    access_log  /var/log/nginx/access_json.log access_json ;<br><br>    <span class="hljs-comment">#access_log  /var/log/nginx/access.log  main;</span><br><br>[root<span class="hljs-meta">@nginx</span> ~]<span class="hljs-comment"># systemctl enable --now nginx.service</span><br>[root<span class="hljs-meta">@nginx</span> ~]<span class="hljs-comment"># tail -f /var/log/nginx/access_json.log</span><br>&#123;<span class="hljs-string">&quot;@timestamp&quot;</span>:<span class="hljs-string">&quot;2023-09-20T09:26:06+08:00&quot;</span>,<span class="hljs-string">&quot;host&quot;</span>:<span class="hljs-string">&quot;10.0.0.138&quot;</span>,<span class="hljs-string">&quot;clientip&quot;</span>:<span class="hljs-string">&quot;10.0.0.1&quot;</span>,<span class="hljs-string">&quot;size&quot;</span>:<span class="hljs-number">3429</span>,<span class="hljs-string">&quot;responsetime&quot;</span>:<span class="hljs-number">0.000</span>,<span class="hljs-string">&quot;upstreamtime&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;upstreamhost&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;http_host&quot;</span>:<span class="hljs-string">&quot;10.0.0.138&quot;</span>,<span class="hljs-string">&quot;uri&quot;</span>:<span class="hljs-string">&quot;/index.html&quot;</span>,<span class="hljs-string">&quot;domain&quot;</span>:<span class="hljs-string">&quot;10.0.0.138&quot;</span>,<span class="hljs-string">&quot;xff&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;referer&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;tcp_xff&quot;</span>:<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-string">&quot;http_user_agent&quot;</span>:<span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36&quot;</span>,<span class="hljs-string">&quot;status&quot;</span>:<span class="hljs-string">&quot;200&quot;</span>&#125;<br>&#123;<span class="hljs-string">&quot;@timestamp&quot;</span>:<span class="hljs-string">&quot;2023-09-20T09:26:06+08:00&quot;</span>,<span class="hljs-string">&quot;host&quot;</span>:<span class="hljs-string">&quot;10.0.0.138&quot;</span>,<span class="hljs-string">&quot;clientip&quot;</span>:<span class="hljs-string">&quot;10.0.0.1&quot;</span>,<span class="hljs-string">&quot;size&quot;</span>:<span class="hljs-number">368</span>,<span class="hljs-string">&quot;responsetime&quot;</span>:<span class="hljs-number">0.000</span>,<span class="hljs-string">&quot;upstreamtime&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;upstreamhost&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;http_host&quot;</span>:<span class="hljs-string">&quot;10.0.0.138&quot;</span>,<span class="hljs-string">&quot;uri&quot;</span>:<span class="hljs-string">&quot;/nginx-logo.png&quot;</span>,<span class="hljs-string">&quot;domain&quot;</span>:<span class="hljs-string">&quot;10.0.0.138&quot;</span>,<span class="hljs-string">&quot;xff&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;referer&quot;</span>:<span class="hljs-string">&quot;http://10.0.0.138/&quot;</span>,<span class="hljs-string">&quot;tcp_xff&quot;</span>:<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-string">&quot;http_user_agent&quot;</span>:<span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36&quot;</span>,<span class="hljs-string">&quot;status&quot;</span>:<span class="hljs-string">&quot;200&quot;</span>&#125;<br></code></pre></td></tr></table></figure><h4 id="1-3-安装redis-10-0-0-135"><a href="#1-3-安装redis-10-0-0-135" class="headerlink" title="1.3 安装redis-10.0.0.135"></a>1.3 安装redis-10.0.0.135</h4><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs perl">[root@redis ~]<span class="hljs-comment"># yum -y install redis</span><br>[root@redis ~]<span class="hljs-comment">#vim /etc/redis.conf #修改配置文件</span><br><span class="hljs-keyword">bind</span> <span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span> <span class="hljs-comment">#修改监听地址</span><br>requirepass <span class="hljs-number">123456</span> <span class="hljs-comment">#设置密码</span><br>[root@redis ~]<span class="hljs-comment"># systemctl enable --now redis #启动服务，并设置开机启动</span><br></code></pre></td></tr></table></figure><h4 id="1-4-安装filebeat-10-0-0-138文件日志收集上传工具"><a href="#1-4-安装filebeat-10-0-0-138文件日志收集上传工具" class="headerlink" title="1.4 安装filebeat-10.0.0.138文件日志收集上传工具"></a>1.4 安装filebeat-10.0.0.138文件日志收集上传工具</h4><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs dts">[root@nginx ~]<span class="hljs-meta"># yum -y install filebeat-7.17.11-x86_64.rpm</span><br>[root@nginx ~]<span class="hljs-meta"># cat /etc/filebeat/filebeat.yml #修改配置文件将log发送到redis中</span><br><span class="hljs-meta"># 配置 Filebeat 输入，监听日志文件</span><br>filebeat.inputs:<br>- type: log<br><span class="hljs-symbol">  enabled:</span> true<br><span class="hljs-symbol">  paths:</span><br>    - <span class="hljs-keyword">/var/</span>log<span class="hljs-keyword">/nginx/</span>access_json.log  <span class="hljs-meta"># Nginx 访问日志路径</span><br>  json.keys_under_root: true  <span class="hljs-meta"># 将 JSON 数据的字段放在根级别</span><br>  json.overwrite_keys: true  <span class="hljs-meta"># 如果字段冲突，覆盖已存在的字段</span><br><span class="hljs-symbol">  tags:</span> [<span class="hljs-string">&quot;nginx-access&quot;</span>]  <span class="hljs-meta"># 添加标签以区分不同类型的日志</span><br><br>- type: log<br><span class="hljs-symbol">  enabled:</span> true  <span class="hljs-meta"># 启用日志收集</span><br><span class="hljs-symbol">  paths:</span><br>    - <span class="hljs-keyword">/var/</span>log<span class="hljs-keyword">/nginx/</span>error.log  <span class="hljs-meta"># Nginx 错误日志路径</span><br><span class="hljs-symbol">  tags:</span> [<span class="hljs-string">&quot;nginx-error&quot;</span>]  <span class="hljs-meta"># 添加标签以区分不同类型的日志</span><br><br>- type: log<br><span class="hljs-symbol">  enabled:</span> true  <span class="hljs-meta"># 启用日志收集</span><br><span class="hljs-symbol">  paths:</span><br>    - <span class="hljs-keyword">/var/</span>log/messages  <span class="hljs-meta"># 系统日志路径</span><br><span class="hljs-symbol">  tags:</span> [<span class="hljs-string">&quot;syslog&quot;</span>]  <span class="hljs-meta"># 添加标签以区分不同类型的日志</span><br><br><span class="hljs-meta"># 配置 Filebeat 输出到 Redis</span><br>output.redis:<br><span class="hljs-symbol">  hosts:</span> [<span class="hljs-string">&quot;10.0.0.135:6379&quot;</span>]  <span class="hljs-meta"># Redis 主机地址和端口</span><br><span class="hljs-symbol">  password:</span> <span class="hljs-string">&quot;123456&quot;</span>  <span class="hljs-meta"># Redis 访问密码</span><br><span class="hljs-symbol">  db:</span> <span class="hljs-string">&quot;0&quot;</span>  <span class="hljs-meta"># Redis 数据库编号</span><br><span class="hljs-symbol">  key:</span> <span class="hljs-string">&quot;filebeat&quot;</span>  <span class="hljs-meta"># Redis 键名，用于存储日志数据</span><br>  <br>[root@nginx ~]<span class="hljs-meta"># systemctl enable --now filebeat.service #启动服务</span><br></code></pre></td></tr></table></figure><h4 id="1-5-安装logstash"><a href="#1-5-安装logstash" class="headerlink" title="1.5 安装logstash"></a>1.5 安装logstash</h4><p>Logstash 是免费且开放的服务器端数据处理管道，能够从多个来源采集数据，转换数据，然后将数据发<br>送到您最喜欢的“存储库”中<br>Logstash 可以水平伸缩，而且logstash是整个ELK中拥有最多插件的一个组件<br>Losgtash 基于 Ruby 语言开发</p><p>Logstash 主要功能：<br>输入 Input：用于日志收集,常见插件: Stdin、File、Kafka、Redis、Filebeat、Http<br>过滤 Filter：日志过滤和转换,常用插件: grok、date、geoip、mutate、useragent<br>输出 Output：将过滤转换过的日志输出, 常见插件: File,Stdout,Elasticsearch,MySQL,Redis,Kafka</p><figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs puppet">[root@logstash ~]<span class="hljs-comment"># yum -y install java-1.8.0-openjd</span><br>[root@logstash ~]<span class="hljs-comment"># yum -y install logstash-7.17.11-x86_64.rpm</span><br>[root@logstash ~]<span class="hljs-comment"># vim /etc/logstash/logstash.yml</span><br>[root@logstash ~]<span class="hljs-comment"># grep -Ev &#x27;#|^$&#x27; /etc/logstash/logstash.yml</span><br>node.name: logstash-node01<br>pipeline.workers: 2<br>pipeline.batch.size: 1000 <span class="hljs-comment">#批量写入的消息个数，可以根据ES的性能做性能优化</span><br>pipeline.batch.delay: 5 <span class="hljs-comment">#批量写入的延时，可以根据ES的性能做性能优化</span><br>path.data: /var/lib/logstash <span class="hljs-comment">#默认值</span><br>path.logs: /var/log/logstash <span class="hljs-comment">#默认值</span><br><span class="hljs-comment">#内存优化</span><br>[root@logstash ~] <span class="hljs-comment">#vim /etc/logstash/jvm.options</span><br>-Xms1g<br>-Xmx1g<br><span class="hljs-comment">#Logstash默认以logstash用户运行,如果logstash需要收集本机的日志,可能会有权限问题,可以修改为</span><br>root<br>[root@logstash ~] <span class="hljs-comment">#vim /etc/systemd/system/logstash.service</span><br>[Service]<br>User=root<br>Group=root<br><br>[root@logstash ~]<span class="hljs-comment"># cat /etc/logstash/conf.d/redis-to-es.conf #创建logstash配置文件从redis中取出日志并发送到elasticsearch中</span><br><span class="hljs-keyword">input</span> &#123;<br>  redis &#123;<br>    <span class="hljs-attr">host</span> =&gt; <span class="hljs-string">&quot;10.0.0.135&quot;</span><br>    <span class="hljs-attr">port</span> =&gt; <span class="hljs-string">&quot;6379&quot;</span><br>    <span class="hljs-attr">password</span> =&gt; <span class="hljs-string">&quot;123456&quot;</span><br>    <span class="hljs-attr">db</span> =&gt; <span class="hljs-string">&quot;0&quot;</span><br>    <span class="hljs-attr">key</span> =&gt; <span class="hljs-string">&quot;filebeat&quot;</span><br>    <span class="hljs-attr">data_type</span> =&gt; <span class="hljs-string">&quot;list&quot;</span><br>  &#125;<br>&#125;<br><span class="hljs-keyword">output</span> &#123;<br>  <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;syslog&quot;</span> <span class="hljs-keyword">in</span> [tags] &#123; <br>    elasticsearch &#123;<br>    <span class="hljs-attr">hosts</span> =&gt; [<span class="hljs-string">&quot;10.0.0.133:9200&quot;</span>,<span class="hljs-string">&quot;10.0.0.134:9200&quot;</span>,<span class="hljs-string">&quot;10.0.0.136:9200&quot;</span>]<br>    <span class="hljs-attr">index</span> =&gt; <span class="hljs-string">&quot;syslog-%&#123;+YYYY.MM.dd&#125;&quot;</span><br>    &#125;  <br>  &#125;<br>  if <span class="hljs-string">&quot;nginx-access&quot;</span> in [tags] &#123;<br>    <span class="hljs-keyword">elasticsearch</span> &#123;<br>      <span class="hljs-attr">hosts</span> =&gt; [<span class="hljs-string">&quot;10.0.0.133:9200&quot;</span>,<span class="hljs-string">&quot;10.0.0.134:9200&quot;</span>,<span class="hljs-string">&quot;10.0.0.136:9200&quot;</span>]<br>      <span class="hljs-attr">index</span> =&gt; <span class="hljs-string">&quot;nginx-accesslog-%&#123;+YYYY.MM.dd&#125;&quot;</span><br>      <span class="hljs-attr">template_overwrite</span> =&gt; <span class="hljs-keyword">true</span><br>    &#125;<br>  &#125;  <br>  if <span class="hljs-string">&quot;nginx-error&quot;</span> in [tags] &#123;<br>    <span class="hljs-keyword">elasticsearch</span> &#123;<br>      <span class="hljs-attr">hosts</span> =&gt; [<span class="hljs-string">&quot;10.0.0.133:9200&quot;</span>,<span class="hljs-string">&quot;10.0.0.134:9200&quot;</span>,<span class="hljs-string">&quot;10.0.0.136:9200&quot;</span>]<br>      <span class="hljs-attr">index</span> =&gt; <span class="hljs-string">&quot;nginx-errorlog-%&#123;+YYYY.MM.dd&#125;&quot;</span><br>      <span class="hljs-attr">template_overwrite</span> =&gt; <span class="hljs-keyword">true</span><br>    &#125;<br>  &#125;<br>&#125;<br><br>[root@logstash ~] <span class="hljs-comment">#systemctl daemon-reload;systemctl restart logstash</span><br></code></pre></td></tr></table></figure><h4 id="1-6-安装kibana"><a href="#1-6-安装kibana" class="headerlink" title="1.6 安装kibana"></a>1.6 安装kibana</h4><p>Kibana 是一款开源的数据分析和可视化平台，它是 Elastic Stack 成员之一，设计用于和 Elasticsearch<br>协作,可以使用 Kibana 对 Elasticsearch 索引中的数据进行搜索、查看、交互操作,您可以很方便的利用<br>图表、表格及地图对数据进行多元化的分析和呈现。<br>Kibana 可以使大数据通俗易懂。它很简单，基于浏览器的界面便于您快速创建和分享动态数据仪表板来<br>追踪 Elasticsearch 的实时数据变化。<br>Kibana 基于 TypeScript 语言开发</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@kibana</span> ~]<span class="hljs-meta"># yum install -y kibana-7.17.11-x86_64.rpm</span><br><br>[root<span class="hljs-symbol">@kibana</span> ~]<span class="hljs-meta"># vim /etc/kibana/kibana.yml</span><br>[root<span class="hljs-symbol">@kibana</span> ~]<span class="hljs-meta"># grep <span class="hljs-string">&quot;^[a-Z]&quot;</span> /etc/kibana/kibana.yml</span><br>server.port: <span class="hljs-number">5601</span> <span class="hljs-meta">#监听端口,此为默认值</span><br>server.host: <span class="hljs-string">&quot;0.0.0.0&quot;</span> <span class="hljs-meta">#修改此行的监听地址,默认为localhost</span><br>elasticsearch.hosts: <br>[<span class="hljs-string">&quot;http://10.0.0.133:9200&quot;</span>,<span class="hljs-string">&quot;http://10.0.0.134:9200&quot;</span>,<span class="hljs-string">&quot;http://10.0.0.136:9200&quot;</span>] <span class="hljs-meta">#修改此行,指向ES服务器地址,默认为localhost</span><br>i18n.locale: <span class="hljs-string">&quot;zh-CN&quot;</span> <span class="hljs-meta">#修改此行,使用<span class="hljs-string">&quot;zh-CN&quot;</span>显示中文界面,默认英文</span><br><br>[root<span class="hljs-symbol">@kibana</span> ~]<span class="hljs-meta"># systemctl enable --now kibana</span><br></code></pre></td></tr></table></figure><p>访问页面<a href="http://10.0.0.137:5601添加索引">http://10.0.0.137:5601添加索引</a></p><p><img src="image-20230922135725563.png" alt="image-20230922135725563"></p><p>创建3个日志的索引模式</p><p><img src="image-20230922135834129.png" alt="image-20230922135834129"></p><p><img src="image-20230922135940942.png" alt="image-20230922135940942"></p><p><img src="image-20230922140015626.png" alt="image-20230922140015626"></p><p>查看日志索引</p><p><img src="image-20230922140033276.png" alt="image-20230922140033276"></p><p>日志已经可以查看到</p><p><img src="image-20230922140101705-1695777765245.png" alt="image-20230922140101705"></p><h2 id="2、分别部署RabbitMQ单机版及RabbitMQ集群。"><a href="#2、分别部署RabbitMQ单机版及RabbitMQ集群。" class="headerlink" title="2、分别部署RabbitMQ单机版及RabbitMQ集群。"></a>2、分别部署RabbitMQ单机版及RabbitMQ集群。</h2><h4 id="2-1-什么是MQ"><a href="#2-1-什么是MQ" class="headerlink" title="2.1. 什么是MQ ?"></a>2.1. 什么是MQ ?</h4><p>1、MQ的概念</p><p><strong>MQ</strong> 全称Message Queue（消息队列），是在消息的传输过程中保存消息的容器。多用于系统之间的<strong>异步通信</strong>。 下面用图来理解异步通信，并阐明与同步通信的区别。</p><blockquote><p>同步通信：甲乙两人面对面交流，你一句我一句必须同步进行，两人除此之外不做任何事情</p></blockquote><p><img src="v2-cde10814405a7d379a3636c8ee7e2eaa_720w.webp" alt="img"></p><p>同步通信</p><blockquote><p>异步通信：异步通信相当于通过第三方转述对话，可能有消息的延迟，但不需要二人时刻保持联系，消息传给第三方后，两人可以做其他自己想做的事情，当需要获取对方说话的内容时，直接从消息队列里获取即可。</p></blockquote><p><img src="v2-bdea99a7bc091ccdeb018166814918d8_720w.webp" alt="img"></p><p>异步通信</p><p>2、理解消息队列</p><p><strong>消息</strong> 就是两台计算机间传送的数据单位；本质上就是一段数据，它能被一个或者多个应用程序所理解，是应用程序之间传递的信息载体。消息可以非常简单，例如只包含文本字符串；也可以更复杂地嵌入对象。</p><p><strong>队列</strong> 是数据结构中概念。在队列中，数据先进先出，后进后出，犹如排队做核酸。</p><p><strong>消息队列</strong> MQ是把消息和队列结合起来，称之为消息队列（Message Queue）。把要传输的数据（消息）与队列进行绑定，用队列先进先出机制来实现消息传递。消息队列由 <strong>生产者</strong> 和 <strong>消费者</strong> 两部分构成；生产者主要负责产生消息并把消息放入队列中，再由消费者去处理。消费者可以到指定队列中获取消息，或者订阅相应的队列，最后由MQ服务端进行消息推送。</p><p><strong>什么是订阅？</strong>订阅就是为消费者服务的，消费者提前订阅，当消息队列中有消息产出时，自动去获取消息进行消费。生活中有很多这种例子，比如购买腾讯、优酷等视频会员时就会有订阅模式，当你的会员到期时，会自动帮你完成续费。</p><p><img src="v2-cbdb1694c4df97d2b7dba4df7f036f45_720w.webp" alt="img"></p><p><strong>二、MQ的优势和劣势</strong></p><p>*<strong>1、优势和作用*</strong></p><p><strong>应用解耦</strong> 例如在我们非常熟悉电商系统平台中，用户下订单需要调用订单系统，订单系统需要调用库存系统、支付系统、物流系统等进行数据交互来完成整个下单业务，这种把整个业务都耦合在一起。很容易出现我们经常遇见的问题：</p><p>①、当中间某个环节库存系统或支付系统出现异常或故障，会造成整个订单系统崩溃无法完成订单业务；</p><p>②、当我们需求开发时，可能会新增一个其他系统的业务与当前的订单系统关联并进行数据交互，此时就必须修改订单系统的代码。如果系统壮大，业务越来越多，越来越复杂时，随之带来的维护成本也会成指数增加。</p><p><img src="v2-a4df5f36af1844ebfda3f00973873d8d_720w.webp" alt="img"></p><p>支付系统异常业务不可达</p><p>由此我们不难看出 <strong>系统耦合性越高，容错性和可维护性就会越低。</strong>如果在系统中引入MQ，即订单系统将消息先发送到MQ中，MQ再将数据消息转发到其他系统，问题就可以得到解决，MQ天生就是来干这个事的。那么当我们加入MQ以后整个系统会发生什么变化？</p><p>①、由于订单系统只发消息给MQ，不直接对接其他系统，如果其他任何一个系统出现异常或故障时，不影响整个订单业务的执行。当异常或故障解决以后，程序自动从MQ获取数据信息完成后续相关业务逻辑即可。</p><p>②、如果需求修改，新增了一个业务系统，此时无需修改其他系统的代码，只需修改MQ将消息发送给新增的系统即可，实现数据信息的可靠有效传递。<strong>使用MQ让系统应用间进行解耦，提升整个系统的容错性和可维护性</strong></p><p><img src="v2-d9f92fa34ebdb195a32c3d36e101739e_720w.webp" alt="img"></p><p>使用MQ，其他业务异常/故障，不影响业务的执行</p><p><strong>异步提速</strong> 开发一款App系统，其登录注册是最为常见的需求，例如注册的业务有手机注册入库、绑定邮箱验证、手机短信验证。</p><p><img src="v2-730368e449c84677973c40341c0dbdf7_720w.webp" alt="img"></p><p>没有使用MQ前</p><p>用户的注册操作需要等待350ms才能得到响应，如果邮件验证系统/手机短信通知系统耗时比较长，那么用户的响应随之就会变长，非常影响客户的体验度，而当使用了MQ后，客户的体验度飙升。</p><p><img src="v2-664494c752cbab6a346b4220591175ec_720w.webp" alt="img"></p><p>使用MQ后</p><p><strong>削峰填谷</strong> 假设系统承载的QPS是1000，如果流量顶峰时达到50000，则会造成系统压垮崩溃。使用了MQ之后，限制消费消息的速度为1000，把数据产生的压力放在MQ中，系统的高峰就会被削掉，这个过程叫 <strong>削峰</strong>，因为消息积压的数据比较多，在高峰期过后的一段时间内，消费消息的速度还会继续维持在这个速度，直到把积压的消息消费完，这个过程叫 <strong>填谷</strong>。这样可以大大提高系统的稳定性和用户体验。</p><p>*<strong>2、劣势*</strong></p><ul><li>系统可用性降低： 系统引入的外部依赖越多，系统稳定性越差。一旦MQ宕机，就会对业务造成影响。</li><li>系统复杂度提高： MQ的加入大大增加了系统的复杂度，以前系统间是同步的远程调用，现在是通过MQ进行异步调用。</li><li>一致性问题 ： A系统处理完业务，通过MQ给B、C、D三个系统发消息数据，如果B系统、C系统处理成功，D系统处理失败，则会造成数据处理的不一致。</li></ul><p><strong>三、MQ的应用场景</strong></p><p>1、高峰流量：抢红包、秒杀活动、抢火车票等这些业务场景都是短时间内需要处理大量请求，如果直接连接系统处理业务，会耗费大量资源，有可能造成系统瘫痪。 而使用MQ后，可以先让用户将请求发送到MQ中，MQ会先保存请求消息，不会占用系统资源，且MQ会进行消息排序，先请求的秒杀成功，后请求的秒杀失败。</p><p><img src="v2-8a639580f29d26d89f29c422031a5318_720w.webp" alt="img"></p><p>抢红包</p><p>2、消息分发：如电商网站要推送促销信息，该业务耗费时间较多，但对时效性要求不高，可以使用MQ做消息分发。</p><p><img src="v2-49054c84203cb103156156b5a0b5f70d_720w.webp" alt="img"></p><p>促销</p><p>3、数据同步：假如我们需要将数据保存到数据库之外，还需要一段时间将数据同步到缓存（如Redis）、搜索引擎（如Elasticsearch）中。此时可以将数据库的数据作为消息发送到MQ中，并同步到缓存、 搜索引擎中。</p><p><img src="v2-01fb0811129277e0dba0021abe2fde0e_720w.webp" alt="img"></p><p>同步</p><p>4、异步处理：在电商系统中，订单完成后，需要及时的通知子系统（进销存系统发货，用户服务积分，发送短信）进行下一步操作。为了保证订单系统的高性能，应该直接返回订单结果，之后让MQ通知子系统做其他非实时的业务操作。这样能保证核心业务的高效及时</p><p><img src="v2-2847087a1ca9b395330b40596744bfc6_720w.webp" alt="img"></p><p>消息通知</p><p>5、离线处理：在银行系统中，如果要查询近十年的历史账单，这是非常耗时的操作。如果发送同步请求，则会花费大量时间等待响应。此时使用MQ发送异步请求，等到查询出结果后获取结果即可。</p><p><img src="v2-2fffb9a20f65b722d63f8f2c9639962e_720w.webp" alt="img"></p><p><strong>四、AMQP</strong></p><p>1、什么是 AMQP ： 即Advanced Message Queuing Protocol(高级消息队列协议)，是一个<strong>网络协议</strong>，专门为消息中间件设计。基于此协议的客户端与消息中间件可传递消息，并不受不同中间件产品，不同开发语言等条件的限制。2006年AMQP规范发布，类比HTTP。</p><p>2、AMQP工作过程： 生产者(Publisher)将消息发布到交换机(Exchange)，交换机根据规则将消息分发给交换机绑定的队列(Queue)，队列再将消息投递给订阅了此队列的消费者</p><p><img src="v2-0872710215c7a8536241834f06af65ba_720w.webp" alt="img"></p><p>AMQP</p><p><strong>五、工作原理</strong></p><p><img src="v2-62dd7d82b4ec1c2acfbdefc57fad4e4b_720w.webp" alt="img"></p><p>工作原理</p><ul><li>Producer【<strong>消息的生产者】</strong> 一个向交换机发布消息的客户端应用程序。</li><li>Connection<strong>【连接】</strong> 生产者/消费者和RabbitMQ服务器之间建立的TCP连接。</li><li>Channel【<strong>信道】</strong> 是TCP里面的虚拟连接。例如：Connection相当于电缆，Channel相当于独立光纤束，一条TCP连接中可以创建多条信道，增加连接效率。无论是发布消息、接收消息、订阅队列都是通过信道完成的。</li><li>Broker 消息队列服务器实体。即RabbitMQ服务器</li><li>Virtual Host【<strong>虚拟主机】</strong> 出于多租户和安全因素设计的，把AMQP的基本组件划分到一个虚拟的分组中。每个vhost本质上就是一个mini版的RabbitMQ服务器，拥有自己的队列、交换机、绑定和权限机制。当多个不同的用户使用同一个RabbitMQ服务器时，可以划分出多个虚拟主机。RabbitMQ默认的虚拟主机路径是 /</li><li>Exchange<strong>【交换机】</strong> 用来接收生产者发送的消息，并根据分发规则，将这些消息分发给服务器中的队列中。不同的交换机有不同的分发规则。</li><li>Queue【<strong>消息队列】</strong> 用来保存消息直到发送给消费者。它是消息的容器，也是消息的终点。消息一直在队列里面，等待消费者链接到这个 队列将其取走。</li><li>Binding<strong>【绑定】</strong> 消息队列和交换机之间的虚拟连接，绑定中包含路由规则，绑定信息保存到交换机的路由表中，作为消息的分发依据。</li><li>Consumer【<strong>消息的消费者】</strong> 表示一个从消息队列中取得消息的客户端应用程序。 ….RabbitMQ的概念到此结束。 ….以上知识库转自知乎@逻辑-分享是学习的源泉，交流是进步的阶梯。</li></ul><h4 id="2-2-MQ部署单机版。"><a href="#2-2-MQ部署单机版。" class="headerlink" title="2.2 MQ部署单机版。"></a>2.2 MQ部署单机版。</h4><h5 id="Rocky8-5安装rabbitmq"><a href="#Rocky8-5安装rabbitmq" class="headerlink" title="Rocky8.5安装rabbitmq"></a>Rocky8.5安装rabbitmq</h5><p>下载rpm包安装</p><p>下载地址：</p><p>rabbitmq <a href="https://www.rabbitmq.com/install-rpm.html#downloads">https://www.rabbitmq.com/install-rpm.html#downloads</a></p><p>erlang(运行rabbitmq运行需要安装此依赖)<a href="https://github.com/rabbitmq/erlang-rpm/">https://github.com/rabbitmq/erlang-rpm/</a></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[root<span class="hljs-variable">@mq</span>-server1 ~]<span class="hljs-comment"># cat /etc/hosts #添加host解析</span><br><span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>   localhost localhost.localdomain localhost4 localhost4.localdomain4<br>::<span class="hljs-number">1</span>         localhost localhost.localdomain localhost6 localhost6.localdomain6<br><br><span class="hljs-number">10.0</span>.<span class="hljs-number">0.136</span> mq-server1 mq-server1.xinqi.org <span class="hljs-comment">#添加136解析</span><br>[root<span class="hljs-variable">@mq</span>-server1 ~]<span class="hljs-comment"># yum -y install erlang-26.1-1.el8.x86_64.rpm  rabbitmq-server-3.12.6-1.el8.noarch.rpm</span><br>rabbitmq-plugins enable rabbitmq_management <span class="hljs-comment">#安装完上面的2个rpm包后，需要手动开启管理页面15672端口</span><br>[root<span class="hljs-variable">@mq</span>-server1 ~]<span class="hljs-comment"># systemctl enable --now rabbitmq-server.service #启动服务</span><br>[root<span class="hljs-variable">@mq</span>-server1 ~]<span class="hljs-comment"># rabbitmqctl add_user admin admin #创建用户</span><br>[root<span class="hljs-variable">@mq</span>-server1 ~]<span class="hljs-comment"># rabbitmqctl set_user_tags admin administrator #添加管理员权限</span><br></code></pre></td></tr></table></figure><p>访问页面</p><p><img src="image-20230927093457485.png" alt="image-20230927093457485"></p><p><img src="image-20230927093754568.png" alt="image-20230927093754568"></p><p>2.3 MQ集群部署3个节点。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs ruby">cat /etc/hosts <span class="hljs-comment">#准备3台host,分别在3台host上添加解析</span><br><span class="hljs-number">10.0</span>.<span class="hljs-number">0.133</span> mq-server1 mq-server1.xinqi.org<br><span class="hljs-number">10.0</span>.<span class="hljs-number">0.134</span> mq-server2 mq-server2.xinqi.org<br><span class="hljs-number">10.0</span>.<span class="hljs-number">0.136</span> mq-server3 mq-server3.xinqi.org<br><br><span class="hljs-number">3</span>台.erlang.cookie需要相同<br>scp /var/lib/rabbitmq/.erlang.cookie <span class="hljs-number">10.0</span>.<span class="hljs-number">0.134</span><span class="hljs-symbol">:/var/lib/rabbitmq/</span>.erlang.cookie<br>scp /var/lib/rabbitmq/.erlang.cookie <span class="hljs-number">10.0</span>.<span class="hljs-number">0.136</span><span class="hljs-symbol">:/var/lib/rabbitmq/</span>.erlang.cookie<br><br>在 mq-server1 作为内存节点添加到 mq-server3，并作为内存节点，在 mq-server1执行以下命令：<br>root<span class="hljs-variable">@mq</span>-<span class="hljs-symbol">server1:</span>~<span class="hljs-comment"># rabbitmqctl stop_app #停止 app 服务</span><br>root<span class="hljs-variable">@mq</span>-<span class="hljs-symbol">server1:</span>~<span class="hljs-comment"># rabbitmqctl reset #清空元数据</span><br>Resetting node rabbit<span class="hljs-variable">@mq</span>-server1 <br>＃将 rabbitmq-server1 添加到集群当中，并成为内存节点，不加--ram 默认是磁盘<br>节点<br>root<span class="hljs-variable">@mq</span>-<span class="hljs-symbol">server1:</span>~<span class="hljs-comment"># rabbitmqctl join_cluster rabbit<span class="hljs-doctag">@mq</span>-server3 --ram</span><br>Clustering node rabbit<span class="hljs-variable">@mq</span>-server1 with rabbit<span class="hljs-variable">@mq</span>-server3<br>root<span class="hljs-variable">@mq</span>-<span class="hljs-symbol">server1:</span>~<span class="hljs-comment"># rabbitmqctl start_app #启动 app 服务</span><br>Starting node rabbit<span class="hljs-variable">@mq</span>-server1 ...<br><br>在 mq-server2 作为内存节点添加到 mq-server3，并作为内存节点，在 mq-server2<br>执行以下命令：<br>root<span class="hljs-variable">@mq</span>-<span class="hljs-symbol">server2:</span>~<span class="hljs-comment"># rabbitmqctl stop_app</span><br>Stopping rabbit application on node rabbit<span class="hljs-variable">@mq</span>-server2 ...<br>root<span class="hljs-variable">@mq</span>-<span class="hljs-symbol">server2:</span>~<span class="hljs-comment"># rabbitmqctl reset</span><br>Resetting node rabbit<span class="hljs-variable">@mq</span>-server2 ...<br>root<span class="hljs-variable">@mq</span>-<span class="hljs-symbol">server2:</span>~<span class="hljs-comment"># rabbitmqctl join_cluster rabbit<span class="hljs-doctag">@mq</span>-server3 --ram</span><br>Clustering node rabbit<span class="hljs-variable">@mq</span>-server2 with rabbit<span class="hljs-variable">@mq</span>-server3<br>root<span class="hljs-variable">@mq</span>-<span class="hljs-symbol">server2:</span>~<span class="hljs-comment"># rabbitmqctl start_app</span><br>Starting node rabbit<span class="hljs-variable">@mq</span>-server2 ...<br><br>[root<span class="hljs-variable">@mq</span>-server3 ~]<span class="hljs-comment"># rabbitmqctl cluster_status 查看集群状态</span><br>Cluster status of node rabbit<span class="hljs-variable">@mq</span>-server3 ...<br>Basics<br><br>Cluster <span class="hljs-symbol">name:</span> rabbit<span class="hljs-variable">@mq</span>-server3<br>Total <span class="hljs-variable constant_">CPU</span> cores available cluster-<span class="hljs-symbol">wide:</span> <span class="hljs-number">6</span><br><br>Disk Nodes<br><br>rabbit<span class="hljs-variable">@mq</span>-server3<br><br><span class="hljs-variable constant_">RAM</span> Nodes<br><br>rabbit<span class="hljs-variable">@mq</span>-server1<br>rabbit<span class="hljs-variable">@mq</span>-server2<br><br>Running Nodes<br><br>rabbit<span class="hljs-variable">@mq</span>-server1<br>rabbit<span class="hljs-variable">@mq</span>-server2<br>rabbit<span class="hljs-variable">@mq</span>-server3<br><br>Versions<br><br>rabbit<span class="hljs-variable">@mq</span>-<span class="hljs-symbol">server3:</span> RabbitMQ <span class="hljs-number">3.12</span>.<span class="hljs-number">6</span> on Erlang <span class="hljs-number">26.1</span><br>rabbit<span class="hljs-variable">@mq</span>-<span class="hljs-symbol">server2:</span> RabbitMQ <span class="hljs-number">3.12</span>.<span class="hljs-number">6</span> on Erlang <span class="hljs-number">26.1</span><br>rabbit<span class="hljs-variable">@mq</span>-<span class="hljs-symbol">server1:</span> RabbitMQ <span class="hljs-number">3.12</span>.<span class="hljs-number">6</span> on Erlang <span class="hljs-number">26.1</span><br><br><span class="hljs-variable constant_">CPU</span> Cores<br><br><span class="hljs-symbol">Node:</span> rabbit<span class="hljs-variable">@mq</span>-server3, available <span class="hljs-variable constant_">CPU</span> <span class="hljs-symbol">cores:</span> <span class="hljs-number">2</span><br><span class="hljs-symbol">Node:</span> rabbit<span class="hljs-variable">@mq</span>-server2, available <span class="hljs-variable constant_">CPU</span> <span class="hljs-symbol">cores:</span> <span class="hljs-number">2</span><br><span class="hljs-symbol">Node:</span> rabbit<span class="hljs-variable">@mq</span>-server1, available <span class="hljs-variable constant_">CPU</span> <span class="hljs-symbol">cores:</span> <span class="hljs-number">2</span><br><br>Maintenance status<br><br><span class="hljs-symbol">Node:</span> rabbit<span class="hljs-variable">@mq</span>-server3, <span class="hljs-symbol">status:</span> <span class="hljs-keyword">not</span> under maintenance<br><span class="hljs-symbol">Node:</span> rabbit<span class="hljs-variable">@mq</span>-server2, <span class="hljs-symbol">status:</span> <span class="hljs-keyword">not</span> under maintenance<br><span class="hljs-symbol">Node:</span> rabbit<span class="hljs-variable">@mq</span>-server1, <span class="hljs-symbol">status:</span> <span class="hljs-keyword">not</span> under maintenance<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>使用keepalived做nginx高可用,redis3节点集群部署</title>
    <link href="/2023/09/14/%E4%BD%BF%E7%94%A8keepalived%E5%81%9Anginx%E9%AB%98%E5%8F%AF%E7%94%A8-redis3%E8%8A%82%E7%82%B9%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/"/>
    <url>/2023/09/14/%E4%BD%BF%E7%94%A8keepalived%E5%81%9Anginx%E9%AB%98%E5%8F%AF%E7%94%A8-redis3%E8%8A%82%E7%82%B9%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h4 id="1、使用keepalived做nginx高可用。"><a href="#1、使用keepalived做nginx高可用。" class="headerlink" title="1、使用keepalived做nginx高可用。"></a>1、使用keepalived做nginx高可用。</h4><h5 id="1-1-环境架构图"><a href="#1-1-环境架构图" class="headerlink" title="1.1 环境架构图"></a>1.1 环境架构图</h5><p><img src="image-20230914090550143.png" alt="image-20230914090550143"></p><p>需要准备6台host主机，分别为</p><p>2台主机搭建keepalived(下文都简称KA)+HAProxy:10.0.0.133 10.0.0.134</p><p>2台NGINX web服务器:10.0.0.136 10.0.0.137</p><p>1台Client：10.0.0.138</p><p>1台DNS,解析地址10.0.0.100 <a href="http://www.xinqi.org/">www.xinqi.org</a>: 10.0.0.135</p><h5 id="1-2-分别在133和134上开始编译安装KA"><a href="#1-2-分别在133和134上开始编译安装KA" class="headerlink" title="1.2 分别在133和134上开始编译安装KA."></a>1.2 分别在133和134上开始编译安装KA.</h5><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">[root@Rocky8 ~]<span class="hljs-comment"># yum -y install gcc curl openssl-devel libnl3-devel net-snmp-devel</span><br>[root@Rocky8 ~]<span class="hljs-comment"># wget https://keepalived.org/software/keepalived-2.1.5.tar.gz</span><br>[root@Rocky8 ~]<span class="hljs-comment"># tar xvf keepalived-2.1.5.tar.gz -C /usr/local/src/</span><br>[root@Rocky8 keepalived-2.1.5]<span class="hljs-comment"># cd /usr/local/src/keepalived-2.1.5/</span><br>root@Rocky8 keepalived-2.1.5]<span class="hljs-comment"># ./configure --prefix=/usr/local/keepalived --disable-fwmark</span><br>[root@Rocky8 keepalived-2.1.5]<span class="hljs-comment"># make &amp;&amp; make install</span><br>[root@Rocky8 keepalived-2.1.5]<span class="hljs-comment"># cd</span><br>[root@Rocky8 ~]<span class="hljs-comment"># /usr/local/keepalived/sbin/keepalived -v</span><br>Keepalived v2.1.5 (07/13,2020)<br><br>Copyright(C) 2001-2020 Alexandre Cassen, &lt;acassen@gmail.com&gt;<br><br>Built with kernel headers <span class="hljs-keyword">for</span> Linux 4.18.0<br>Running on Linux 4.18.0-348.el8.0.2.x86_64 <span class="hljs-comment">#1 SMP Sun Nov 14 00:51:12 UTC 2021</span><br><br>configure options: --prefix=/usr/local/keepalived --disable-fwmark<br><br>Config options:  LVS VRRP VRRP_AUTH OLD_CHKSUM_COMPAT FIB_ROUTING<br><br>System options:  PIPE2 SIGNALFD INOTIFY_INIT1 VSYSLOG EPOLL_CREATE1 IPV4_DEVCONF IPV6_ADVANCED_API LIBNL3 RTA_ENCAP RTA_EXPIRES RTA_NEWDST RTA_PREF FRA_SUPPRESS_PREFIXLEN FRA_SUPPRESS_IFGROUP FRA_TUN_ID RTAX_CC_ALGO RTAX_QUICKACK RTEXT_FILTER_SKIP_STATS FRA_L3MDEV FRA_UID_RANGE RTAX_FASTOPEN_NO_COOKIE RTA_VIA FRA_OIFNAME FRA_PROTOCOL FRA_IP_PROTO FRA_SPORT_RANGE FRA_DPORT_RANGE RTA_TTL_PROPAGATE IFA_FLAGS IP_MULTICAST_ALL LWTUNNEL_ENCAP_MPLS LWTUNNEL_ENCAP_ILA NET_LINUX_IF_H_COLLISION LIBIPTC_LINUX_NET_IF_H_COLLISION LIBIPVS_NETLINK IPVS_DEST_ATTR_ADDR_FAMILY IPVS_SYNCD_ATTRIBUTES IPVS_64BIT_STATS VRRP_VMAC VRRP_IPVLAN IFLA_LINK_NETNSID CN_PROC SOCK_NONBLOCK SOCK_CLOEXEC O_PATH GLOB_BRACE INET6_ADDR_GEN_MODE VRF SCHED_RESET_ON_FORK<br><br><span class="hljs-comment">#创建配置文件,编译安装完成后默认不会生成配置文件，需要复制安装包内示例配置文件到指定目录下，否则无法启动服务。</span><br>[root@Rocky8 keepalived]<span class="hljs-comment"># mkdir /etc/keepalived</span><br>[root@Rocky8 keepalived]<span class="hljs-comment"># cp /usr/local/keepalived/etc/keepalived/keepalived.conf /etc/keepalived/</span><br>[root@Rocky8 keepalived]<span class="hljs-comment"># systemctl enable --now keepalived.service </span><br>Created symlink /etc/systemd/system/multi-user.target.wants/keepalived.service → /usr/lib/systemd/system/keepalived.service.<br><br><span class="hljs-comment">#创建子配置文件</span><br>[root@ka1 ~]<span class="hljs-comment"># cat /etc/keepalived/keepalived.conf</span><br>! Configuration File <span class="hljs-keyword">for</span> keepalived<br><br>global_defs &#123;<br>   router_id ka1.xinqi.com  <span class="hljs-comment">#这里133修改为ka1,134修改为ka2</span><br>   vrrp_skip_check_adv_addr<br>   vrrp_garp_interval 0<br>   vrrp_gna_interval 0<br>   vrrp_mcast_group4 230.0.0.1<br>&#125;<br>include /etc/keepalived/conf.d/*.conf <span class="hljs-comment">#指定子配置文件路径</span><br><br>[root@Rocky8 ~]<span class="hljs-comment"># cat /etc/sysctl.conf #启用ip_forward</span><br>net.ipv4.ip_forward = 1<br><br>[root@Rocky8 ~]<span class="hljs-comment"># cat /etc/keepalived/notify.sh </span><br><span class="hljs-comment">#编写邮件自动告警脚本</span><br><span class="hljs-comment">#!/bin/bash</span><br><br><span class="hljs-comment"># 配置邮件相关参数</span><br>contact=<span class="hljs-string">&#x27;477681339@qq.com&#x27;</span><br>email_send=<span class="hljs-string">&#x27;477681339@qq.com&#x27;</span><br>email_passwd=<span class="hljs-string">&#x27;xxxx&#x27;</span>  <br>email_smtp_server=<span class="hljs-string">&#x27;smtp.qq.com&#x27;</span><br><br><span class="hljs-comment"># 包含操作系统信息</span><br>. /etc/os-release<br><br><span class="hljs-comment"># 输出错误信息</span><br><span class="hljs-function"><span class="hljs-title">msg_error</span></span>() &#123;<br>  <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\033[1;31m<span class="hljs-variable">$1</span>\033[0m&quot;</span><br>&#125;<br><br><span class="hljs-comment"># 输出信息</span><br><span class="hljs-function"><span class="hljs-title">msg_info</span></span>() &#123;<br>  <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\033[1;32m<span class="hljs-variable">$1</span>\033[0m&quot;</span><br>&#125;<br><br><span class="hljs-comment"># 输出警告信息</span><br><span class="hljs-function"><span class="hljs-title">msg_warn</span></span>() &#123;<br>  <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\033[1;33m<span class="hljs-variable">$1</span>\033[0m&quot;</span><br>&#125;<br><br><span class="hljs-comment"># 输出彩色文本</span><br><span class="hljs-function"><span class="hljs-title">color</span></span> () &#123;<br>  RES_COL=60<br>  MOVE_TO_COL=<span class="hljs-string">&quot;echo -en \\033[<span class="hljs-variable">$&#123;RES_COL&#125;</span>G&quot;</span><br>  SETCOLOR_SUCCESS=<span class="hljs-string">&quot;echo -en \\033[1;32m&quot;</span><br>  SETCOLOR_FAILURE=<span class="hljs-string">&quot;echo -en \\033[1;31m&quot;</span><br>  SETCOLOR_WARNING=<span class="hljs-string">&quot;echo -en \\033[1;33m&quot;</span><br>  SETCOLOR_NORMAL=<span class="hljs-string">&quot;echo -en \E[0m&quot;</span><br>  <span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> &amp;&amp; <span class="hljs-variable">$MOVE_TO_COL</span><br>  <span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;[&quot;</span><br>  <span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span> = <span class="hljs-string">&quot;success&quot;</span> -o <span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span> = <span class="hljs-string">&quot;0&quot;</span> ] ;<span class="hljs-keyword">then</span><br>    <span class="hljs-variable">$&#123;SETCOLOR_SUCCESS&#125;</span><br>    <span class="hljs-built_in">echo</span> -n $<span class="hljs-string">&quot; OK &quot;</span><br>  <span class="hljs-keyword">elif</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span> = <span class="hljs-string">&quot;failure&quot;</span> -o <span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span> = <span class="hljs-string">&quot;1&quot;</span> ] ;<span class="hljs-keyword">then</span><br>    <span class="hljs-variable">$&#123;SETCOLOR_FAILURE&#125;</span><br>    <span class="hljs-built_in">echo</span> -n $<span class="hljs-string">&quot;FAILED&quot;</span><br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-variable">$&#123;SETCOLOR_WARNING&#125;</span><br>    <span class="hljs-built_in">echo</span> -n $<span class="hljs-string">&quot;WARNING&quot;</span><br>  <span class="hljs-keyword">fi</span><br>  <span class="hljs-variable">$&#123;SETCOLOR_NORMAL&#125;</span><br>  <span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;]&quot;</span><br>  <span class="hljs-built_in">echo</span><br>&#125;<br><br><span class="hljs-comment"># 安装sendemail工具</span><br><span class="hljs-function"><span class="hljs-title">install_sendemail</span></span> () &#123;<br>  <span class="hljs-keyword">if</span> [[ <span class="hljs-string">&quot;<span class="hljs-variable">$ID</span>&quot;</span> =~ rhel|centos|rocky ]];<span class="hljs-keyword">then</span><br>    rpm -q sendemail &amp;&gt; /dev/null || yum install -y sendemail<br>  <span class="hljs-keyword">elif</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$ID</span>&quot;</span> = <span class="hljs-string">&#x27;ubuntu&#x27;</span> ];<span class="hljs-keyword">then</span><br>    dpkg -l | grep -q sendemail || &#123; apt update; apt install -y libio-socket-ssl-perl libnet-ssleay-perl sendemail ; &#125;<br>  <span class="hljs-keyword">else</span><br>    color <span class="hljs-string">&quot;不支持此操作系统，退出!&quot;</span> 1<br>    <span class="hljs-built_in">exit</span><br>  <span class="hljs-keyword">fi</span><br>&#125;<br><br><span class="hljs-comment"># 发送邮件</span><br><span class="hljs-function"><span class="hljs-title">send_email</span></span> () &#123;<br>  <span class="hljs-built_in">local</span> email_receive=<span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span><br>  <span class="hljs-built_in">local</span> email_subject=<span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span><br>  <span class="hljs-built_in">local</span> email_message=<span class="hljs-string">&quot;<span class="hljs-variable">$3</span>&quot;</span><br>  sendemail -f <span class="hljs-variable">$email_send</span> -t <span class="hljs-variable">$email_receive</span> -u <span class="hljs-variable">$email_subject</span> -m <span class="hljs-variable">$email_message</span> -s <span class="hljs-variable">$email_smtp_server</span> -o message-charset=utf-8 -o tls=<span class="hljs-built_in">yes</span> -xu <span class="hljs-variable">$email_send</span> -xp <span class="hljs-variable">$email_passwd</span><br>  [ $? -eq 0 ] &amp;&amp; color <span class="hljs-string">&quot;邮件发送成功!&quot;</span> 0 || color <span class="hljs-string">&quot;邮件发送失败!&quot;</span> 1<br>&#125;<br><br><span class="hljs-comment"># 通知函数</span><br><span class="hljs-function"><span class="hljs-title">notify</span></span>() &#123;<br>  <span class="hljs-keyword">if</span> [[ <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> =~ ^(master|backup|fault)$ ]];<span class="hljs-keyword">then</span><br>    mailsubject=<span class="hljs-string">&quot;<span class="hljs-subst">$(hostname)</span> to be <span class="hljs-variable">$1</span>, vip floating&quot;</span><br>    mailbody=<span class="hljs-string">&quot;<span class="hljs-subst">$(date +&#x27;%F %T&#x27;)</span>: vrrp transition, <span class="hljs-subst">$(hostname)</span> changed to be <span class="hljs-variable">$1</span>&quot;</span><br>    send_email <span class="hljs-string">&quot;<span class="hljs-variable">$contact</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$mailsubject</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$mailbody</span>&quot;</span><br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Usage: <span class="hljs-subst">$(basename $0)</span> &#123;master|backup|fault&#125;&quot;</span><br>    <span class="hljs-built_in">exit</span> 1<br>  <span class="hljs-keyword">fi</span><br>&#125;<br><br><span class="hljs-comment"># 安装sendemail</span><br>install_sendemail<br><br><span class="hljs-comment"># 调用通知函数，传递命令行参数</span><br>notify <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span><br><br><br>[root@ka1 ~]<span class="hljs-comment">#chmod a+x /etc/keepalived/notify.sh #添加执行权限</span><br>[root@ka1 ~]<span class="hljs-comment">#vim /etc/keepalived/keepalived.conf #将有邮件告警添加进配置文件中，并重启服务是否会接收到邮件</span><br>vrrp_instance VI_1 &#123;<br>......<br>virtual_ipaddress &#123;<br>10.0.0.10 dev eth0 label eth0:1<br>&#125;<br>notify_master <span class="hljs-string">&quot;/etc/keepalived/notify.sh master&quot;</span><br>notify_backup <span class="hljs-string">&quot;/etc/keepalived/notify.sh backup&quot;</span><br>notify_fault <span class="hljs-string">&quot;/etc/keepalived/notify.sh fault&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><h5 id="1-3-在2个KA上搭建HAProxy-，并修改配置文件"><a href="#1-3-在2个KA上搭建HAProxy-，并修改配置文件" class="headerlink" title="1.3 在2个KA上搭建HAProxy ，并修改配置文件"></a>1.3 在2个KA上搭建HAProxy ，并修改配置文件</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#分别在133和134上使用以下脚本安装HAProxy</span><br>[root@Rocky8 ~]<span class="hljs-comment"># tree</span><br>.<br>├── anaconda-ks.cfg<br>├── haproxy-<span class="hljs-number">2.6</span>.<span class="hljs-number">15</span>.tar.gz<br>├── install_haproxy.sh<br>└── lua-<span class="hljs-number">5.4</span>.<span class="hljs-number">6</span>.tar.gz<br><br><span class="hljs-number">0</span> directories, <span class="hljs-number">4</span> files<br>[root@Rocky8 ~]<span class="hljs-comment"># vim install_haproxy.sh </span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#******************************************************************************</span><br><span class="hljs-comment">#Author:            xinqi66</span><br><span class="hljs-comment">#QQ:                477681339</span><br><span class="hljs-comment">#Date:              2023-09-08</span><br><span class="hljs-comment">#FileName:          install_haproxy.sh</span><br><span class="hljs-comment">#Description:       install haproxy for centos 7/8 &amp; ubuntu 18.04/20.04</span><br><span class="hljs-comment">#Copyright (C):     2023 All rights reserved</span><br><span class="hljs-comment">#******************************************************************************</span><br><br>HAPROXY_VERSION=<span class="hljs-number">2.6</span>.<span class="hljs-number">15</span><br>HAPROXY_FILE=haproxy-<span class="hljs-variable">$&#123;HAPROXY_VERSION&#125;</span>.tar.gz<br>LUA_VERSION=<span class="hljs-number">5.4</span>.<span class="hljs-number">6</span><br>LUA_FILE=lua-<span class="hljs-variable">$&#123;LUA_VERSION&#125;</span>.tar.gz<br>HAPROXY_INSTALL_DIR=<span class="hljs-regexp">/apps/</span>haproxy<br><br>SRC_DIR=<span class="hljs-regexp">/usr/</span>local/src<br>CWD=`pwd`<br>CPUS=`lscpu |awk <span class="hljs-string">&#x27;/^CPU\(s\)/&#123;print $2&#125;&#x27;</span>`<br>LOCAL_IP=$(hostname -I|awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>)<br><br>STATS_AUTH_USER=admin<br>STATS_AUTH_PASSWORD=<span class="hljs-number">123456</span><br><br>VIP=<span class="hljs-number">192.168</span>.<span class="hljs-number">10.100</span><br>MASTER1=<span class="hljs-number">192.168</span>.<span class="hljs-number">10.101</span><br>MASTER2=<span class="hljs-number">192.168</span>.<span class="hljs-number">10.102</span><br>MASTER3=<span class="hljs-number">192.168</span>.<span class="hljs-number">10.103</span><br><br>. <span class="hljs-regexp">/etc/</span>os-release<br><br>color () &#123;<br>    RES_COL=<span class="hljs-number">60</span><br>    MOVE_TO_COL=<span class="hljs-string">&quot;echo -en \\033[$&#123;RES_COL&#125;G&quot;</span><br>    SETCOLOR_SUCCESS=<span class="hljs-string">&quot;echo -en \\033[1;32m&quot;</span><br>    SETCOLOR_FAILURE=<span class="hljs-string">&quot;echo -en \\033[1;31m&quot;</span><br>    SETCOLOR_WARNING=<span class="hljs-string">&quot;echo -en \\033[1;33m&quot;</span><br>    SETCOLOR_NORMAL=<span class="hljs-string">&quot;echo -en \E[0m&quot;</span><br>    echo -n <span class="hljs-string">&quot;$1&quot;</span> &amp;&amp; <span class="hljs-variable">$MOVE_TO_COL</span><br>    echo -n <span class="hljs-string">&quot;[&quot;</span><br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$2</span> = <span class="hljs-string">&quot;success&quot;</span> -o <span class="hljs-variable">$2</span> = <span class="hljs-string">&quot;0&quot;</span> ] ;then<br>        <span class="hljs-variable">$&#123;SETCOLOR_SUCCESS&#125;</span><br>        echo -n $<span class="hljs-string">&quot;  OK  &quot;</span>    <br>    elif [ <span class="hljs-variable">$2</span> = <span class="hljs-string">&quot;failure&quot;</span> -o <span class="hljs-variable">$2</span> = <span class="hljs-string">&quot;1&quot;</span>  ] ;then <br>        <span class="hljs-variable">$&#123;SETCOLOR_FAILURE&#125;</span><br>        echo -n $<span class="hljs-string">&quot;FAILED&quot;</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-variable">$&#123;SETCOLOR_WARNING&#125;</span><br>        echo -n $<span class="hljs-string">&quot;WARNING&quot;</span><br>    fi<br>    <span class="hljs-variable">$&#123;SETCOLOR_NORMAL&#125;</span><br>    echo -n <span class="hljs-string">&quot;]&quot;</span><br>    echo <br>&#125;<br><br><br>check_file ()&#123;<br>    <span class="hljs-keyword">if</span> [ ! -e <span class="hljs-variable">$&#123;LUA_FILE&#125;</span> ];then<br>        color <span class="hljs-string">&quot;缺少$&#123;LUA_FILE&#125;文件!&quot;</span> <span class="hljs-number">1</span><br>        <span class="hljs-keyword">exit</span><br>    elif [ ! -e <span class="hljs-variable">$&#123;HAPROXY_FILE&#125;</span> ];then<br>        color <span class="hljs-string">&quot;缺少$&#123;HAPROXY_FILE&#125;文件!&quot;</span> <span class="hljs-number">1</span><br>        <span class="hljs-keyword">exit</span><br>    <span class="hljs-keyword">else</span><br>        color <span class="hljs-string">&quot;相关文件已准备!&quot;</span> <span class="hljs-number">0</span><br>    fi<br>&#125;<br><br>install_haproxy()&#123;<br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$ID</span> = <span class="hljs-string">&quot;centos&quot;</span> -o <span class="hljs-variable">$ID</span> = <span class="hljs-string">&quot;rocky&quot;</span> ];then<br>        yum -y install gcc make gcc-c++ glibc glibc-devel pcre pcre-devel openssl openssl-devel systemd-devel libtermcap-devel ncurses-devel libevent-devel readline-devel <br>    elif [ <span class="hljs-variable">$ID</span> = <span class="hljs-string">&quot;ubuntu&quot;</span> ];then<br>        apt update <br>        apt -y install gcc make openssl libssl-dev libpcre3 libpcre3-dev zlib1g-dev  libreadline-dev libsystemd-dev <br>    <span class="hljs-keyword">else</span><br>        color <span class="hljs-string">&quot;不支持此操作系统!&quot;</span> <span class="hljs-number">1</span><br>    fi<br>    [ $? -eq <span class="hljs-number">0</span> ] ||  &#123; color <span class="hljs-string">&#x27;HAPROXY 启动失败,退出!&#x27;</span> <span class="hljs-number">1</span>; <span class="hljs-keyword">exit</span>; &#125;<br>    tar xf <span class="hljs-variable">$&#123;LUA_FILE&#125;</span> -C <span class="hljs-variable">$&#123;SRC_DIR&#125;</span><br>    LUA_DIR=<span class="hljs-variable">$&#123;LUA_FILE%.tar*&#125;</span><br>    cd <span class="hljs-variable">$&#123;SRC_DIR&#125;</span>/<span class="hljs-variable">$&#123;LUA_DIR&#125;</span><br>    make all test<br>    cd <span class="hljs-variable">$&#123;CWD&#125;</span><br>    tar xf <span class="hljs-variable">$&#123;HAPROXY_FILE&#125;</span> -C <span class="hljs-variable">$&#123;SRC_DIR&#125;</span><br>    HAPROXY_DIR=<span class="hljs-variable">$&#123;HAPROXY_FILE%.tar*&#125;</span><br>    cd <span class="hljs-variable">$&#123;SRC_DIR&#125;</span>/<span class="hljs-variable">$&#123;HAPROXY_DIR&#125;</span><br>    make -j <span class="hljs-variable">$&#123;CPUS&#125;</span> ARCH=x86_64 TARGET=linux-glibc USE_PCRE=<span class="hljs-number">1</span> USE_OPENSSL=<span class="hljs-number">1</span> USE_ZLIB=<span class="hljs-number">1</span> USE_SYSTEMD=<span class="hljs-number">1</span> USE_CPU_AFFINITY=<span class="hljs-number">1</span> USE_LUA=<span class="hljs-number">1</span> LUA_INC=<span class="hljs-variable">$&#123;SRC_DIR&#125;</span><span class="hljs-regexp">/$&#123;LUA_DIR&#125;/</span>src<span class="hljs-regexp">/ LUA_LIB=$&#123;SRC_DIR&#125;/</span><span class="hljs-variable">$&#123;LUA_DIR&#125;</span><span class="hljs-regexp">/src/</span> PREFIX=<span class="hljs-variable">$&#123;HAPROXY_INSTALL_DIR&#125;</span><br>    make install PREFIX=<span class="hljs-variable">$&#123;HAPROXY_INSTALL_DIR&#125;</span><br>    [ $? -eq <span class="hljs-number">0</span> ] &amp;&amp; color <span class="hljs-string">&quot;HAPROXY编译安装成功&quot;</span> <span class="hljs-number">0</span> ||  &#123; color <span class="hljs-string">&quot;HAPROXY编译安装失败,退出!&quot;</span> <span class="hljs-number">1</span>;<span class="hljs-keyword">exit</span>; &#125;<br>    <br>    [ -L <span class="hljs-regexp">/usr/</span>sbin<span class="hljs-regexp">/haproxy ] || ln -s $&#123;HAPROXY_INSTALL_DIR&#125;/</span>sbin<span class="hljs-regexp">/haproxy /u</span>sr<span class="hljs-regexp">/sbin/</span> &amp;&gt; <span class="hljs-regexp">/dev/</span>null<br>    [ -d <span class="hljs-regexp">/etc/</span>haproxy ] || mkdir <span class="hljs-regexp">/etc/</span>haproxy &amp;&gt; <span class="hljs-regexp">/dev/</span>null  <br>    [ -d <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/haproxy/</span> ] || mkdir -p <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/haproxy/</span> &amp;&gt; <span class="hljs-regexp">/dev/</span>null<br>    cat &gt; <span class="hljs-regexp">/etc/</span>haproxy/haproxy.cfg &lt;&lt;-EOF<br>global<br>maxconn <span class="hljs-number">100000</span><br>stats socket <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/haproxy/</span>haproxy.sock mode <span class="hljs-number">600</span> level admin<br>uid <span class="hljs-number">99</span><br>gid <span class="hljs-number">99</span><br>daemon<br><br>pidfile <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/haproxy/</span>haproxy.pid<br>log <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span> local3 info<br><br>defaults<br>option http-keep-alive<br>option forwardfor<br>maxconn <span class="hljs-number">100000</span><br>mode http<br>timeout connect <span class="hljs-number">300000</span>ms<br>timeout client <span class="hljs-number">300000</span>ms<br>timeout server <span class="hljs-number">300000</span>ms<br><br>listen stats<br>    mode http<br>    bind <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:<span class="hljs-number">9999</span><br>    stats enable<br>    log global<br>    stats uri /haproxy-status<br>    stats auth <span class="hljs-variable">$&#123;STATS_AUTH_USER&#125;</span>:<span class="hljs-variable">$&#123;STATS_AUTH_PASSWORD&#125;</span><br><br><span class="hljs-comment">#listen kubernetes-6443</span><br><span class="hljs-comment">#    bind $&#123;VIP&#125;:6443</span><br><span class="hljs-comment">#    mode tcp</span><br><span class="hljs-comment">#    log global</span><br><span class="hljs-comment">#    server $&#123;MASTER1&#125; $&#123;MASTER1&#125;:6443 check inter 3000 fall 2 rise 5</span><br><span class="hljs-comment">#    server $&#123;MASTER2&#125; $&#123;MASTER2&#125;:6443 check inter 3000 fall 2 rise 5</span><br><span class="hljs-comment">#    server $&#123;MASTER3&#125; $&#123;MASTER2&#125;:6443 check inter 3000 fall 2 rise 5</span><br><br>EOF<br>    <span class="hljs-comment">#echo &quot;PATH=$&#123;HAPROXY_INSTALL_DIR&#125;/sbin:$&#123;PATH&#125;&quot; &gt; /etc/profile.d/haproxy.sh</span><br>groupadd -g <span class="hljs-number">99</span> haproxy<br>useradd -u <span class="hljs-number">99</span> -g haproxy -d <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/haproxy -M -r -s /</span>sbin/nologin haproxy<br>cat &gt; <span class="hljs-regexp">/lib/</span>systemd<span class="hljs-regexp">/system/</span>haproxy.service &lt;&lt;-EOF<br>[Unit]<br>Description=HAProxy Load Balancer<br>After=syslog.target network.target<br><br>[Service]<br>ExecStartPre=<span class="hljs-regexp">/usr/</span>sbin<span class="hljs-regexp">/haproxy -f /</span>etc<span class="hljs-regexp">/haproxy/</span>haproxy.cfg -c -q<br>ExecStart=<span class="hljs-regexp">/usr/</span>sbin<span class="hljs-regexp">/haproxy -Ws -f /</span>etc<span class="hljs-regexp">/haproxy/</span>haproxy.cfg -p <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/haproxy/</span>haproxy.pid<br>ExecReload=<span class="hljs-regexp">/bin/</span>kill -USR2 <span class="hljs-variable">$MAINPID</span><br><br>[Install]<br>WantedBy=multi-user.target<br>EOF<br>    systemctl daemon-reload<br>    systemctl enable --now haproxy <br>    systemctl is-active haproxy &amp;&gt; <span class="hljs-regexp">/dev/</span>null &amp;&amp; color <span class="hljs-string">&#x27;HAPROXY安装完成!&#x27;</span> <span class="hljs-number">0</span> ||  &#123; color <span class="hljs-string">&#x27;HAPROXY 启动失败,退出!&#x27;</span> <span class="hljs-number">1</span>; <span class="hljs-keyword">exit</span>; &#125;<br>    echo <span class="hljs-string">&quot;-------------------------------------------------------------------&quot;</span><br>    echo -e <span class="hljs-string">&quot;请访问链接: \E[32;1mhttp://$&#123;LOCAL_IP&#125;:9999/haproxy-status\E[0m&quot;</span><br>    echo -e <span class="hljs-string">&quot;用户和密码: \E[32;1m$&#123;STATS_AUTH_USER&#125;/$&#123;STATS_AUTH_PASSWORD&#125;\E[0m&quot;</span> <br>&#125;<br><br>main()&#123;<br>    check_file<br>    install_haproxy<br>&#125;<br><br>main<br><br><br>[root@Rocky8 ~]<span class="hljs-comment"># bash install_haproxy.sh #执行脚本</span><br>[root@ka1 ~]<span class="hljs-comment"># cat /etc/haproxy/haproxy.cfg #修改配置文件</span><br>global<br>~~<br>~~~<br>~~~~<br><br>listen xinqi_http <span class="hljs-comment">#添加后端2台web的地址，监听80端口。</span><br>bind <span class="hljs-number">10.0</span>.<span class="hljs-number">0.100</span>:<span class="hljs-number">80</span> <br>server web1 <span class="hljs-number">10.0</span>.<span class="hljs-number">0.137</span>:<span class="hljs-number">80</span> check <br>server web2 <span class="hljs-number">10.0</span>.<span class="hljs-number">0.136</span>:<span class="hljs-number">80</span> check<br></code></pre></td></tr></table></figure><p><img src="image-20230908134444815.png" alt="image-20230908134444815"></p><h5 id="1-4-创建HAproxy状态检测脚本，分别在133和134上添加。修改keeplived配置文件，配置虚拟VIP并-将检测脚本加入keeplived中。"><a href="#1-4-创建HAproxy状态检测脚本，分别在133和134上添加。修改keeplived配置文件，配置虚拟VIP并-将检测脚本加入keeplived中。" class="headerlink" title="1.4 创建HAproxy状态检测脚本，分别在133和134上添加。修改keeplived配置文件，配置虚拟VIP并 将检测脚本加入keeplived中。"></a>1.4 创建HAproxy状态检测脚本，分别在133和134上添加。修改keeplived配置文件，配置虚拟VIP并 将检测脚本加入keeplived中。</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@ka1 ~]# cat /etc/keepalived/check_haproxy.sh<br><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br>/usr/bin/killall -0 haproxy || systemctl restart haproxy<br><br>[root@ka1 ~]# vim /etc/keepalived/conf.d/xinqi.conf  # 10.0.0.133 ka1配置<br>vrrp_script check_haproxy &#123;  # 定义名为check_haproxy的VRRP脚本<br>    script &quot;/etc/keepalived/check_haproxy.sh&quot;  # 指定脚本路径<br>    interval 1  # 设置脚本执行间隔为1秒<br>    weight -30  # 设置脚本权重为-30<br>    fall 3  # 如果脚本连续3次失败，则切换状态<br>    rise 2  # 如果脚本连续2次成功，则切换状态回来<br>&#125;<br><br>vrrp_instance xinqi.org &#123;  # 定义VRRP实例 xinqi.org<br>    state MASTER  # 设置本节点为MASTER状态<br>    interface eth0  # 使用eth0接口<br>    virtual_router_id 66  # 设置虚拟路由器ID为66<br>    priority 100  # 设置优先级为100<br>    advert_int 1  # 设置广播间隔为1秒<br>    authentication &#123;  # 配置认证信息<br>        auth_type PASS  # 使用密码认证方式<br>        auth_pass 123456  # 设置认证密码为123456<br>    &#125;<br>    virtual_ipaddress &#123;  # 配置虚拟IP地址<br>        10.0.0.100/24 eth0 label eth0:1  # 设置虚拟IP地址及标签<br>    &#125;<br>    notify_master &quot;/etc/keepalived/notify.sh master&quot;  # 在切换到MASTER状态时执行通知脚本<br>    notify_backup &quot;/etc/keepalived/notify.sh backup&quot;  # 在切换到BACKUP状态时执行通知脚本<br>    notify_fault &quot;/etc/keepalived/notify.sh fault&quot;  # 在发生故障时执行通知脚本<br>    track_script &#123;  # 配置脚本跟踪<br>        check_haproxy  # 跟踪名为check_haproxy的脚本<br>    &#125;<br>&#125;<br><br>[root@ka2 ~]# cat /etc/keepalived/conf.d/xinqi.conf #10.0.0.134 KA2配置<br>vrrp_script check_haproxy &#123; <br>    script &quot;/etc/keepalived/check_haproxy.sh&quot;<br>    interval 1<br>    weight -30<br>    fall 3<br>    rise 2<br>    &#125;<br><br>vrrp_instance xinqi.org &#123;<br>    state BACKUP #设置节点为BACKUP<br>    interface eth0<br>    virtual_router_id 66<br>    priority 80   #这里权重设置80<br>    advert_int 1<br>    authentication &#123;<br>        auth_type PASS<br>        auth_pass 123456<br>    &#125;<br>    virtual_ipaddress &#123;<br>        10.0.0.100/24 eth0 label eth0:1<br>    &#125;<br>    notify_master &quot;/etc/keepalived/notify.sh master&quot;<br>    notify_backup &quot;/etc/keepalived/notify.sh backup&quot;<br>    notify_fault &quot;/etc/keepalived/notify.sh fault&quot;<br>    track_script &#123;<br>        check_haproxy<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h5 id="1-5-分别搭建136-137-两个NGINX-web站点。"><a href="#1-5-分别搭建136-137-两个NGINX-web站点。" class="headerlink" title="1.5 分别搭建136 137 两个NGINX web站点。"></a>1.5 分别搭建136 137 两个NGINX web站点。</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky8 ~]<span class="hljs-comment"># yum -y install nginx</span><br>[root@Rocky8 ~]<span class="hljs-comment"># cat /etc/nginx/conf.d/www.xinqi.org.conf </span><br>server &#123;<br>        listen       80 ;<br>server_name  www.xinqi66.org;<br>location / &#123;<br>          root         /data/nginx/www/html;<br><br>&#125;<br>&#125;<br>[root@Rocky8 ~]<span class="hljs-comment"># cat /data/nginx/www/html/index.html </span><br>&lt;h1&gt; www.xinqi66.org 136 &lt;/h1&gt; <span class="hljs-comment">#10.0.0.137这里写137以便于后期验证</span><br>[root@Rocky8 ~]<span class="hljs-comment"># systemctl enable --now nginx.service</span><br></code></pre></td></tr></table></figure><h5 id="1-6-分别在133和134上重启ka和HAProxy服务，做以下测试，关闭一台KA验证HA是否正常使用，关闭一台WEB在client上验证访问流量是否到另外一台web。"><a href="#1-6-分别在133和134上重启ka和HAProxy服务，做以下测试，关闭一台KA验证HA是否正常使用，关闭一台WEB在client上验证访问流量是否到另外一台web。" class="headerlink" title="1.6 分别在133和134上重启ka和HAProxy服务，做以下测试，关闭一台KA验证HA是否正常使用，关闭一台WEB在client上验证访问流量是否到另外一台web。"></a>1.6 分别在133和134上重启ka和HAProxy服务，做以下测试，关闭一台KA验证HA是否正常使用，关闭一台WEB在client上验证访问流量是否到另外一台web。</h5><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">[root<span class="hljs-meta">@ka1</span> ~]<span class="hljs-comment"># systemctl restart keepalived.service haproxy.service</span><br><br><span class="hljs-comment">#Client上访问www.xinqi66.org ,提前配置好DNS解析10.0.0.100 www.xinqi66.org</span><br>[root<span class="hljs-meta">@Rocky8</span> ~]<span class="hljs-comment"># curl www.xinqi66.org</span><br><span class="hljs-variable">&lt;h1&gt;</span> www.xinqi66.org 136 <span class="hljs-variable">&lt;/h1&gt;</span><br>[root<span class="hljs-meta">@Rocky8</span> ~]<span class="hljs-comment"># curl www.xinqi66.org</span><br><span class="hljs-variable">&lt;h1&gt;</span> www.xinqi66.org 137 <span class="hljs-variable">&lt;/h1&gt;</span><br>[root<span class="hljs-meta">@Rocky8</span> ~]<span class="hljs-comment"># curl www.xinqi66.org</span><br><span class="hljs-variable">&lt;h1&gt;</span> www.xinqi66.org 136 <span class="hljs-variable">&lt;/h1&gt;</span><br>[root<span class="hljs-meta">@Rocky8</span> ~]<span class="hljs-comment"># curl www.xinqi66.org</span><br><span class="hljs-variable">&lt;h1&gt;</span> www.xinqi66.org 137 <span class="hljs-variable">&lt;/h1&gt;</span><br><br><span class="hljs-comment">#关闭KA1验证</span><br>[root<span class="hljs-meta">@Rocky8</span> ~]<span class="hljs-comment"># curl www.xinqi66.org</span><br><span class="hljs-variable">&lt;h1&gt;</span> www.xinqi66.org 136 <span class="hljs-variable">&lt;/h1&gt;</span><br>[root<span class="hljs-meta">@Rocky8</span> ~]<span class="hljs-comment"># curl www.xinqi66.org</span><br><span class="hljs-variable">&lt;h1&gt;</span> www.xinqi66.org 137 <span class="hljs-variable">&lt;/h1&gt;</span><br>[root<span class="hljs-meta">@Rocky8</span> ~]<span class="hljs-comment"># curl www.xinqi66.org</span><br><span class="hljs-variable">&lt;h1&gt;</span> www.xinqi66.org 136 <span class="hljs-variable">&lt;/h1&gt;</span><br>[root<span class="hljs-meta">@Rocky8</span> ~]<span class="hljs-comment"># curl www.xinqi66.org</span><br><span class="hljs-variable">&lt;h1&gt;</span> www.xinqi66.org 137 <span class="hljs-variable">&lt;/h1&gt;</span><br><br><span class="hljs-comment">#关闭136 web1验证</span><br>[root<span class="hljs-meta">@Rocky8</span> ~]<span class="hljs-comment"># curl www.xinqi66.org</span><br><span class="hljs-variable">&lt;h1&gt;</span> www.xinqi66.org 137 <span class="hljs-variable">&lt;/h1&gt;</span><br>[root<span class="hljs-meta">@Rocky8</span> ~]<span class="hljs-comment"># curl www.xinqi66.org</span><br><span class="hljs-variable">&lt;h1&gt;</span> www.xinqi66.org 137 <span class="hljs-variable">&lt;/h1&gt;</span><br>[root<span class="hljs-meta">@Rocky8</span> ~]<span class="hljs-comment"># curl www.xinqi66.org</span><br><span class="hljs-variable">&lt;h1&gt;</span> www.xinqi66.org 137 <span class="hljs-variable">&lt;/h1&gt;</span><br>[root<span class="hljs-meta">@Rocky8</span> ~]<span class="hljs-comment"># curl www.xinqi66.org</span><br><span class="hljs-variable">&lt;h1&gt;</span> www.xinqi66.org 137 <span class="hljs-variable">&lt;/h1&gt;</span><br></code></pre></td></tr></table></figure><h4 id="2、做三个节点的redis集群。"><a href="#2、做三个节点的redis集群。" class="headerlink" title="2、做三个节点的redis集群。"></a>2、做三个节点的redis集群。</h4><h5 id="2-1-Redis集群"><a href="#2-1-Redis集群" class="headerlink" title="2.1 Redis集群"></a>2.1 Redis集群</h5><p>Redis-Cluster采用无中心结构，每个节点保存数据和整个集群状态，每个节点都和其他所有节点连接。<br> 一组Redis Cluster是由多个Redis实例组成，使用6实例，其中3个为主节点，3个为从节点。一旦有主节点发生故障的时候，Redis Cluster可以选举出对应的从节点成为新的主节点，继续对外服务，从而保证服务的高可用性<br> 注意：<br> １、当集群内一个Master以及其对应的Slave同时宕机，集群将无法提供服务。<br> ２、当存活的主节点数小于总节点数的一半时，整个集群就无法提供服务了。</p><p>原理架构图：</p><p><img src="953a02901ebe4c128f00fbdcf81e6e2a.png" alt="在这里插入图片描述"></p><p>部署架构图</p><p><img src="image-20230914102806565.png" alt="image-20230914102806565"></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">#每个Redis 节点采用相同的相同的Redis版本、相同的密码、硬件配置，所有Redis服务器必须没有任何数据，准备六台主机，地址如下：<span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.132</span> <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.133</span> <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.134</span> <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.135</span> <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.136</span> <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.137</span><br><br>#修改每台redis配置文件<br>[root@redis-node1 ~]# sed -i.bak -e <span class="hljs-string">&#x27;/masterauth/a masterauth 123456&#x27;</span> -<span class="hljs-string">e&#x27;/# cluster-enabled yes/a cluster-enabled yes&#x27;</span> -e <span class="hljs-string">&#x27;/# cluster-config-file nodes-6379.conf/a cluster-config-file nodes-6379.conf&#x27;</span> -e <span class="hljs-string">&#x27;/cluster-require- full-coverage yes/c cluster-require-full-coverage no&#x27;</span> /apps/redis/etc/redis.conf<br><br>[root@redis-node1 ~]# systemctl <span class="hljs-keyword">restart</span> redis<br><br>#使用命令创建集群；命令redis-cli的选项 <span class="hljs-comment">--cluster-replicas 1 表示每个master对应一个slave节点</span><br>[root@redis-node1 ~]# redis-cli -a <span class="hljs-number">123456</span> <span class="hljs-comment">--cluster create 10.0.0.132:6379 10.0.0.133:6379 10.0.0.134:6379 10.0.0.135:6379 10.0.0.136:6379 10.0.0.137:6379 --cluster-replicas 1</span><br></code></pre></td></tr></table></figure><p><img src="1690246435444.jpg?lastModify=1694657259" alt="1690246435444"></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@redis</span>-node1 ~]<span class="hljs-comment"># Adding replica 10.0.0.136:6379 to 10.0.0.132:6379</span><br>[root<span class="hljs-variable">@redis</span>-node1 ~]<span class="hljs-comment"># Adding replica 10.0.0.137:6379 to 10.0.0.133:6379</span><br>[root<span class="hljs-variable">@redis</span>-node1 ~]<span class="hljs-comment"># Adding replica 10.0.0.135:6379 to 10.0.0.134:6379</span><br><br><span class="hljs-comment">#验证集群状态</span><br>[root<span class="hljs-variable">@localhost</span> ~]<span class="hljs-comment"># redis-cli -a 123456 CLUSTER INFO</span><br><span class="hljs-symbol">Warning:</span> Using a password with <span class="hljs-string">&#x27;-a&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;-u&#x27;</span> option on the command line interface may <span class="hljs-keyword">not</span> be safe.<br><span class="hljs-symbol">cluster_state:</span>ok<br><span class="hljs-symbol">cluster_slots_assigned:</span><span class="hljs-number">16384</span><br><span class="hljs-symbol">cluster_slots_ok:</span><span class="hljs-number">16384</span><br><span class="hljs-symbol">cluster_slots_pfail:</span><span class="hljs-number">0</span><br><span class="hljs-symbol">cluster_slots_fail:</span><span class="hljs-number">0</span><br><span class="hljs-symbol">cluster_known_nodes:</span><span class="hljs-number">6</span>      <span class="hljs-comment">#节点数</span><br><span class="hljs-symbol">cluster_size:</span><span class="hljs-number">3</span>             <span class="hljs-comment">#三个集群</span><br><span class="hljs-symbol">cluster_current_epoch:</span><span class="hljs-number">6</span><br><span class="hljs-symbol">cluster_my_epoch:</span><span class="hljs-number">1</span><br><span class="hljs-symbol">cluster_stats_messages_ping_sent:</span><span class="hljs-number">467</span><br><span class="hljs-symbol">cluster_stats_messages_pong_sent:</span><span class="hljs-number">476</span><br><br>redis-cli -c -h <span class="hljs-number">10.0</span>.<span class="hljs-number">0.132</span> -a <span class="hljs-number">123456</span> --no-auth-warning <span class="hljs-comment">#以集群方式登录</span><br><span class="hljs-comment">#输入数据验证跳转</span><br><span class="hljs-meta prompt_">10.0.0.132:6379&gt;</span> set linux love<br>-&gt; Redirected to slot [<span class="hljs-number">12299</span>] located at <span class="hljs-number">10.0</span>.<span class="hljs-number">0.134</span><span class="hljs-symbol">:</span><span class="hljs-number">6379</span><br><span class="hljs-variable constant_">OK</span><br><br><span class="hljs-comment">#关闭node2节点验证故障转移</span><br>[root<span class="hljs-variable">@Rocky8</span> log]<span class="hljs-comment"># redis-cli -a 12345</span><br><span class="hljs-symbol">Warning:</span> Using a password with <span class="hljs-string">&#x27;-a&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;-u&#x27;</span> option on the command line interface may <span class="hljs-keyword">not</span> be safe.<br><span class="hljs-symbol">Warning:</span> <span class="hljs-variable constant_">AUTH</span> failed<br><span class="hljs-meta prompt_">127.0.0.1:6379&gt;</span> shutdown<br>(error) <span class="hljs-variable constant_">NOAUTH</span> Authentication required.<br><span class="hljs-meta prompt_">127.0.0.1:6379&gt;</span> auth <span class="hljs-number">123456</span><br><span class="hljs-variable constant_">OK</span><br><span class="hljs-meta prompt_">127.0.0.1:6379&gt;</span> shutdown<br><span class="hljs-keyword">not</span> connected&gt; exit<br>[root<span class="hljs-variable">@Rocky8</span> log]<span class="hljs-comment"># ss -ntl</span><br>State         Recv-Q        Send-Q               Local <span class="hljs-symbol">Address:</span>Port               Peer <span class="hljs-symbol">Address:</span>Port       Process        <br><span class="hljs-variable constant_">LISTEN</span>        <span class="hljs-number">0</span>             <span class="hljs-number">128</span>                        <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span><span class="hljs-symbol">:</span><span class="hljs-number">22</span>                      <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span><span class="hljs-symbol">:*</span>                         <br><span class="hljs-variable constant_">LISTEN</span>        <span class="hljs-number">0</span>             <span class="hljs-number">128</span>                           [<span class="hljs-symbol">:</span><span class="hljs-symbol">:</span>]<span class="hljs-symbol">:</span><span class="hljs-number">22</span>                         [<span class="hljs-symbol">:</span><span class="hljs-symbol">:</span>]<span class="hljs-symbol">:*</span>                         <br>[root<span class="hljs-variable">@Rocky8</span> log]<span class="hljs-comment"># redis-cli -a 123456 --cluster info 10.0.0.132:6379</span><br><span class="hljs-symbol">Warning:</span> Using a password with <span class="hljs-string">&#x27;-a&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;-u&#x27;</span> option on the command line interface may <span class="hljs-keyword">not</span> be safe.<br>Could <span class="hljs-keyword">not</span> connect to Redis at <span class="hljs-number">10.0</span>.<span class="hljs-number">0.133</span><span class="hljs-symbol">:</span><span class="hljs-number">6379</span>: Connection refused<br><span class="hljs-meta prompt_">10.0.0.132:6379 (d4c3d819...) -&gt;</span> <span class="hljs-number">3331</span> keys |<span class="hljs-params"> 5461 slots </span>| <span class="hljs-number">1</span> slaves.<br><span class="hljs-meta prompt_">10.0.0.137:6379 (6041e516...) -&gt;</span> <span class="hljs-number">3340</span> keys |<span class="hljs-params"> 5462 slots </span>| <span class="hljs-number">0</span> slaves. <span class="hljs-comment">#137已经升级为主节点</span><br><span class="hljs-meta prompt_">10.0.0.134:6379 (c39ec114...) -&gt;</span> <span class="hljs-number">3330</span> keys |<span class="hljs-params"> 5461 slots </span>| <span class="hljs-number">1</span> slaves.<br>[<span class="hljs-variable constant_">OK</span>] <span class="hljs-number">10001</span> keys <span class="hljs-keyword">in</span> <span class="hljs-number">3</span> masters.<br><span class="hljs-number">0.61</span> keys per slot on average.<br><br><span class="hljs-comment">#重新启动node2,自动成为从节点</span><br>[root<span class="hljs-variable">@Rocky8</span> data]<span class="hljs-comment"># systemctl restart redis</span><br><span class="hljs-comment">#查看自动生成的配置文件</span><br>[root<span class="hljs-variable">@Rocky8</span> data]<span class="hljs-comment"># cat /apps/redis/data/nodes-6379.conf </span><br>d4c3d8193b89fa8eb6c71467833c43d096b1490f <span class="hljs-number">10.0</span>.<span class="hljs-number">0.132</span><span class="hljs-symbol">:</span><span class="hljs-number">6379</span><span class="hljs-variable">@16379</span> master - <span class="hljs-number">0</span> <span class="hljs-number">1690248230198</span> <span class="hljs-number">1</span> connected <span class="hljs-number">0</span>-<span class="hljs-number">5460</span><br>6792543de315c7e4a0fe2f2c0809695d77ce345f <span class="hljs-number">10.0</span>.<span class="hljs-number">0.135</span><span class="hljs-symbol">:</span><span class="hljs-number">6379</span><span class="hljs-variable">@16379</span> slave c39ec114c57640888507ce0577cc702458ce8c2d <span class="hljs-number">0</span> <span class="hljs-number">1690248230198</span> <span class="hljs-number">3</span> connected<br>c39ec114c57640888507ce0577cc702458ce8c2d <span class="hljs-number">10.0</span>.<span class="hljs-number">0.134</span><span class="hljs-symbol">:</span><span class="hljs-number">6379</span><span class="hljs-variable">@16379</span> master - <span class="hljs-number">0</span> <span class="hljs-number">1690248230198</span> <span class="hljs-number">3</span> connected <span class="hljs-number">10923</span>-<span class="hljs-number">16383</span><br>6041e5163e49bb5851cc9e2f13fc154486d01a49 <span class="hljs-number">10.0</span>.<span class="hljs-number">0.137</span><span class="hljs-symbol">:</span><span class="hljs-number">6379</span><span class="hljs-variable">@16379</span> master - <span class="hljs-number">0</span> <span class="hljs-number">1690248230199</span> <span class="hljs-number">7</span> connected <span class="hljs-number">5461</span>-<span class="hljs-number">10922</span><br>476df290972e404d6a9db92970db854dc35f775f <span class="hljs-number">10.0</span>.<span class="hljs-number">0.136</span><span class="hljs-symbol">:</span><span class="hljs-number">6379</span><span class="hljs-variable">@16379</span> slave d4c3d8193b89fa8eb6c71467833c43d096b1490f <span class="hljs-number">0</span> <span class="hljs-number">1690248230198</span> <span class="hljs-number">1</span> connected<br>e02f94e221e5980c57653e9ca40fc278d06831e2 <span class="hljs-number">10.0</span>.<span class="hljs-number">0.133</span><span class="hljs-symbol">:</span><span class="hljs-number">6379</span><span class="hljs-variable">@16379</span> myself,slave 6041e5163e49bb5851cc9e2f13fc154486d01a49 <span class="hljs-number">0</span> <span class="hljs-number">1690248230193</span> <span class="hljs-number">7</span> connected<br>vars currentEpoch <span class="hljs-number">7</span> lastVoteEpoch <span class="hljs-number">0</span><br><br></code></pre></td></tr></table></figure><h5 id="2-2-主从容错切换迁移完成！"><a href="#2-2-主从容错切换迁移完成！" class="headerlink" title="2.2 主从容错切换迁移完成！"></a>2.2 主从容错切换迁移完成！</h5><h5 id="主从容错切换迁移的优点："><a href="#主从容错切换迁移的优点：" class="headerlink" title="主从容错切换迁移的优点："></a>主从容错切换迁移的优点：</h5><p> 一致性哈希算法的容错性：<br> 假设Node  C宕机，可以看到此时对象A、B、D不会受到影响，只有C对象被重定位到Node  D。一般的，在一致性Hash算法中，如果一台服务器不可用，则受影响的数据仅仅是此服务器到其环空间中前一台服务器（即沿着逆时针方向行走遇到的第一台服务器）之间数据，其它不会受到影响。简单说，就是C挂了，受到影响的只是B、C之间的数据，并且这些数据会转移到D进行存储。</p><p><img src="b08472def39441aab099af8e29e961fe.png" alt="在这里插入图片描述"></p><h5 id="2-3-添加redis节点-增加到4主4从。"><a href="#2-3-添加redis节点-增加到4主4从。" class="headerlink" title="2.3 添加redis节点,增加到4主4从。"></a>2.3 添加redis节点,增加到4主4从。</h5><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment">#准备2台主机,并使用脚本安装好redis数据库</span><br><br><span class="hljs-comment">#修改配置文件</span><br><span class="hljs-attribute">sed</span> -i.bak -e <span class="hljs-string">&#x27;/masterauth/a masterauth 123456&#x27;</span> -e<span class="hljs-string">&#x27;/# cluster-enabled yes/a cluster-enabled yes&#x27;</span> -e <span class="hljs-string">&#x27;/# cluster-config-file nodes-6379.conf/a cluster-config-file nodes-6379.conf&#x27;</span> -e <span class="hljs-string">&#x27;/cluster-require- full-coverage yes/c cluster-require-full-coverage no&#x27;</span> /apps/redis/etc/redis.conf<br><br><span class="hljs-comment">#将一台新的主机10.0.0.68加入集群,以下示例中10.0.0.58可以是任意存在的集群节点,此命令适用于Redis5以上版本</span><br>[root<span class="hljs-variable">@redis</span>-node1 ~]<span class="hljs-comment">#redis-cli -a 123456 --cluster add-node 10.0.0.38:6379 &lt;当前</span><br>任意集群节点&gt;:<span class="hljs-number">6379</span><br><br>[root<span class="hljs-variable">@Rocky8</span> ~]<span class="hljs-comment"># redis-cli -a 123456 --cluster add-node 10.0.0.138:6379 10.0.0.132:6379</span><br>Warning: Using a password with <span class="hljs-string">&#x27;-a&#x27;</span> or <span class="hljs-string">&#x27;-u&#x27;</span> option <span class="hljs-literal">on</span> the command line interface may not be safe.<br>&gt;&gt;&gt; Adding node <span class="hljs-number">10.0.0.138:6379</span> to cluster <span class="hljs-number">10.0.0.132:6379</span><br>&gt;&gt;&gt; Performing Cluster Check (using node <span class="hljs-number">10.0.0.132:6379</span>)<br>M: d4c3d8193b89fa8eb6c71467833c43d096b1490f <span class="hljs-number">10.0.0.132:6379</span><br>   slots:[<span class="hljs-number">0</span>-<span class="hljs-number">5460</span>] (<span class="hljs-number">5461</span> slots) master<br>   <span class="hljs-number">1</span> additional replica(s)<br>M: 6041e5163e49bb5851cc9e2f13fc154486d01a49 <span class="hljs-number">10.0.0.137:6379</span><br>   slots:[<span class="hljs-number">5461</span>-<span class="hljs-number">10922</span>] (<span class="hljs-number">5462</span> slots) master<br>   <span class="hljs-number">1</span> additional replica(s)<br>M: c39ec114c57640888507ce0577cc702458ce8c2d <span class="hljs-number">10.0.0.134:6379</span><br>   slots:[<span class="hljs-number">10923</span>-<span class="hljs-number">16383</span>] (<span class="hljs-number">5461</span> slots) master<br>   <span class="hljs-number">1</span> additional replica(s)<br>S: 6792543de315c7e4a0fe2f2c0809695d77ce345f <span class="hljs-number">10.0.0.135:6379</span><br>   slots: (<span class="hljs-number">0</span> slots) slave<br>   replicates c39ec114c57640888507ce0577cc702458ce8c2d<br>S: 476df290972e404d6a9db92970db854dc35f775f <span class="hljs-number">10.0.0.136:6379</span><br>   slots: (<span class="hljs-number">0</span> slots) slave<br>   replicates d4c3d8193b89fa8eb6c71467833c43d096b1490f<br>S: e02f94e221e5980c57653e9ca40fc278d06831e2 <span class="hljs-number">10.0.0.133:6379</span><br>   slots: (<span class="hljs-number">0</span> slots) slave<br>   replicates 6041e5163e49bb5851cc9e2f13fc154486d01a49<br>[OK] All nodes agree about slots configuration.<br>&gt;&gt;&gt; Check for open slots...<br>&gt;&gt;&gt; Check slots coverage...<br>[OK] All <span class="hljs-number">16384</span> slots covered.<br>&gt;&gt;&gt; Send CLUSTER MEET to node <span class="hljs-number">10.0.0.138:6379</span> to make it join the cluster.<br>[OK] New node added correctly.<br><br><span class="hljs-comment">#添加成功，成为新的主节点</span><br>[root<span class="hljs-variable">@Rocky8</span> ~]<span class="hljs-comment"># redis-cli -a 123456 --cluster info 10.0.0.132:6379</span><br>Warning: Using a password with <span class="hljs-string">&#x27;-a&#x27;</span> or <span class="hljs-string">&#x27;-u&#x27;</span> option <span class="hljs-literal">on</span> the command line interface may not be safe.<br><span class="hljs-number">10.0.0.132:6379</span> (d4c3d819...) -&gt; <span class="hljs-number">3331</span> keys | <span class="hljs-number">5461</span> slots | <span class="hljs-number">1</span> slaves.<br><span class="hljs-number">10.0.0.137:6379</span> (6041e516...) -&gt; <span class="hljs-number">3340</span> keys | <span class="hljs-number">5462</span> slots | <span class="hljs-number">1</span> slaves.<br><span class="hljs-number">10.0.0.134:6379</span> (c39ec114...) -&gt; <span class="hljs-number">3330</span> keys | <span class="hljs-number">5461</span> slots | <span class="hljs-number">1</span> slaves.<br><span class="hljs-number">10.0.0.138:6379</span> (c8a59583...) -&gt; <span class="hljs-number">0</span> keys | <span class="hljs-number">0</span> slots | <span class="hljs-number">0</span> slaves.<br>[OK] <span class="hljs-number">10001</span> keys in <span class="hljs-number">4</span> masters.<br><span class="hljs-number">0</span>.<span class="hljs-number">61</span> keys per slot <span class="hljs-literal">on</span> average<br><br><span class="hljs-comment">#开始给新节点分配槽位</span><br>redis-cli -a <span class="hljs-number">123456</span> --cluster reshard &lt;当前任意集群节点&gt;:<span class="hljs-number">6379</span><br><br>How many slots do you want to move (from <span class="hljs-number">1</span> to <span class="hljs-number">16384</span>)?<span class="hljs-number">4096</span> <span class="hljs-comment">#新分配多少个槽位</span><br>=<span class="hljs-number">16384</span>/master个数<br>What is the receiving node ID? d6e2eca6b338b717923f64866bd31d42e52edc98 <span class="hljs-comment">#新的</span><br>master的ID<br>Please enter all the source node IDs.<br>Type <span class="hljs-string">&#x27;all&#x27;</span> to use all the nodes as source nodes for the hash slots.<br>Type <span class="hljs-string">&#x27;done&#x27;</span> once you entered all the source nodes IDs.<br>Source node <span class="hljs-comment">#1: all #输入all,将哪些源主机的槽位分配给新的节点，all是自动在所有的redis</span><br>node选择划分，如果是从redis cluster删除某个主机可以使用此方式将指定主机上的槽位全部移动到别的<br>redis主机<br>......<br>Do you want to proceed with the proposed reshard plan (<span class="hljs-literal">yes</span>/<span class="hljs-literal">no</span>)? <span class="hljs-literal">yes</span> <span class="hljs-comment">#确认分配</span><br>......<br>Moving slot <span class="hljs-number">12280</span> from <span class="hljs-number">10.0.0.28:6379</span> to <span class="hljs-number">10.0.0.68:6379</span>: .<br>Moving slot <span class="hljs-number">12281</span> from <span class="hljs-number">10.0.0.28:6379</span> to <span class="hljs-number">10.0.0.68:6379</span>: .<br>Moving slot <span class="hljs-number">12282</span> from <span class="hljs-number">10.0.0.28:6379</span> to <span class="hljs-number">10.0.0.68:6379</span>:<br>Moving slot <span class="hljs-number">12283</span> from <span class="hljs-number">10.0.0.28:6379</span> to <span class="hljs-number">10.0.0.68:6379</span>: ..<br>Moving slot <span class="hljs-number">12284</span> from <span class="hljs-number">10.0.0.28:6379</span> to <span class="hljs-number">10.0.0.68:6379</span>:<br>Moving slot <span class="hljs-number">12285</span> from <span class="hljs-number">10.0.0.28:6379</span> to <span class="hljs-number">10.0.0.68:6379</span>: .<br>Moving slot <span class="hljs-number">12286</span> from <span class="hljs-number">10.0.0.28:6379</span> to <span class="hljs-number">10.0.0.68:6379</span>:<br>Moving slot <span class="hljs-number">12287</span> from <span class="hljs-number">10.0.0.28:6379</span> to <span class="hljs-number">10.0.0.68:6379</span>: ..<br>[root<span class="hljs-variable">@redis</span>-node1 ~]<span class="hljs-comment">#</span><br><br><span class="hljs-comment">#确认slot分配成功</span><br>[root<span class="hljs-variable">@Rocky8</span> ~]<span class="hljs-comment"># redis-cli -a 123456 --cluster check 10.0.0.132:6379</span><br>Warning: Using a password with <span class="hljs-string">&#x27;-a&#x27;</span> or <span class="hljs-string">&#x27;-u&#x27;</span> option <span class="hljs-literal">on</span> the command line interface may not be safe.<br><span class="hljs-number">10.0.0.132:6379</span> (d4c3d819...) -&gt; <span class="hljs-number">2511</span> keys | <span class="hljs-number">4096</span> slots | <span class="hljs-number">1</span> slaves.<br><span class="hljs-number">10.0.0.137:6379</span> (6041e516...) -&gt; <span class="hljs-number">2515</span> keys | <span class="hljs-number">4096</span> slots | <span class="hljs-number">1</span> slaves.<br><span class="hljs-number">10.0.0.134:6379</span> (c39ec114...) -&gt; <span class="hljs-number">2501</span> keys | <span class="hljs-number">4096</span> slots | <span class="hljs-number">1</span> slaves.<br><span class="hljs-number">10.0.0.138:6379</span> (c8a59583...) -&gt; <span class="hljs-number">2474</span> keys | <span class="hljs-number">4096</span> slots | <span class="hljs-number">0</span> slaves. <span class="hljs-comment">#分配成功</span><br>[OK] <span class="hljs-number">10001</span> keys in <span class="hljs-number">4</span> masters.<br><span class="hljs-number">0</span>.<span class="hljs-number">61</span> keys per slot <span class="hljs-literal">on</span> average.<br>&gt;&gt;&gt; Performing Cluster Check (using node <span class="hljs-number">10.0.0.132:6379</span>)<br>M: d4c3d8193b89fa8eb6c71467833c43d096b1490f <span class="hljs-number">10.0.0.132:6379</span><br>   slots:[<span class="hljs-number">1365</span>-<span class="hljs-number">5460</span>] (<span class="hljs-number">4096</span> slots) master<br>   <span class="hljs-number">1</span> additional replica(s)<br>M: 6041e5163e49bb5851cc9e2f13fc154486d01a49 <span class="hljs-number">10.0.0.137:6379</span><br>   slots:[<span class="hljs-number">6827</span>-<span class="hljs-number">10922</span>] (<span class="hljs-number">4096</span> slots) master<br>   <span class="hljs-number">1</span> additional replica(s)<br>M: c39ec114c57640888507ce0577cc702458ce8c2d <span class="hljs-number">10.0.0.134:6379</span><br>   slots:[<span class="hljs-number">12288</span>-<span class="hljs-number">16383</span>] (<span class="hljs-number">4096</span> slots) master<br>   <span class="hljs-number">1</span> additional replica(s)<br>S: 6792543de315c7e4a0fe2f2c0809695d77ce345f <span class="hljs-number">10.0.0.135:6379</span><br>   slots: (<span class="hljs-number">0</span> slots) slave<br>   replicates c39ec114c57640888507ce0577cc702458ce8c2d<br>S: 476df290972e404d6a9db92970db854dc35f775f <span class="hljs-number">10.0.0.136:6379</span><br>   slots: (<span class="hljs-number">0</span> slots) slave<br>   replicates d4c3d8193b89fa8eb6c71467833c43d096b1490f<br>M: c8a59583eb2d9d1c0bf3bc8080964543e6afe395 <span class="hljs-number">10.0.0.138:6379</span><br>   slots:[<span class="hljs-number">0</span>-<span class="hljs-number">1364</span>],[<span class="hljs-number">5461</span>-<span class="hljs-number">6826</span>],[<span class="hljs-number">10923</span>-<span class="hljs-number">12287</span>] (<span class="hljs-number">4096</span> slots) master  <span class="hljs-comment">##</span><br>S: e02f94e221e5980c57653e9ca40fc278d06831e2 <span class="hljs-number">10.0.0.133:6379</span><br>   slots: (<span class="hljs-number">0</span> slots) slave<br>   replicates 6041e5163e49bb5851cc9e2f13fc154486d01a49<br>[OK] All nodes agree about slots configuration.<br>&gt;&gt;&gt; Check for open slots...<br>&gt;&gt;&gt; Check slots coverage...<br>[OK] All <span class="hljs-number">16384</span> slots covered.<br><br><span class="hljs-comment">#为新添加的主节点指定新的从节点，以达到高可用功能</span><br>redis-cli -a <span class="hljs-number">123456</span> --cluster add-node <span class="hljs-number">10.0.0.139:6379</span> &lt;任意集群节点&gt;:<span class="hljs-number">6379</span> --cluster-slave --cluster-master-id c8a59583eb2d9d1c0bf3bc8080964543e6afe395<br><br>[root<span class="hljs-variable">@Rocky8</span> ~]<span class="hljs-comment"># redis-cli -a 123456 --cluster add-node 10.0.0.139:6379 10.0.0.132:6379 --cluster-slave --cluster-master-id c8a59583eb2d9d1c0bf3bc8080964543e6afe395</span><br>Warning: Using a password with <span class="hljs-string">&#x27;-a&#x27;</span> or <span class="hljs-string">&#x27;-u&#x27;</span> option <span class="hljs-literal">on</span> the command line interface may not be safe.<br>&gt;&gt;&gt; Adding node <span class="hljs-number">10.0.0.139:6379</span> to cluster <span class="hljs-number">10.0.0.132:6379</span><br>&gt;&gt;&gt; Performing Cluster Check (using node <span class="hljs-number">10.0.0.132:6379</span>)<br>M: d4c3d8193b89fa8eb6c71467833c43d096b1490f <span class="hljs-number">10.0.0.132:6379</span><br>   slots:[<span class="hljs-number">1365</span>-<span class="hljs-number">5460</span>] (<span class="hljs-number">4096</span> slots) master<br>   <span class="hljs-number">1</span> additional replica(s)<br>M: 6041e5163e49bb5851cc9e2f13fc154486d01a49 <span class="hljs-number">10.0.0.137:6379</span><br>   slots:[<span class="hljs-number">6827</span>-<span class="hljs-number">10922</span>] (<span class="hljs-number">4096</span> slots) master<br>   <span class="hljs-number">1</span> additional replica(s)<br>M: c39ec114c57640888507ce0577cc702458ce8c2d <span class="hljs-number">10.0.0.134:6379</span><br>   slots:[<span class="hljs-number">12288</span>-<span class="hljs-number">16383</span>] (<span class="hljs-number">4096</span> slots) master<br>   <span class="hljs-number">1</span> additional replica(s)<br>S: 6792543de315c7e4a0fe2f2c0809695d77ce345f <span class="hljs-number">10.0.0.135:6379</span><br>   slots: (<span class="hljs-number">0</span> slots) slave<br>   replicates c39ec114c57640888507ce0577cc702458ce8c2d<br>S: 476df290972e404d6a9db92970db854dc35f775f <span class="hljs-number">10.0.0.136:6379</span><br>   slots: (<span class="hljs-number">0</span> slots) slave<br>   replicates d4c3d8193b89fa8eb6c71467833c43d096b1490f<br>M: c8a59583eb2d9d1c0bf3bc8080964543e6afe395 <span class="hljs-number">10.0.0.138:6379</span><br>   slots:[<span class="hljs-number">0</span>-<span class="hljs-number">1364</span>],[<span class="hljs-number">5461</span>-<span class="hljs-number">6826</span>],[<span class="hljs-number">10923</span>-<span class="hljs-number">12287</span>] (<span class="hljs-number">4096</span> slots) master<br>S: e02f94e221e5980c57653e9ca40fc278d06831e2 <span class="hljs-number">10.0.0.133:6379</span><br>   slots: (<span class="hljs-number">0</span> slots) slave<br>   replicates 6041e5163e49bb5851cc9e2f13fc154486d01a49<br>[OK] All nodes agree about slots configuration.<br>&gt;&gt;&gt; Check for open slots...<br>&gt;&gt;&gt; Check slots coverage...<br>[OK] All <span class="hljs-number">16384</span> slots covered.<br>&gt;&gt;&gt; Send CLUSTER MEET to node <span class="hljs-number">10.0.0.139:6379</span> to make it join the cluster.<br>Waiting for the cluster to join<br><br>&gt;&gt;&gt; Configure node as replica of <span class="hljs-number">10.0.0.138:6379</span>.<br>[OK] New node added correctly.<br><br><span class="hljs-comment">#验证是否成功</span><br>root<span class="hljs-variable">@Rocky8</span> ~]<span class="hljs-comment"># redis-cli -a 123456 --cluster check 10.0.0.132:6379</span><br>Warning: Using a password with <span class="hljs-string">&#x27;-a&#x27;</span> or <span class="hljs-string">&#x27;-u&#x27;</span> option <span class="hljs-literal">on</span> the command line interface may not be safe.<br><span class="hljs-number">10.0.0.132:6379</span> (d4c3d819...) -&gt; <span class="hljs-number">2511</span> keys | <span class="hljs-number">4096</span> slots | <span class="hljs-number">1</span> slaves.<br><span class="hljs-number">10.0.0.137:6379</span> (6041e516...) -&gt; <span class="hljs-number">2515</span> keys | <span class="hljs-number">4096</span> slots | <span class="hljs-number">1</span> slaves.<br><span class="hljs-number">10.0.0.134:6379</span> (c39ec114...) -&gt; <span class="hljs-number">2501</span> keys | <span class="hljs-number">4096</span> slots | <span class="hljs-number">1</span> slaves.<br><span class="hljs-number">10.0.0.138:6379</span> (c8a59583...) -&gt; <span class="hljs-number">2474</span> keys | <span class="hljs-number">4096</span> slots | <span class="hljs-number">1</span> slaves.<br>[OK] <span class="hljs-number">10001</span> keys in <span class="hljs-number">4</span> masters.<br><span class="hljs-number">0</span>.<span class="hljs-number">61</span> keys per slot <span class="hljs-literal">on</span> average.<br>&gt;&gt;&gt; Performing Cluster Check (using node <span class="hljs-number">10.0.0.132:6379</span>)<br>M: d4c3d8193b89fa8eb6c71467833c43d096b1490f <span class="hljs-number">10.0.0.132:6379</span><br>   slots:[<span class="hljs-number">1365</span>-<span class="hljs-number">5460</span>] (<span class="hljs-number">4096</span> slots) master<br>   <span class="hljs-number">1</span> additional replica(s)<br>S: fae7372057f0604e99dc256e30d7a69a5e48d4c2 <span class="hljs-number">10.0.0.139:6379</span><br>   slots: (<span class="hljs-number">0</span> slots) slave<br>   replicates c8a59583eb2d9d1c0bf3bc8080964543e6afe395<br>M: 6041e5163e49bb5851cc9e2f13fc154486d01a49 <span class="hljs-number">10.0.0.137:6379</span><br>   slots:[<span class="hljs-number">6827</span>-<span class="hljs-number">10922</span>] (<span class="hljs-number">4096</span> slots) master<br>   <span class="hljs-number">1</span> additional replica(s)<br>M: c39ec114c57640888507ce0577cc702458ce8c2d <span class="hljs-number">10.0.0.134:6379</span><br>   slots:[<span class="hljs-number">12288</span>-<span class="hljs-number">16383</span>] (<span class="hljs-number">4096</span> slots) master<br>   <span class="hljs-number">1</span> additional replica(s)<br>S: 6792543de315c7e4a0fe2f2c0809695d77ce345f <span class="hljs-number">10.0.0.135:6379</span><br>   slots: (<span class="hljs-number">0</span> slots) slave<br>   replicates c39ec114c57640888507ce0577cc702458ce8c2d<br>S: 476df290972e404d6a9db92970db854dc35f775f <span class="hljs-number">10.0.0.136:6379</span><br>   slots: (<span class="hljs-number">0</span> slots) slave<br>   replicates d4c3d8193b89fa8eb6c71467833c43d096b1490f<br>M: c8a59583eb2d9d1c0bf3bc8080964543e6afe395 <span class="hljs-number">10.0.0.138:6379</span><br>   slots:[<span class="hljs-number">0</span>-<span class="hljs-number">1364</span>],[<span class="hljs-number">5461</span>-<span class="hljs-number">6826</span>],[<span class="hljs-number">10923</span>-<span class="hljs-number">12287</span>] (<span class="hljs-number">4096</span> slots) master<br>   <span class="hljs-number">1</span> additional replica(s)<br>S: e02f94e221e5980c57653e9ca40fc278d06831e2 <span class="hljs-number">10.0.0.133:6379</span><br>   slots: (<span class="hljs-number">0</span> slots) slave<br>   replicates 6041e5163e49bb5851cc9e2f13fc154486d01a49<br>[OK] All nodes agree about slots configuration.<br>&gt;&gt;&gt; Check for open slots...<br>&gt;&gt;&gt; Check slots coverage...<br>[OK] All <span class="hljs-number">16384</span> slots covered.<br></code></pre></td></tr></table></figure><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">redis-cli -a <span class="hljs-number">123456</span> --cluster del-<span class="hljs-keyword">node</span> <span class="hljs-title">&lt;任意集群节点的IP</span>&gt;:<span class="hljs-number">6379</span> cb028b83f9dc463d732f6e76ca6bbcd469d948a7<br><span class="hljs-comment">#cb028b83f9dc463d732f6e76ca6bbcd469d948a7是删除节点的ID #6.2.5删除节点后不会自动关闭监听和文档不匹配</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>搭建Harbor仓库用HAProxy实现高可用</title>
    <link href="/2023/09/11/%E6%90%AD%E5%BB%BAHarbor%E4%BB%93%E5%BA%93%E7%94%A8HAProxy%E5%AE%9E%E7%8E%B0%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    <url>/2023/09/11/%E6%90%AD%E5%BB%BAHarbor%E4%BB%93%E5%BA%93%E7%94%A8HAProxy%E5%AE%9E%E7%8E%B0%E9%AB%98%E5%8F%AF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h4 id="1、新增一个名称为test的bridge模式网络，网段为172-18-2-0-24，创建一个容器用test网络运行，要求能用宿主机网络访问。"><a href="#1、新增一个名称为test的bridge模式网络，网段为172-18-2-0-24，创建一个容器用test网络运行，要求能用宿主机网络访问。" class="headerlink" title="1、新增一个名称为test的bridge模式网络，网段为172.18.2.0/24，创建一个容器用test网络运行，要求能用宿主机网络访问。"></a>1、新增一个名称为test的bridge模式网络，网段为172.18.2.0/24，创建一个容器用test网络运行，要求能用宿主机网络访问。</h4><h5 id="1-1-创建一个名为test的bridge模式网络，并指定网段为172-18-2-0-24。"><a href="#1-1-创建一个名为test的bridge模式网络，并指定网段为172-18-2-0-24。" class="headerlink" title="1.1 创建一个名为test的bridge模式网络，并指定网段为172.18.2.0/24。"></a>1.1 创建一个名为test的bridge模式网络，并指定网段为172.18.2.0/24。</h5><figure class="highlight golo"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><pre><code class="hljs golo">[root<span class="hljs-meta">@Rocky</span>8 ~]<span class="hljs-comment"># docker network create -d bridge --subnet 172.18.2.0/24 --gateway 172.18.2.1 test</span><br><span class="hljs-number">75910</span>fb644e41a8f04795818274058d64d40302d7ef1aa03b23e836850889e8b<br><br>[root<span class="hljs-meta">@Rocky</span>8 ~]<span class="hljs-comment"># docker network ls</span><br>NETWORK ID     NAME      DRIVER    SCOPE<br>cd0076a8a42a   bridge    bridge    <span class="hljs-keyword">local</span><br>a5852151472e   host      host      <span class="hljs-keyword">local</span><br><span class="hljs-number">2</span>b5f21fbd25d   none      <span class="hljs-literal">null</span>      <span class="hljs-keyword">local</span><br><span class="hljs-number">75910</span>fb644e4   test      bridge    <span class="hljs-keyword">local</span> <span class="hljs-comment">#刚创建的brideg网络</span><br></code></pre></td></tr></table></figure><h5 id="1-2-运行容器，并将其连接到test网络。并且使用宿主机的网络命名空间来实现宿主机网络访问。"><a href="#1-2-运行容器，并将其连接到test网络。并且使用宿主机的网络命名空间来实现宿主机网络访问。" class="headerlink" title="1.2 运行容器，并将其连接到test网络。并且使用宿主机的网络命名空间来实现宿主机网络访问。"></a>1.2 运行容器，并将其连接到test网络。并且使用宿主机的网络命名空间来实现宿主机网络访问。</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@Rocky8 ~]# docker <span class="hljs-built_in">run</span> -it --rm --name aloine1 --network test alpine sh<br>/ #<span class="hljs-built_in"> ip </span>a<br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN qlen 1000<br>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>       valid_lft forever preferred_lft forever<br>10: eth0@if11: &lt;BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN&gt; mtu 1500 qdisc noqueue state UP <br>    link/ether 02:42:ac:12:02:02 brd ff:ff:ff:ff:ff:ff<br>    inet 172.18.2.2/24 brd 172.18.2.255 scope global eth0<br>       valid_lft forever preferred_lft forever<br>[root@Rocky8 ~]#<span class="hljs-built_in"> ping </span>172.18.2.2<span class="hljs-built_in"></span><br><span class="hljs-built_in">PING </span>172.18.2.2 (172.18.2.2) 56(84) bytes of data.<br>64 bytes <span class="hljs-keyword">from</span> 172.18.2.2: <span class="hljs-attribute">icmp_seq</span>=1 <span class="hljs-attribute">ttl</span>=64 <span class="hljs-attribute">time</span>=0.103 ms<br>64 bytes <span class="hljs-keyword">from</span> 172.18.2.2: <span class="hljs-attribute">icmp_seq</span>=2 <span class="hljs-attribute">ttl</span>=64 <span class="hljs-attribute">time</span>=0.042 ms<br>64 bytes <span class="hljs-keyword">from</span> 172.18.2.2: <span class="hljs-attribute">icmp_seq</span>=3 <span class="hljs-attribute">ttl</span>=64 <span class="hljs-attribute">time</span>=0.047 ms<br></code></pre></td></tr></table></figure><h4 id="2、创建一个harbor镜像仓库，把镜像上传到harbor仓库并能从里面下载镜像创建容器。"><a href="#2、创建一个harbor镜像仓库，把镜像上传到harbor仓库并能从里面下载镜像创建容器。" class="headerlink" title="2、创建一个harbor镜像仓库，把镜像上传到harbor仓库并能从里面下载镜像创建容器。"></a>2、创建一个harbor镜像仓库，把镜像上传到harbor仓库并能从里面下载镜像创建容器。</h4><h5 id="2-1-分别准备docker-compose-、harbor安装包文件，准备2台host主机，一台安装docker-IP-10-0-0-133-一台安装（Harbor）。"><a href="#2-1-分别准备docker-compose-、harbor安装包文件，准备2台host主机，一台安装docker-IP-10-0-0-133-一台安装（Harbor）。" class="headerlink" title="2.1 分别准备docker compose 、harbor安装包文件，准备2台host主机，一台安装docker(IP:10.0.0.133),一台安装（Harbor）。"></a>2.1 分别准备docker compose 、harbor安装包文件，准备2台host主机，一台安装docker(IP:10.0.0.133),一台安装（Harbor）。</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/goharbor/</span>harbor <span class="hljs-comment">#harbor github网址</span><br>https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/goharbor/</span>harbor/releases <span class="hljs-comment">#下载地址</span><br></code></pre></td></tr></table></figure><h5 id="2-2-在10-0-0-136使用脚本安装docker、docker-compose-、harbor。"><a href="#2-2-在10-0-0-136使用脚本安装docker、docker-compose-、harbor。" class="headerlink" title="2.2 在10.0.0.136使用脚本安装docker、docker compose 、harbor。"></a>2.2 在10.0.0.136使用脚本安装docker、docker compose 、harbor。</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@Rocky8 ~]<span class="hljs-comment"># tree  #将下载好的hatbor文件和脚本文件放在一个目录下</span><br>.<br>├── harbor-offline-installer-v2.<span class="hljs-number">5.2</span>.tgz<br>├── docker-compose-linux-x86_64<br>└── install_harbor.sh<br><br>[root@Rocky8 ~]<span class="hljs-comment"># vim install_harbor.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#********************************************************************</span><br><span class="hljs-comment">#Author:            xinqi66</span><br><span class="hljs-comment">#QQ:                477681339</span><br><span class="hljs-comment">#Date:              2023-09-08</span><br><span class="hljs-comment">#FileName:          install_harbor.sh</span><br><span class="hljs-comment">#Description:       The test script</span><br><span class="hljs-comment">#Copyright (C):     2023 All rights reserved</span><br><span class="hljs-comment">#********************************************************************</span><br><br><br>DOCKER_VERSION=<span class="hljs-string">&quot;20.10.10&quot;</span><br>UBUNTU_DOCKER_VERSION=<span class="hljs-string">&quot;5:$&#123;DOCKER_VERSION&#125;~3-0~`lsb_release -si`-`lsb_release -cs`&quot;</span><br>DOCKER_COMPOSE_VERSION=<span class="hljs-number">2.6</span>.<span class="hljs-number">1</span><br><span class="hljs-comment">#DOCKER_COMPOSE_VERSION=1.29.2</span><br>DOCKER_COMPOSE_FILE=docker-compose-linux-x86_64<br>HARBOR_VERSION=<span class="hljs-number">2.5</span>.<span class="hljs-number">2</span><br>HARBOR_BASE=/apps<br><span class="hljs-comment">#HARBOR_NAME=www.xinqi66.org</span><br>HARBOR_NAME=`hostname -I|awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>`<br>HARBOR_IP=`hostname -I|awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>`<br>HARBOR_ADMIN_PASSWORD=<span class="hljs-number">123456</span><br><br>COLOR_SUCCESS=<span class="hljs-string">&quot;echo -e \\033[1;32m&quot;</span><br>COLOR_FAILURE=<span class="hljs-string">&quot;echo -e \\033[1;31m&quot;</span><br><span class="hljs-keyword">END</span>=<span class="hljs-string">&quot;\033[m&quot;</span><br><br>. <span class="hljs-regexp">/etc/</span>os-release<br><br>color () &#123;<br>    RES_COL=<span class="hljs-number">60</span><br>    MOVE_TO_COL=<span class="hljs-string">&quot;echo -en \\033[$&#123;RES_COL&#125;G&quot;</span><br>    SETCOLOR_SUCCESS=<span class="hljs-string">&quot;echo -en \\033[1;32m&quot;</span><br>    SETCOLOR_FAILURE=<span class="hljs-string">&quot;echo -en \\033[1;31m&quot;</span><br>    SETCOLOR_WARNING=<span class="hljs-string">&quot;echo -en \\033[1;33m&quot;</span><br>    SETCOLOR_NORMAL=<span class="hljs-string">&quot;echo -en \E[0m&quot;</span><br>    echo -n <span class="hljs-string">&quot;$1&quot;</span> &amp;&amp; <span class="hljs-variable">$MOVE_TO_COL</span><br>    echo -n <span class="hljs-string">&quot;[&quot;</span><br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$2</span> = <span class="hljs-string">&quot;success&quot;</span> -o <span class="hljs-variable">$2</span> = <span class="hljs-string">&quot;0&quot;</span> ] ;then<br>        <span class="hljs-variable">$&#123;SETCOLOR_SUCCESS&#125;</span><br>        echo -n $<span class="hljs-string">&quot;  OK  &quot;</span>    <br>    elif [ <span class="hljs-variable">$2</span> = <span class="hljs-string">&quot;failure&quot;</span> -o <span class="hljs-variable">$2</span> = <span class="hljs-string">&quot;1&quot;</span>  ] ;then <br>        <span class="hljs-variable">$&#123;SETCOLOR_FAILURE&#125;</span><br>        echo -n $<span class="hljs-string">&quot;FAILED&quot;</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-variable">$&#123;SETCOLOR_WARNING&#125;</span><br>        echo -n $<span class="hljs-string">&quot;WARNING&quot;</span><br>    fi<br>    <span class="hljs-variable">$&#123;SETCOLOR_NORMAL&#125;</span><br>    echo -n <span class="hljs-string">&quot;]&quot;</span><br>    echo <br>&#125;<br><br><br>install_docker()&#123;<br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$ID</span> = <span class="hljs-string">&quot;centos&quot;</span> -o <span class="hljs-variable">$ID</span> = <span class="hljs-string">&quot;rocky&quot;</span> ];then<br>        <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$VERSION_ID</span> = <span class="hljs-string">&quot;7&quot;</span> ];then<br>            cat &gt;  <span class="hljs-regexp">/etc/yum</span>.repos.d/docker.repo  &lt;&lt;EOF<br>[docker]<br>name=docker<br>gpgcheck=<span class="hljs-number">0</span><br><span class="hljs-comment">#baseurl=https://mirrors.aliyun.com/docker-ce/linux/centos/7/x86_64/stable/</span><br>baseurl=https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/docker-ce/</span>linux<span class="hljs-regexp">/centos/</span><span class="hljs-number">7</span><span class="hljs-regexp">/x86_64/</span>stable/<br>EOF<br>        <span class="hljs-keyword">else</span>     <br>            cat &gt;  <span class="hljs-regexp">/etc/yum</span>.repos.d/docker.repo  &lt;&lt;EOF<br>[docker]<br>name=docker<br>gpgcheck=<span class="hljs-number">0</span><br><span class="hljs-comment">#baseurl=https://mirrors.aliyun.com/docker-ce/linux/centos/8/x86_64/stable/</span><br>baseurl=https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/docker-ce/</span>linux<span class="hljs-regexp">/centos/</span><span class="hljs-number">8</span><span class="hljs-regexp">/x86_64/</span>stable/<br>EOF<br>        fi<br>    yum clean all <br>        <span class="hljs-variable">$&#123;COLOR_FAILURE&#125;</span> <span class="hljs-string">&quot;Docker有以下版本&quot;</span><span class="hljs-variable">$&#123;END&#125;</span><br>        yum list docker-ce --showduplicates<br>        <span class="hljs-variable">$&#123;COLOR_FAILURE&#125;</span><span class="hljs-string">&quot;5秒后即将安装: docker-&quot;</span><span class="hljs-variable">$&#123;DOCKER_VERSION&#125;</span><span class="hljs-string">&quot; 版本.....&quot;</span><span class="hljs-variable">$&#123;END&#125;</span><br>        <span class="hljs-variable">$&#123;COLOR_FAILURE&#125;</span><span class="hljs-string">&quot;如果想安装其它Docker版本，请按ctrl+c键退出，修改版本再执行&quot;</span><span class="hljs-variable">$&#123;END&#125;</span><br>        sleep <span class="hljs-number">5</span><br>        yum -y install docker-ce-<span class="hljs-variable">$DOCKER_VERSION</span> docker-ce-cli-<span class="hljs-variable">$DOCKER_VERSION</span>  \<br>            || &#123; color <span class="hljs-string">&quot;Base,Extras的yum源失败,请检查yum源配置&quot;</span> <span class="hljs-number">1</span>;<span class="hljs-keyword">exit</span>; &#125;<br>    <span class="hljs-keyword">else</span><br>    dpkg -s docker-ce &amp;&gt; <span class="hljs-regexp">/dev/</span>null &amp;&amp; <span class="hljs-variable">$COLOR</span><span class="hljs-string">&quot;Docker已安装，退出&quot;</span> <span class="hljs-number">1</span> &amp;&amp; <span class="hljs-keyword">exit</span><br>        apt update || &#123; color <span class="hljs-string">&quot;更新包索引失败&quot;</span> <span class="hljs-number">1</span> ; <span class="hljs-keyword">exit</span> <span class="hljs-number">1</span>; &#125;  <br>        apt  -y install apt-transport-https ca-certificates curl software-properties-common || \<br>            &#123; color <span class="hljs-string">&quot;安装相关包失败&quot;</span> <span class="hljs-number">1</span> ; <span class="hljs-keyword">exit</span> <span class="hljs-number">2</span>;  &#125;  <br>        curl -fsSL https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/docker-ce/</span>linux<span class="hljs-regexp">/ubuntu/g</span>pg | sudo apt-key add -<br>        add-apt-repository <span class="hljs-string">&quot;deb [arch=amd64] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;</span><br>        apt update<br>        <span class="hljs-variable">$&#123;COLOR_FAILURE&#125;</span> <span class="hljs-string">&quot;Docker有以下版本&quot;</span><span class="hljs-variable">$&#123;END&#125;</span><br>        apt-cache madison docker-ce<br>        <span class="hljs-variable">$&#123;COLOR_FAILURE&#125;</span><span class="hljs-string">&quot;5秒后即将安装: docker-&quot;</span><span class="hljs-variable">$&#123;UBUNTU_DOCKER_VERSION&#125;</span><span class="hljs-string">&quot; 版本.....&quot;</span><span class="hljs-variable">$&#123;END&#125;</span><br>        <span class="hljs-variable">$&#123;COLOR_FAILURE&#125;</span><span class="hljs-string">&quot;如果想安装其它Docker版本，请按ctrl+c键退出，修改版本再执行&quot;</span><span class="hljs-variable">$&#123;END&#125;</span><br>        sleep <span class="hljs-number">5</span><br>        apt -y  install docker-ce=<span class="hljs-variable">$&#123;UBUNTU_DOCKER_VERSION&#125;</span> docker-ce-cli=<span class="hljs-variable">$&#123;UBUNTU_DOCKER_VERSION&#125;</span><br>    fi<br>    <span class="hljs-keyword">if</span> [ $? -eq <span class="hljs-number">0</span> ];then<br>        color <span class="hljs-string">&quot;安装软件包成功&quot;</span>  <span class="hljs-number">0</span><br>    <span class="hljs-keyword">else</span><br>        color <span class="hljs-string">&quot;安装软件包失败，请检查网络配置&quot;</span> <span class="hljs-number">1</span><br>        <span class="hljs-keyword">exit</span><br>    fi<br>        <br>    mkdir -p <span class="hljs-regexp">/etc/</span>docker<br>    tee <span class="hljs-regexp">/etc/</span>docker/daemon.json &lt;&lt;-<span class="hljs-string">&#x27;EOF&#x27;</span><br>&#123;<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;https://si7y70hh.mirror.aliyuncs.com&quot;</span>]<br>&#125;<br>EOF<br>    systemctl daemon-reload<br>    systemctl enable docker<br>    systemctl restart docker<br>    docker version &amp;&amp; color <span class="hljs-string">&quot;Docker 安装成功&quot;</span> <span class="hljs-number">0</span> ||  color <span class="hljs-string">&quot;Docker 安装失败&quot;</span> <span class="hljs-number">1</span><br>echo <span class="hljs-string">&#x27;alias rmi=&quot;docker images -qa|xargs docker rmi -f&quot;&#x27;</span> &gt;&gt; ~/.bashrc<br>echo <span class="hljs-string">&#x27;alias rmc=&quot;docker ps -qa|xargs docker rm -f&quot;&#x27;</span> &gt;&gt; ~/.bashrc<br>&#125;<br><br><br><br>install_docker_compose()&#123;<br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$ID</span> = <span class="hljs-string">&quot;centos&quot;</span> -o <span class="hljs-variable">$ID</span> = <span class="hljs-string">&quot;rocky&quot;</span> ];then<br>        <span class="hljs-variable">$&#123;COLOR_SUCCESS&#125;</span><span class="hljs-string">&quot;开始安装 Docker compose.....&quot;</span><span class="hljs-variable">$&#123;END&#125;</span><br>        sleep <span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> [ ! -e  <span class="hljs-variable">$&#123;DOCKER_COMPOSE_FILE&#125;</span> ];then<br>            <span class="hljs-comment">#curl -L https://github.com/docker/compose/releases/download/$&#123;DOCKER_COMPOSE_VERSION&#125;/$&#123;DOCKER_COMPOSE_FILE&#125; -o /usr/bin/docker-compose</span><br>            curl -L https:<span class="hljs-regexp">//g</span>et.daocloud.io<span class="hljs-regexp">/docker/</span>compose<span class="hljs-regexp">/releases/</span>download<span class="hljs-regexp">/v$&#123;DOCKER_COMPOSE_VERSION&#125;/</span>docker-compose-$(uname -s)-$(uname -m) -o <span class="hljs-regexp">/usr/</span>bin/docker-compose<br>        <span class="hljs-keyword">else</span><br>            mv <span class="hljs-variable">$&#123;DOCKER_COMPOSE_FILE&#125;</span> <span class="hljs-regexp">/usr/</span>bin/docker-compose<br>        fi<br>        chmod +x <span class="hljs-regexp">/usr/</span>bin/docker-compose<br>    <span class="hljs-keyword">else</span> <br>        apt -y install docker-compose<br>    fi<br>    <span class="hljs-keyword">if</span> docker-compose --version ;then<br>        <span class="hljs-variable">$&#123;COLOR_SUCCESS&#125;</span><span class="hljs-string">&quot;Docker Compose 安装完成&quot;</span><span class="hljs-variable">$&#123;END&#125;</span> <br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-variable">$&#123;COLOR_FAILURE&#125;</span><span class="hljs-string">&quot;Docker compose 安装失败&quot;</span><span class="hljs-variable">$&#123;END&#125;</span><br>        <span class="hljs-keyword">exit</span><br>    fi<br>&#125;<br><br>install_harbor()&#123;<br>    <span class="hljs-variable">$&#123;COLOR_SUCCESS&#125;</span><span class="hljs-string">&quot;开始安装 Harbor.....&quot;</span><span class="hljs-variable">$&#123;END&#125;</span><br>    sleep <span class="hljs-number">1</span><br>    <span class="hljs-keyword">if</span>  [ ! -e  harbor-offline-installer-v<span class="hljs-variable">$&#123;HARBOR_VERSION&#125;</span>.tgz ] ;then<br>        wget https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/goharbor/</span>harbor<span class="hljs-regexp">/releases/</span>download<span class="hljs-regexp">/v$&#123;HARBOR_VERSION&#125;/</span>harbor-offline-installer-v<span class="hljs-variable">$&#123;HARBOR_VERSION&#125;</span>.tgz || <span class="hljs-variable">$&#123;COLOR_FAILURE&#125;</span> <span class="hljs-string">&quot;下载失败!&quot;</span> <span class="hljs-variable">$&#123;END&#125;</span><br>    fi<br>    [ -d <span class="hljs-variable">$&#123;HARBOR_BASE&#125;</span> ] ||  mkdir <span class="hljs-variable">$&#123;HARBOR_BASE&#125;</span><br>    tar xvf harbor-offline-installer-v<span class="hljs-variable">$&#123;HARBOR_VERSION&#125;</span>.tgz  -C <span class="hljs-variable">$&#123;HARBOR_BASE&#125;</span><br>    cd <span class="hljs-variable">$&#123;HARBOR_BASE&#125;</span>/harbor<br>    cp harbor.yml.tmpl harbor.yml<br>    sed -ri <span class="hljs-string">&quot;/^hostname/s/reg.mydomain.com/$&#123;HARBOR_NAME&#125;/&quot;</span> harbor.yml<br>    sed -ri <span class="hljs-string">&quot;/^https/s/(https:)/#\1/&quot;</span> harbor.yml<br>    sed -ri <span class="hljs-string">&quot;s/(port: 443)/#\1/&quot;</span> harbor.yml<br>    sed -ri <span class="hljs-string">&quot;/certificate:/s/(.*)/#\1/&quot;</span> harbor.yml<br>    sed -ri <span class="hljs-string">&quot;/private_key:/s/(.*)/#\1/&quot;</span> harbor.yml<br>    sed -ri <span class="hljs-string">&quot;s/Harbor12345/$&#123;HARBOR_ADMIN_PASSWORD&#125;/&quot;</span> harbor.yml<br>    sed -i <span class="hljs-string">&#x27;s#^data_volume: /data#data_volume: /data/harbor#&#x27;</span> harbor.yml<br>    <span class="hljs-comment">#mkdir -p /data/harbor</span><br>    <span class="hljs-variable">$&#123;HARBOR_BASE&#125;</span><span class="hljs-regexp">/harbor/i</span>nstall.sh &amp;&amp; <span class="hljs-variable">$&#123;COLOR_SUCCESS&#125;</span><span class="hljs-string">&quot;Harbor 安装完成&quot;</span><span class="hljs-variable">$&#123;END&#125;</span> ||  <span class="hljs-variable">$&#123;COLOR_FAILURE&#125;</span><span class="hljs-string">&quot;Harbor 安装失败&quot;</span><span class="hljs-variable">$&#123;END&#125;</span><br>    cat &gt; <span class="hljs-regexp">/lib/</span>systemd<span class="hljs-regexp">/system/</span>harbor.service &lt;&lt;EOF<br>[Unit]<br>Description=Harbor<br>After=docker.service systemd-networkd.service systemd-resolved.service<br>Requires=docker.service<br>Documentation=http:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/vmware/</span>harbor<br><br>[Service]<br>Type=simple<br>Restart=on-failure<br>RestartSec=<span class="hljs-number">5</span><br>ExecStart=<span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/docker-compose -f  $&#123;HARBOR_BASE&#125;/</span>harbor/docker-compose.yml up<br>ExecStop=<span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/docker-compose -f $&#123;HARBOR_BASE&#125;/</span>harbor/docker-compose.yml down<br><br>[Install]<br>WantedBy=multi-user.target<br>EOF<br><br>systemctl daemon-reload <br>systemctl enable  harbor &amp;&gt;<span class="hljs-regexp">/dev/</span>null ||  <span class="hljs-variable">$&#123;COLOR&#125;</span><span class="hljs-string">&quot;Harbor已配置为开机自动启动&quot;</span><span class="hljs-variable">$&#123;END&#125;</span><br>    <span class="hljs-keyword">if</span> [ $?  -eq <span class="hljs-number">0</span> ];then  <br>        echo <br>        color <span class="hljs-string">&quot;Harbor安装完成!&quot;</span> <span class="hljs-number">0</span><br>        echo <span class="hljs-string">&quot;-------------------------------------------------------------------&quot;</span><br>        echo -e <span class="hljs-string">&quot;请访问链接: \E[32;1mhttp://$&#123;HARBOR_IP&#125;/\E[0m&quot;</span> <br>echo -e <span class="hljs-string">&quot;用户和密码: \E[32;1madmin/$&#123;HARBOR_ADMIN_PASSWORD&#125;\E[0m&quot;</span> <br>    <span class="hljs-keyword">else</span><br>        color <span class="hljs-string">&quot;Harbor安装失败!&quot;</span> <span class="hljs-number">1</span><br>        <span class="hljs-keyword">exit</span><br>    fi <br>&#125;<br><br><br><br>docker info  &amp;&gt; <span class="hljs-regexp">/dev/</span>null  &amp;&amp; <span class="hljs-variable">$&#123;COLOR_FAILURE&#125;</span><span class="hljs-string">&quot;Docker已安装&quot;</span><span class="hljs-variable">$&#123;END&#125;</span> || install_docker<br><br>docker-compose --version &amp;&gt; <span class="hljs-regexp">/dev/</span>null &amp;&amp; <span class="hljs-variable">$&#123;COLOR_FAILURE&#125;</span><span class="hljs-string">&quot;Docker Compose已安装&quot;</span><span class="hljs-variable">$&#123;END&#125;</span> || install_docker_compose<br><br>install_harbor<br></code></pre></td></tr></table></figure><h5 id="2-3-登陆Harbor-web页面，账号admin-密码123456"><a href="#2-3-登陆Harbor-web页面，账号admin-密码123456" class="headerlink" title="2.3 登陆Harbor web页面，账号admin,密码123456"></a>2.3 登陆Harbor web页面，账号admin,密码123456<img src="image-20230906151707752.png" alt="image-20230906151707752"></h5><h5 id="2-4-新建项目test。"><a href="#2-4-新建项目test。" class="headerlink" title="2.4 新建项目test。"></a>2.4 新建项目test。</h5><p><img src="image-20230906151810239.png" alt="image-20230906151810239"></p><p><img src="image-20230906151901510.png" alt="image-20230906151901510"></p><p><img src="image-20230906151935460.png" alt="image-20230906151935460"></p><h5 id="2-5-开始在10-0-0-133上传镜像，先安装好docker和准备好需要上传的镜像文件。"><a href="#2-5-开始在10-0-0-133上传镜像，先安装好docker和准备好需要上传的镜像文件。" class="headerlink" title="2.5 开始在10.0.0.133上传镜像，先安装好docker和准备好需要上传的镜像文件。"></a>2.5 开始在10.0.0.133上传镜像，先安装好docker和准备好需要上传的镜像文件。</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@Rocky8 ~]<span class="hljs-comment"># cat /etc/docker/daemon.json #在daemon.json文件中添加harbor服务器信任，因为这边使用http没有使用https不添加信任的话，上传镜像会报错。</span><br>&#123;<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;https://lhpac0xk.mirror.aliyuncs.com&quot;</span>],<br>  <span class="hljs-string">&quot;insecure-registries&quot;</span>:[<span class="hljs-string">&quot;10.0.0.136&quot;</span>]<br>&#125;<br><br>[root@Rocky8 ~]<span class="hljs-comment"># docker login 10.0.0.136 #先登陆Hatbor</span><br>Username: admin  <br>Password: <br>WARNING! Your password will be stored unencrypted <span class="hljs-keyword">in</span> <span class="hljs-regexp">/root/</span>.docker/config.json.<br>Configure a credential helper to remove this warning. See<br>https:<span class="hljs-regexp">//</span>docs.docker.com<span class="hljs-regexp">/engine/</span>reference<span class="hljs-regexp">/commandline/</span>login/<span class="hljs-comment">#credentials-store</span><br><br>[root@Rocky8 ~]<span class="hljs-comment"># cat .docker/config.json #查看登陆信息</span><br>&#123;<br><span class="hljs-string">&quot;auths&quot;</span>: &#123;<br><span class="hljs-string">&quot;10.0.0.136&quot;</span>: &#123;<br><span class="hljs-string">&quot;auth&quot;</span>: <span class="hljs-string">&quot;YWRtaW46MTIzNDU2&quot;</span><br>&#125;<br>&#125;<br>&#125;<br><br>[root@Rocky8 ~]<span class="hljs-comment"># docker tag nginx-rocky2:1.20 10.0.0.136/test/nginx-rocky2:1.20 #给需要上传的镜像添加标签</span><br>[root@Rocky8 ~]<span class="hljs-comment"># docker push 10.0.0.136/test/nginx-rocky2:1.20 #上传镜像</span><br>The push refers to repository [<span class="hljs-number">10.0</span>.<span class="hljs-number">0.136</span><span class="hljs-regexp">/test/</span>nginx-rocky2]<br><span class="hljs-number">8644</span>a12385cf: Pushed <br><span class="hljs-number">3977</span>ac14dc8c: Pushed <br>b584a47f16e4: Pushed <br>f2f1bf5c3748: Pushed <br><span class="hljs-number">65</span>dbea0a4b39: Pushed <br><span class="hljs-number">1.20</span>: digest: sha256:da1791b11a5293dea7889d9e84c05ac6a3cf97a171ae40d75508899c3bac06c2 size: <span class="hljs-number">1368</span><br></code></pre></td></tr></table></figure><h5 id="2-6-在web页面查看镜像是否上传成功。"><a href="#2-6-在web页面查看镜像是否上传成功。" class="headerlink" title="2.6. 在web页面查看镜像是否上传成功。"></a>2.6. 在web页面查看镜像是否上传成功。</h5><p><img src="image-20230906154644387.png" alt="image-20230906154644387"></p><h5 id="2-7-拉取镜像。"><a href="#2-7-拉取镜像。" class="headerlink" title="2.7 拉取镜像。"></a>2.7 拉取镜像。</h5><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-string">[root@Rocky8 ~]</span># docker pull <span class="hljs-number">10</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">136</span>/test/nginx-rocky2:<span class="hljs-number">1</span>.<span class="hljs-number">20</span><br><span class="hljs-number">1</span>.<span class="hljs-number">20</span>: Pulling from test/nginx-rocky2<br>72a2451028f1: Pull complete <br>83000833e0cd: Pull complete <br>f78a8841ef05: Pull complete <br>0ec5e5f245f1: Pull complete <br>b1f4dc192ebb: Pull complete <br>Digest: sha256:da1791b11a5293dea7889d9e84c05ac6a3cf97a171ae40d75508899c3bac06c2<br>Status: Downloaded newer image for <span class="hljs-number">10</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">136</span>/test/nginx-rocky2:<span class="hljs-number">1</span>.<span class="hljs-number">20</span><br><span class="hljs-number">10.0.0.136</span>/test/nginx-rocky2:<span class="hljs-number">1</span>.<span class="hljs-number">20</span><br><span class="hljs-string">[root@Rocky8 ~]</span># docker images<br>REPOSITORY                     TAG             IMAGE ID       CREATED         SIZE<br><span class="hljs-number">10.0.0.136</span>/test/nginx-rocky2   <span class="hljs-number">1</span>.<span class="hljs-number">20</span>            80ce005ca7b7   <span class="hljs-number">3</span> days ago      528MB<br><span class="hljs-number">10.0.0.136</span>/test/mysql          <span class="hljs-number">8</span>.<span class="hljs-number">0</span>.<span class="hljs-number">29</span>-oracle   33037edcac9b   <span class="hljs-number">14</span> months ago   444MB<br><br></code></pre></td></tr></table></figure><h4 id="3、用haproxy实现两个web服务器的负载均衡。"><a href="#3、用haproxy实现两个web服务器的负载均衡。" class="headerlink" title="3、用haproxy实现两个web服务器的负载均衡。"></a>3、用haproxy实现两个web服务器的负载均衡。</h4><h5 id="3-1-使用haproxy实现两个harbor镜像仓库的HA和负载均衡"><a href="#3-1-使用haproxy实现两个harbor镜像仓库的HA和负载均衡" class="headerlink" title="3.1 使用haproxy实现两个harbor镜像仓库的HA和负载均衡"></a>3.1 使用haproxy实现两个harbor镜像仓库的HA和负载均衡</h5><p>环境准备</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">准备<span class="hljs-number">5</span>台主机分别为<br><span class="hljs-number">10.0.0.137</span>,<span class="hljs-number">138</span> 安装好harbor服务<br><span class="hljs-number">10.0.0.134</span> HAproxy<br><span class="hljs-number">192.168.10.200</span> cleant<br>DNS解析服务器  解析：www.xinqi66.org <span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">10</span>.<span class="hljs-number">100</span><br></code></pre></td></tr></table></figure><p>架构图</p><p><img src="image-20230908104207289.png" alt="image-20230908104207289"></p><h5 id="3-2-在安装好的harbor上实现高可用"><a href="#3-2-在安装好的harbor上实现高可用" class="headerlink" title="3.2 在安装好的harbor上实现高可用"></a>3.2 在安装好的harbor上实现高可用</h5><h5 id="分别在harbor137和138上配置双向同步。新建仓库目标和，复制管理项目，137地址指向138。138地址指向137。"><a href="#分别在harbor137和138上配置双向同步。新建仓库目标和，复制管理项目，137地址指向138。138地址指向137。" class="headerlink" title="分别在harbor137和138上配置双向同步。新建仓库目标和，复制管理项目，137地址指向138。138地址指向137。"></a>分别在harbor137和138上配置双向同步。新建仓库目标和，复制管理项目，137地址指向138。138地址指向137。</h5><p><img src="image-20230908104726984.png" alt="image-20230908104726984"></p><p><img src="image-20230908104919935.png" alt="image-20230908104919935"></p><p><img src="image-20230908105042285.png" alt="image-20230908105042285"></p><h5 id="3-3-创建复制规则"><a href="#3-3-创建复制规则" class="headerlink" title="3.3 创建复制规则"></a>3.3 创建复制规则</h5><p><img src="image-20230908105437732.png" alt="image-20230908105437732"></p><p><img src="image-20230908105254845.png" alt="image-20230908105254845"></p><p><img src="image-20230908105323990.png" alt="image-20230908105323990"></p><h5 id="3-4-分别在137和138上上传镜像查看镜像是否能够复制到对方仓库中"><a href="#3-4-分别在137和138上上传镜像查看镜像是否能够复制到对方仓库中" class="headerlink" title="3.4 分别在137和138上上传镜像查看镜像是否能够复制到对方仓库中"></a>3.4 分别在137和138上上传镜像查看镜像是否能够复制到对方仓库中</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@Rocky8 ~]<span class="hljs-comment"># cat /etc/docker/daemon.json #添加信任地址</span><br>&#123;<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;https://lhpac0xk.mirror.aliyuncs.com&quot;</span>],<br>  <span class="hljs-string">&quot;insecure-registries&quot;</span>:[<span class="hljs-string">&quot;10.0.0.137&quot;</span>,<span class="hljs-string">&quot;10.0.0.138&quot;</span>]<br>&#125;<br>[root@Rocky8 ~]<span class="hljs-comment"># systemctl restart docker.service #重启服务</span><br><br><span class="hljs-comment">#登陆137</span><br>[root@Rocky8 ~]<span class="hljs-comment"># docker login 10.0.0.137</span><br>Username: admin<br>Password: <br>WARNING! Your password will be stored unencrypted <span class="hljs-keyword">in</span> <span class="hljs-regexp">/root/</span>.docker/config.json.<br>Configure a credential helper to remove this warning. See<br>https:<span class="hljs-regexp">//</span>docs.docker.com<span class="hljs-regexp">/engine/</span>reference<span class="hljs-regexp">/commandline/</span>login/<span class="hljs-comment">#credentials-store</span><br><br>Login Succeeded<br><span class="hljs-comment">#登陆138</span><br>[root@Rocky8 ~]<span class="hljs-comment"># docker login 10.0.0.138 </span><br>Username: admin  <br>Password: <br>WARNING! Your password will be stored unencrypted <span class="hljs-keyword">in</span> <span class="hljs-regexp">/root/</span>.docker/config.json.<br>Configure a credential helper to remove this warning. See<br>https:<span class="hljs-regexp">//</span>docs.docker.com<span class="hljs-regexp">/engine/</span>reference<span class="hljs-regexp">/commandline/</span>login/<span class="hljs-comment">#credentials-store</span><br><br>Login Succeeded<br><br><br><br>[root@Rocky8 ~]<span class="hljs-comment"># docker push 10.0.0.137/hatest/mysql:8.0.29-oracle</span><br>The push refers to repository [<span class="hljs-number">10.0</span>.<span class="hljs-number">0.137</span><span class="hljs-regexp">/hatest/my</span>sql]<br><span class="hljs-number">8613</span>b3ca0560: Pushed <br>ffce1106e775: Pushed <br><span class="hljs-number">25</span>dc86c6646d: Pushed <br><span class="hljs-number">4</span>b2f0167d834: Pushed <br><span class="hljs-number">5162</span>a1b305a9: Pushed <br><span class="hljs-number">35</span>dd272baf55: Pushed <br>ea8b5bae0f85: Pushed <br>c1b9bd4130df: Pushed <br>f1ea50319462: Pushed <br><span class="hljs-number">27</span>df4ae8cdd9: Pushed <br>c6c89a36c214: Pushed <br><span class="hljs-number">8.0</span>.<span class="hljs-number">29</span>-oracle: digest: sha256:<span class="hljs-number">44</span>f98f4dd825a945d2a6a4b7b2f14127b5d07c5aaa07d9d232c2<br>[root@Rocky8 ~]<span class="hljs-comment"># crontab -l</span><br></code></pre></td></tr></table></figure><p><img src="image-20230908111116050.png" alt="image-20230908111116050"></p><h5 id="3-5-配置HAProxy作为反向代理"><a href="#3-5-配置HAProxy作为反向代理" class="headerlink" title="3.5 配置HAProxy作为反向代理"></a>3.5 配置HAProxy作为反向代理</h5><h5 id="3-6-使用脚本编译安装HAProxy-先下载lua和HAProxy源码编译包"><a href="#3-6-使用脚本编译安装HAProxy-先下载lua和HAProxy源码编译包" class="headerlink" title="3.6 使用脚本编译安装HAProxy,先下载lua和HAProxy源码编译包"></a>3.6 使用脚本编译安装HAProxy,先下载lua和HAProxy源码编译包</h5><p><a href="http://www.lua.org/download.html">http://www.lua.org/download.html</a>     lua下载地址</p><p><a href="http://www.haproxy.org/#down">http://www.haproxy.org/#down</a>          HAProxy下载地址</p><p><a href="http://www.haproxy.org/download/2.6/src/haproxy-2.6.15.tar.gz">http://www.haproxy.org/download/2.6/src/haproxy-2.6.15.tar.gz</a></p><p><img src="image-20230908133432932.png" alt="image-20230908133432932"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@Rocky8 ~]<span class="hljs-comment"># tree</span><br>.<br>├── anaconda-ks.cfg<br>├── haproxy-<span class="hljs-number">2.6</span>.<span class="hljs-number">15</span>.tar.gz<br>├── install_haproxy.sh<br>└── lua-<span class="hljs-number">5.4</span>.<span class="hljs-number">6</span>.tar.gz<br><br><span class="hljs-number">0</span> directories, <span class="hljs-number">4</span> files<br>[root@Rocky8 ~]<span class="hljs-comment"># vim install_haproxy.sh </span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#******************************************************************************</span><br><span class="hljs-comment">#Author:            xinqi66</span><br><span class="hljs-comment">#QQ:                477681339</span><br><span class="hljs-comment">#Date:              2023-09-08</span><br><span class="hljs-comment">#FileName:          install_haproxy.sh</span><br><span class="hljs-comment">#Description:       install haproxy for centos 7/8 &amp; ubuntu 18.04/20.04</span><br><span class="hljs-comment">#Copyright (C):     2023 All rights reserved</span><br><span class="hljs-comment">#******************************************************************************</span><br><br>HAPROXY_VERSION=<span class="hljs-number">2.6</span>.<span class="hljs-number">15</span><br>HAPROXY_FILE=haproxy-<span class="hljs-variable">$&#123;HAPROXY_VERSION&#125;</span>.tar.gz<br>LUA_VERSION=<span class="hljs-number">5.4</span>.<span class="hljs-number">6</span><br>LUA_FILE=lua-<span class="hljs-variable">$&#123;LUA_VERSION&#125;</span>.tar.gz<br>HAPROXY_INSTALL_DIR=<span class="hljs-regexp">/apps/</span>haproxy<br><br>SRC_DIR=<span class="hljs-regexp">/usr/</span>local/src<br>CWD=`pwd`<br>CPUS=`lscpu |awk <span class="hljs-string">&#x27;/^CPU\(s\)/&#123;print $2&#125;&#x27;</span>`<br>LOCAL_IP=$(hostname -I|awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>)<br><br>STATS_AUTH_USER=admin<br>STATS_AUTH_PASSWORD=<span class="hljs-number">123456</span><br><br>VIP=<span class="hljs-number">192.168</span>.<span class="hljs-number">10.100</span><br>MASTER1=<span class="hljs-number">192.168</span>.<span class="hljs-number">10.101</span><br>MASTER2=<span class="hljs-number">192.168</span>.<span class="hljs-number">10.102</span><br>MASTER3=<span class="hljs-number">192.168</span>.<span class="hljs-number">10.103</span><br><br>. <span class="hljs-regexp">/etc/</span>os-release<br><br>color () &#123;<br>    RES_COL=<span class="hljs-number">60</span><br>    MOVE_TO_COL=<span class="hljs-string">&quot;echo -en \\033[$&#123;RES_COL&#125;G&quot;</span><br>    SETCOLOR_SUCCESS=<span class="hljs-string">&quot;echo -en \\033[1;32m&quot;</span><br>    SETCOLOR_FAILURE=<span class="hljs-string">&quot;echo -en \\033[1;31m&quot;</span><br>    SETCOLOR_WARNING=<span class="hljs-string">&quot;echo -en \\033[1;33m&quot;</span><br>    SETCOLOR_NORMAL=<span class="hljs-string">&quot;echo -en \E[0m&quot;</span><br>    echo -n <span class="hljs-string">&quot;$1&quot;</span> &amp;&amp; <span class="hljs-variable">$MOVE_TO_COL</span><br>    echo -n <span class="hljs-string">&quot;[&quot;</span><br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$2</span> = <span class="hljs-string">&quot;success&quot;</span> -o <span class="hljs-variable">$2</span> = <span class="hljs-string">&quot;0&quot;</span> ] ;then<br>        <span class="hljs-variable">$&#123;SETCOLOR_SUCCESS&#125;</span><br>        echo -n $<span class="hljs-string">&quot;  OK  &quot;</span>    <br>    elif [ <span class="hljs-variable">$2</span> = <span class="hljs-string">&quot;failure&quot;</span> -o <span class="hljs-variable">$2</span> = <span class="hljs-string">&quot;1&quot;</span>  ] ;then <br>        <span class="hljs-variable">$&#123;SETCOLOR_FAILURE&#125;</span><br>        echo -n $<span class="hljs-string">&quot;FAILED&quot;</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-variable">$&#123;SETCOLOR_WARNING&#125;</span><br>        echo -n $<span class="hljs-string">&quot;WARNING&quot;</span><br>    fi<br>    <span class="hljs-variable">$&#123;SETCOLOR_NORMAL&#125;</span><br>    echo -n <span class="hljs-string">&quot;]&quot;</span><br>    echo <br>&#125;<br><br><br>check_file ()&#123;<br>    <span class="hljs-keyword">if</span> [ ! -e <span class="hljs-variable">$&#123;LUA_FILE&#125;</span> ];then<br>        color <span class="hljs-string">&quot;缺少$&#123;LUA_FILE&#125;文件!&quot;</span> <span class="hljs-number">1</span><br>        <span class="hljs-keyword">exit</span><br>    elif [ ! -e <span class="hljs-variable">$&#123;HAPROXY_FILE&#125;</span> ];then<br>        color <span class="hljs-string">&quot;缺少$&#123;HAPROXY_FILE&#125;文件!&quot;</span> <span class="hljs-number">1</span><br>        <span class="hljs-keyword">exit</span><br>    <span class="hljs-keyword">else</span><br>        color <span class="hljs-string">&quot;相关文件已准备!&quot;</span> <span class="hljs-number">0</span><br>    fi<br>&#125;<br><br>install_haproxy()&#123;<br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$ID</span> = <span class="hljs-string">&quot;centos&quot;</span> -o <span class="hljs-variable">$ID</span> = <span class="hljs-string">&quot;rocky&quot;</span> ];then<br>        yum -y install gcc make gcc-c++ glibc glibc-devel pcre pcre-devel openssl openssl-devel systemd-devel libtermcap-devel ncurses-devel libevent-devel readline-devel <br>    elif [ <span class="hljs-variable">$ID</span> = <span class="hljs-string">&quot;ubuntu&quot;</span> ];then<br>        apt update <br>        apt -y install gcc make openssl libssl-dev libpcre3 libpcre3-dev zlib1g-dev  libreadline-dev libsystemd-dev <br>    <span class="hljs-keyword">else</span><br>        color <span class="hljs-string">&quot;不支持此操作系统!&quot;</span> <span class="hljs-number">1</span><br>    fi<br>    [ $? -eq <span class="hljs-number">0</span> ] ||  &#123; color <span class="hljs-string">&#x27;HAPROXY 启动失败,退出!&#x27;</span> <span class="hljs-number">1</span>; <span class="hljs-keyword">exit</span>; &#125;<br>    tar xf <span class="hljs-variable">$&#123;LUA_FILE&#125;</span> -C <span class="hljs-variable">$&#123;SRC_DIR&#125;</span><br>    LUA_DIR=<span class="hljs-variable">$&#123;LUA_FILE%.tar*&#125;</span><br>    cd <span class="hljs-variable">$&#123;SRC_DIR&#125;</span>/<span class="hljs-variable">$&#123;LUA_DIR&#125;</span><br>    make all test<br>    cd <span class="hljs-variable">$&#123;CWD&#125;</span><br>    tar xf <span class="hljs-variable">$&#123;HAPROXY_FILE&#125;</span> -C <span class="hljs-variable">$&#123;SRC_DIR&#125;</span><br>    HAPROXY_DIR=<span class="hljs-variable">$&#123;HAPROXY_FILE%.tar*&#125;</span><br>    cd <span class="hljs-variable">$&#123;SRC_DIR&#125;</span>/<span class="hljs-variable">$&#123;HAPROXY_DIR&#125;</span><br>    make -j <span class="hljs-variable">$&#123;CPUS&#125;</span> ARCH=x86_64 TARGET=linux-glibc USE_PCRE=<span class="hljs-number">1</span> USE_OPENSSL=<span class="hljs-number">1</span> USE_ZLIB=<span class="hljs-number">1</span> USE_SYSTEMD=<span class="hljs-number">1</span> USE_CPU_AFFINITY=<span class="hljs-number">1</span> USE_LUA=<span class="hljs-number">1</span> LUA_INC=<span class="hljs-variable">$&#123;SRC_DIR&#125;</span><span class="hljs-regexp">/$&#123;LUA_DIR&#125;/</span>src<span class="hljs-regexp">/ LUA_LIB=$&#123;SRC_DIR&#125;/</span><span class="hljs-variable">$&#123;LUA_DIR&#125;</span><span class="hljs-regexp">/src/</span> PREFIX=<span class="hljs-variable">$&#123;HAPROXY_INSTALL_DIR&#125;</span><br>    make install PREFIX=<span class="hljs-variable">$&#123;HAPROXY_INSTALL_DIR&#125;</span><br>    [ $? -eq <span class="hljs-number">0</span> ] &amp;&amp; color <span class="hljs-string">&quot;HAPROXY编译安装成功&quot;</span> <span class="hljs-number">0</span> ||  &#123; color <span class="hljs-string">&quot;HAPROXY编译安装失败,退出!&quot;</span> <span class="hljs-number">1</span>;<span class="hljs-keyword">exit</span>; &#125;<br>    <br>    [ -L <span class="hljs-regexp">/usr/</span>sbin<span class="hljs-regexp">/haproxy ] || ln -s $&#123;HAPROXY_INSTALL_DIR&#125;/</span>sbin<span class="hljs-regexp">/haproxy /u</span>sr<span class="hljs-regexp">/sbin/</span> &amp;&gt; <span class="hljs-regexp">/dev/</span>null<br>    [ -d <span class="hljs-regexp">/etc/</span>haproxy ] || mkdir <span class="hljs-regexp">/etc/</span>haproxy &amp;&gt; <span class="hljs-regexp">/dev/</span>null  <br>    [ -d <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/haproxy/</span> ] || mkdir -p <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/haproxy/</span> &amp;&gt; <span class="hljs-regexp">/dev/</span>null<br>    cat &gt; <span class="hljs-regexp">/etc/</span>haproxy/haproxy.cfg &lt;&lt;-EOF<br>global<br>maxconn <span class="hljs-number">100000</span><br>stats socket <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/haproxy/</span>haproxy.sock mode <span class="hljs-number">600</span> level admin<br>uid <span class="hljs-number">99</span><br>gid <span class="hljs-number">99</span><br>daemon<br><br>pidfile <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/haproxy/</span>haproxy.pid<br>log <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span> local3 info<br><br>defaults<br>option http-keep-alive<br>option forwardfor<br>maxconn <span class="hljs-number">100000</span><br>mode http<br>timeout connect <span class="hljs-number">300000</span>ms<br>timeout client <span class="hljs-number">300000</span>ms<br>timeout server <span class="hljs-number">300000</span>ms<br><br>listen stats<br>    mode http<br>    bind <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:<span class="hljs-number">9999</span><br>    stats enable<br>    log global<br>    stats uri /haproxy-status<br>    stats auth <span class="hljs-variable">$&#123;STATS_AUTH_USER&#125;</span>:<span class="hljs-variable">$&#123;STATS_AUTH_PASSWORD&#125;</span><br><br><span class="hljs-comment">#listen kubernetes-6443</span><br><span class="hljs-comment">#    bind $&#123;VIP&#125;:6443</span><br><span class="hljs-comment">#    mode tcp</span><br><span class="hljs-comment">#    log global</span><br><span class="hljs-comment">#    server $&#123;MASTER1&#125; $&#123;MASTER1&#125;:6443 check inter 3000 fall 2 rise 5</span><br><span class="hljs-comment">#    server $&#123;MASTER2&#125; $&#123;MASTER2&#125;:6443 check inter 3000 fall 2 rise 5</span><br><span class="hljs-comment">#    server $&#123;MASTER3&#125; $&#123;MASTER2&#125;:6443 check inter 3000 fall 2 rise 5</span><br><br>EOF<br>    <span class="hljs-comment">#echo &quot;PATH=$&#123;HAPROXY_INSTALL_DIR&#125;/sbin:$&#123;PATH&#125;&quot; &gt; /etc/profile.d/haproxy.sh</span><br>groupadd -g <span class="hljs-number">99</span> haproxy<br>useradd -u <span class="hljs-number">99</span> -g haproxy -d <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/haproxy -M -r -s /</span>sbin/nologin haproxy<br>cat &gt; <span class="hljs-regexp">/lib/</span>systemd<span class="hljs-regexp">/system/</span>haproxy.service &lt;&lt;-EOF<br>[Unit]<br>Description=HAProxy Load Balancer<br>After=syslog.target network.target<br><br>[Service]<br>ExecStartPre=<span class="hljs-regexp">/usr/</span>sbin<span class="hljs-regexp">/haproxy -f /</span>etc<span class="hljs-regexp">/haproxy/</span>haproxy.cfg -c -q<br>ExecStart=<span class="hljs-regexp">/usr/</span>sbin<span class="hljs-regexp">/haproxy -Ws -f /</span>etc<span class="hljs-regexp">/haproxy/</span>haproxy.cfg -p <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/haproxy/</span>haproxy.pid<br>ExecReload=<span class="hljs-regexp">/bin/</span>kill -USR2 <span class="hljs-variable">$MAINPID</span><br><br>[Install]<br>WantedBy=multi-user.target<br>EOF<br>    systemctl daemon-reload<br>    systemctl enable --now haproxy <br>    systemctl is-active haproxy &amp;&gt; <span class="hljs-regexp">/dev/</span>null &amp;&amp; color <span class="hljs-string">&#x27;HAPROXY安装完成!&#x27;</span> <span class="hljs-number">0</span> ||  &#123; color <span class="hljs-string">&#x27;HAPROXY 启动失败,退出!&#x27;</span> <span class="hljs-number">1</span>; <span class="hljs-keyword">exit</span>; &#125;<br>    echo <span class="hljs-string">&quot;-------------------------------------------------------------------&quot;</span><br>    echo -e <span class="hljs-string">&quot;请访问链接: \E[32;1mhttp://$&#123;LOCAL_IP&#125;:9999/haproxy-status\E[0m&quot;</span><br>    echo -e <span class="hljs-string">&quot;用户和密码: \E[32;1m$&#123;STATS_AUTH_USER&#125;/$&#123;STATS_AUTH_PASSWORD&#125;\E[0m&quot;</span> <br>&#125;<br><br>main()&#123;<br>    check_file<br>    install_haproxy<br>&#125;<br><br>main<br><br><br>[root@Rocky8 ~]<span class="hljs-comment"># bash install_haproxy.sh #执行脚本</span><br></code></pre></td></tr></table></figure><p><img src="image-20230908134444815.png" alt="image-20230908134444815"></p><p>访问页面</p><p><img src="image-20230908134810241.png" alt="image-20230908134810241"></p><p>配置HAProxy</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># vim /etc/haproxy/haproxy.cfg  #在配置文件最后添加下面的配置</span><br><span class="hljs-comment">#~~~~~~~</span><br><span class="hljs-comment">#~~~~~~~~~</span><br><span class="hljs-comment">#~~~~~~~~~~~</span><br><span class="hljs-comment">#~~~~~~~~~~~~</span><br><span class="hljs-comment">#这是一个前端配置部分，用于定义如何接收来自客户端的连接和流量。</span><br><span class="hljs-string">frontend</span> <span class="hljs-string">www.xinqi66.org_80</span> <span class="hljs-comment">#是此前端的名称，用于识别和引用此配置</span><br>    <span class="hljs-string">bind</span> <span class="hljs-number">192.168</span><span class="hljs-number">.10</span><span class="hljs-number">.100</span><span class="hljs-string">:80</span>  <span class="hljs-comment">#指定前端监听的IP地址和端口，这里是在IP地址  </span><br>    <span class="hljs-string">use_backend</span> <span class="hljs-string">www.xinqi66.org_80</span> <span class="hljs-comment">#声明在收到HTTP请求后，将使用名为 harbor_prot_http_nodes 的后端来处理请求。</span><br>    <br><span class="hljs-string">backend</span> <span class="hljs-string">www.xinqi66.org_80</span> <span class="hljs-comment">#这是一个后端配置部分，用于定义如何处理从前端接收到的HTTP请求，并将它们转发到一组服务器。</span><br>    <span class="hljs-string">cookie</span> <span class="hljs-string">SERVERID</span> <span class="hljs-string">insert</span> <span class="hljs-string">indirect</span> <span class="hljs-string">nocache</span> <span class="hljs-comment">#cookie会话保持</span><br>    <span class="hljs-string">server</span> <span class="hljs-string">web1</span> <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.137</span><span class="hljs-string">:80</span> <span class="hljs-string">check</span> <span class="hljs-string">inter</span> <span class="hljs-number">3000 </span><span class="hljs-string">fall</span> <span class="hljs-number">3</span> <span class="hljs-string">rise</span> <span class="hljs-number">5</span> <span class="hljs-string">cookie</span> <span class="hljs-string">web1</span><br>    <span class="hljs-string">server</span> <span class="hljs-string">web2</span> <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.138</span><span class="hljs-string">:80</span> <span class="hljs-string">check</span> <span class="hljs-string">inter</span> <span class="hljs-number">3000 </span><span class="hljs-string">fall</span> <span class="hljs-number">3</span> <span class="hljs-string">rise</span> <span class="hljs-number">5</span> <span class="hljs-string">cookie</span> <span class="hljs-string">web2</span><br>    <span class="hljs-comment">#配置了一个后端服务器。10.0.0.137:80 是服务器的IP地址和端口号。check inter 3000 fall 3 rise 5 指定了用于健康检查的参数。它意味着HAProxy每隔3秒尝试一次检查，如果在5次尝试中有3次失败，则认为服务器不可用，如果在5次尝试中有5次成功，则认为服务器恢复可用状态。cookie web1/2表示访问该IP地址拿到的cookie名字</span><br><br><span class="hljs-comment"># 注意这边默认没有配置调度算法默认为轮询</span><br><span class="hljs-comment">#检查配置文件格式是否正确</span><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># haproxy -c -f /etc/haproxy/haproxy.cfg #检查配置文件语法</span><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># systemctl restart haproxy.service  #重启服务</span><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># curl -i 192.168.10.100 查看是否已经启用cookie</span><br><span class="hljs-string">HTTP/1.1</span> <span class="hljs-number">200</span> <span class="hljs-string">OK</span><br><span class="hljs-attr">server:</span> <span class="hljs-string">nginx</span><br><span class="hljs-attr">date:</span> <span class="hljs-string">Mon,</span> <span class="hljs-number">11</span> <span class="hljs-string">Sep</span> <span class="hljs-number">2023 01:47:46 </span><span class="hljs-string">GMT</span><br><span class="hljs-attr">content-type:</span> <span class="hljs-string">text/html</span><br><span class="hljs-attr">content-length:</span> <span class="hljs-number">906</span><br><span class="hljs-attr">last-modified:</span> <span class="hljs-string">Tue,</span> <span class="hljs-number">28</span> <span class="hljs-string">Jun</span> <span class="hljs-number">2022 18:25:26 </span><span class="hljs-string">GMT</span><br><span class="hljs-attr">etag:</span> <span class="hljs-string">&quot;62bb4796-38a&quot;</span><br><span class="hljs-attr">cache-control:</span> <span class="hljs-literal">no</span><span class="hljs-string">-store,</span> <span class="hljs-literal">no</span><span class="hljs-string">-cache,</span> <span class="hljs-string">must-revalidate</span><br><span class="hljs-attr">accept-ranges:</span> <span class="hljs-string">bytes</span><br><span class="hljs-attr">x-frame-options:</span> <span class="hljs-string">DENY</span><br><span class="hljs-attr">content-security-policy:</span> <span class="hljs-string">frame-ancestors</span> <span class="hljs-string">&#x27;none&#x27;</span><br><span class="hljs-attr">set-cookie:</span> <span class="hljs-string">SERVERID=web2;</span> <span class="hljs-string">path=/</span> <span class="hljs-comment">#这里拿到的是cookie web2，后续这台host访问都会访问web2</span><br></code></pre></td></tr></table></figure><h5 id="3-7-在192-168-10-200上配置好DNS并访问HAproxy地址FQDN，显示HARBOR页面。"><a href="#3-7-在192-168-10-200上配置好DNS并访问HAproxy地址FQDN，显示HARBOR页面。" class="headerlink" title="3.7 在192.168.10.200上配置好DNS并访问HAproxy地址FQDN，显示HARBOR页面。"></a>3.7 在192.168.10.200上配置好DNS并访问HAproxy地址FQDN，显示HARBOR页面。</h5><p><img src="image-20230911095613914.png" alt="image-20230911095613914"></p><p>查看HAproxy状态页面，查看web1,web2启动状态。</p><p><img src="image-20230911100033815.png" alt="image-20230911100033815"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Docker创建容器镜像</title>
    <link href="/2023/09/04/Docker%E5%88%9B%E5%BB%BA%E5%AE%B9%E5%99%A8%E9%95%9C%E5%83%8F/"/>
    <url>/2023/09/04/Docker%E5%88%9B%E5%BB%BA%E5%AE%B9%E5%99%A8%E9%95%9C%E5%83%8F/</url>
    
    <content type="html"><![CDATA[<h4 id="1、在两台服务器上安装kvm虚拟化，把其中一台的虚拟机迁移到另一台。"><a href="#1、在两台服务器上安装kvm虚拟化，把其中一台的虚拟机迁移到另一台。" class="headerlink" title="1、在两台服务器上安装kvm虚拟化，把其中一台的虚拟机迁移到另一台。"></a>1、在两台服务器上安装kvm虚拟化，把其中一台的虚拟机迁移到另一台。</h4><p>环境准备：rocky8.5 10.0.0.133（虚拟机设置CPU4核8G内存，开启CPU虚拟化）</p><p>​                   rocky8.5 10.0.0.134（虚拟机设置CPU4核8G内存，开启CPU虚拟化）</p><p>​                   win10 10.0.0.1(安装Xmanage)</p><p><img src="image-20230830094551345.png" alt="image-20230830094551345"></p><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#在133/134上分别安装kvm</span><br>[root@Rocky8 ~]<span class="hljs-comment"># yum -y install qemu-kvm libvirt virt-manager virt-install virt-viewer</span><br><span class="hljs-comment">#开启libvirtd服务并设置开机启动</span><br>[root@Rocky8 ~]<span class="hljs-comment"># systemctl enable --now libvirtd</span><br><span class="hljs-comment">#在133上运行命令，将kvm界面发送到win10上</span><br>[root@Rocky8 ~]<span class="hljs-comment"># export DISPLAY=10.0.0.1:0.0</span><br>[root@Rocky8 ~]<span class="hljs-comment"># virt-manager</span><br></code></pre></td></tr></table></figure><p><img src="image-20230830103047279.png" alt="image-20230830103047279"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">#新建文件夹</span><br><span class="hljs-built_in">mkdir</span> /kvm/&#123;iso,img&#125; -p<br><span class="hljs-comment">#新建20G的qcow2格式的虚拟机存储，不会占用真实存储空间，用来存储虚拟机。</span><br>qemu-img create -f qcow2 /kvm/img/vm2.qcow2 20G      <br> <br><span class="hljs-comment">#需提前将CentOS7.9镜像存放在/kvm/iso下</span><br><span class="hljs-built_in">mv</span> /kvm/iso/CentOS-7-x86_64-Minimal-2009.iso centos7.iso<br>————————————————<br><span class="hljs-comment">#运行命令部署centos7</span><br>[root@Rocky8 kvm]<span class="hljs-comment"># virt-install --virt-type kvm -n centos7-1 -r 1024 --vcpus 2 --cdrom=/kvm/iso/CentOS-7-x86_64-DVD-2009.iso --disk path=/kvm/img/vm2.qcow2 --network network=default  --graphics vnc,listen=0.0.0.0 --noautoconsole --os-variant=centos7.0</span><br></code></pre></td></tr></table></figure><h5 id="手动配置centos7等待安装完成"><a href="#手动配置centos7等待安装完成" class="headerlink" title="手动配置centos7等待安装完成"></a>手动配置centos7等待安装完成</h5><p><img src="image-20230830133048231.png" alt="image-20230830133048231"></p><p>122.68</p><h5 id="虚拟机安装完成"><a href="#虚拟机安装完成" class="headerlink" title="虚拟机安装完成"></a>虚拟机安装完成</h5><p><img src="image-20230830133918208.png" alt="image-20230830133918208"></p><h5 id="1-2-基于网络传输实现虚拟机迁移"><a href="#1-2-基于网络传输实现虚拟机迁移" class="headerlink" title="1.2 基于网络传输实现虚拟机迁移"></a>1.2 基于网络传输实现虚拟机迁移</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky8 kvm]<span class="hljs-comment"># virsh list --all  #查看虚拟机状态</span><br> Id   Name        State<br>---------------------------<br> 2    centos7-1   running<br><br>[root@Rocky8 kvm]<span class="hljs-comment"># virsh shutdown centos7-1  #关闭虚拟机</span><br>Domain centos7-1 is being shutdown<br><br>[root@Rocky8 kvm]<span class="hljs-comment"># virsh list --all</span><br> Id   Name        State<br>----------------------------<br> -    centos7-1   shut off<br> <br>[root@Rocky8 kvm]<span class="hljs-comment"># virsh domblklist centos7-1 </span><br> Target   Source<br>------------------------------<br> vda      /kvm/img/vm2.qcow2<br> sda      -<br><span class="hljs-comment">#导出xml配置文件</span><br>[root@Rocky8 kvm]<span class="hljs-comment"># virsh dumpxml centos7-1 &gt; /kvm/centos7.xml</span><br><span class="hljs-comment">#复制配置文件和磁盘文件到10.0.0.134主机        </span><br>[root@Rocky8 kvm]<span class="hljs-comment"># scp /kvm/centos7.xml root@10.0.0.134:/kvm </span><br>[root@Rocky8 img]<span class="hljs-comment"># scp /kvm/img/* root@10.0.0.134:/kvm/img/</span><br><span class="hljs-comment">#根据配置文件生成虚拟机</span><br>[root@Rocky8 kvm]<span class="hljs-comment"># virsh define centos7.xml </span><br>Domain centos7-1 defined from centos7.xml<br><span class="hljs-comment">#打开虚拟机查看是否迁移成功</span><br>[root@Rocky8 kvm]<span class="hljs-comment"># export DISPLAY=10.0.0.1:0.0</span><br>[root@Rocky8 kvm]<span class="hljs-comment"># virt-manager</span><br></code></pre></td></tr></table></figure><p><img src="image-20230830140250007.png" alt="image-20230830140250007"></p><h4 id="2、手动制作一个容器镜像创建成容器并正常运行。"><a href="#2、手动制作一个容器镜像创建成容器并正常运行。" class="headerlink" title="2、手动制作一个容器镜像创建成容器并正常运行。"></a>2、手动制作一个容器镜像创建成容器并正常运行。</h4><h5 id="2-1-使用Dockerfile制作一个基于rockylinux8-5的nginx镜像"><a href="#2-1-使用Dockerfile制作一个基于rockylinux8-5的nginx镜像" class="headerlink" title="2.1 使用Dockerfile制作一个基于rockylinux8.5的nginx镜像"></a>2.1 使用Dockerfile制作一个基于rockylinux8.5的nginx镜像</h5><p>在Dockerfile目录下准备编译安装的相关文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky8 data]<span class="hljs-comment"># tree</span><br>├── dockerfile<br>│   └── web<br>│       └── nginx<br>│           └── 1.20<br>│               ├── build.sh<br>│               ├── Dockerfile<br>│               ├── index.html<br>│               ├── nginx-1.20.0.tar.gz<br>│               └── nginx.conf<br><br>[root@Rocky8 data]<span class="hljs-comment"># mkdir -p /data/dockerfile/web/nginx/1.20 #创建dockerfile目录</span><br>[root@Rocky8 data]<span class="hljs-comment"># cd /data/dockerfile/web/nginx/1.20</span><br>[root@Rocky8 1.20]<span class="hljs-comment"># wget http://nginx.org/download/nginx-1.20.0.tar.gz #下载二进制包</span><br>[root@Rocky8 1.20]<span class="hljs-comment"># echo &quot;Test Page in app&quot; &gt; index.html #准备index测试文件</span><br>[root@Rocky8 1.20]<span class="hljs-comment"># vim /data/dockerfile/web/nginx/1.16/nginx.conf #找一台主机安装nginx拷贝配置文件并修改以下配置</span><br>worker_processes auto;<br>user nginx;<br>daemon off; <span class="hljs-comment">#增加此行,前台运行nginx</span><br>[root@Rocky8 1.20]<span class="hljs-comment"># vim Dockerfile #编写dockerfile</span><br>[root@Rocky8 1.20]<span class="hljs-comment"># cat Dockerfile #dockerfile文件内容</span><br>FROM rockylinux:8.5 <span class="hljs-comment">#指定rockylinux:8.5为基础镜像</span><br>LABEL maintainer=<span class="hljs-string">&quot;xinqi&quot;</span> <span class="hljs-comment">#备注说明信息</span><br>ENV NGINX_VERSION=1.20.0 <span class="hljs-comment">#设定变量</span><br>ADD nginx-<span class="hljs-variable">$&#123;NGINX_VERSION&#125;</span>.tar.gz /usr/local/src <span class="hljs-comment">#解压二进制包到指定路径</span><br>RUN yum -y install gcc make gcc-c++ libtool pcre pcre-devel zlib zlib-devel openssl openssl-devel &amp;&amp; \ <span class="hljs-comment">#安装编译所需包</span><br>    <span class="hljs-built_in">rm</span> -rf /var/cache/dnf/* &amp;&amp; \ <span class="hljs-comment">#删除安装包缓存释放空间</span><br>    <span class="hljs-built_in">cd</span> /usr/local/src/nginx-<span class="hljs-variable">$&#123;NGINX_VERSION&#125;</span> &amp;&amp; \ <span class="hljs-comment">#进入包路径</span><br>    ./configure --prefix=/apps/nginx \ <span class="hljs-comment">#开始编译安装</span><br>    &amp;&amp; make &amp;&amp; make install \<br>    &amp;&amp; <span class="hljs-built_in">rm</span> -f /usr/local/src/nginx-<span class="hljs-variable">$&#123;NGINX_VERSION&#125;</span>\ \ <br>    &amp;&amp; useradd -r nginx<br>COPY nginx.conf /apps/nginx/conf/ <span class="hljs-comment">#拷贝配置文件到容器配置文件路径</span><br>COPY index.html /apps/nginx/html/ <span class="hljs-comment">#拷贝index文件</span><br>EXPOSE 80 443 <span class="hljs-comment">#暴露80和443端口</span><br>CMD [<span class="hljs-string">&quot;/apps/nginx/sbin/nginx&quot;</span>]<br></code></pre></td></tr></table></figure><h5 id="2-2-生成nginx镜像"><a href="#2-2-生成nginx镜像" class="headerlink" title="2.2 生成nginx镜像"></a>2.2 生成nginx镜像</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky8 1.20]<span class="hljs-comment"># cat build.sh #写一个生成镜像的脚本</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#</span><br>docker build -t nginx-rocky:1.20 .<br><br>[root@Rocky8 1.20]<span class="hljs-comment"># chmod +x build.sh #添加执行权限</span><br>[root@Rocky8 1.20]<span class="hljs-comment"># ls</span><br>build.sh  Dockerfile  index.html  nginx-1.20.0.tar.gz  nginx.conf<br>[root@Rocky8 1.20]<span class="hljs-comment"># ./build.sh #执行</span><br>[+] Building 0.0s (10/10) FINISHED                                                                        docker:default<br> =&gt; [internal] load build definition from Dockerfile                                                                0.0s<br> =&gt; =&gt; transferring dockerfile: 605B                                                                                0.0s<br> =&gt; [internal] load .dockerignore                                                                                   0.0s<br> =&gt; =&gt; transferring context: 2B                                                                                     0.0s<br> =&gt; [internal] load metadata <span class="hljs-keyword">for</span> docker.io/library/rockylinux:8.5                                                   0.0s<br> =&gt; [1/5] FROM docker.io/library/rockylinux:8.5                                                                     0.0s<br> =&gt; [internal] load build context                                                                                   0.0s<br> =&gt; =&gt; transferring context: 101B                                                                                   0.0s<br> =&gt; CACHED [2/5] ADD nginx-1.20.0.tar.gz /usr/local/src                                                             0.0s<br> =&gt; CACHED [3/5] RUN yum -y install gcc make gcc-c++ libtool pcre pcre-devel zlib zlib-devel openssl openssl-devel  0.0s<br> =&gt; CACHED [4/5] COPY nginx.conf /apps/nginx/conf/                                                                  0.0s<br> =&gt; CACHED [5/5] COPY index.html /apps/nginx/html/                                                                  0.0s<br> =&gt; exporting to image                                                                                              0.0s<br> =&gt; =&gt; exporting layers                                                                                             0.0s<br> =&gt; =&gt; writing image sha256:80ce005ca7b754c3be485f79b751231ceba3f4fa09a042fa5a21081906b7ed45                        0.0s<br> =&gt; =&gt; naming to docker.io/library/nginx-rocky3:1.20                                                                0.0s<br>[root@Rocky8 1.20]<span class="hljs-comment"># docker images #查看镜像是否创建</span><br>REPOSITORY     TAG       IMAGE ID       CREATED          SIZE<br>nginx-rocky    1.20      71755adad878   47 minutes ago   528MB<br>rockylinux     8.5       210996f98b85   20 months ago    205MB<br></code></pre></td></tr></table></figure><h5 id="2-3-生成容器测试镜像"><a href="#2-3-生成容器测试镜像" class="headerlink" title="2.3 生成容器测试镜像"></a>2.3 生成容器测试镜像</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh">[root@Rocky8 1.20]<span class="hljs-comment"># docker run -d -p 80:80 --name nginx nginx-rocky2:1.20 #运行镜像</span><br>3a902a0ec4ae86e4905cd0a7c86e6dee80d6434907cedb91362e97262343e2de<br>[root@Rocky8 1.20]<span class="hljs-comment"># docker ps</span><br>CONTAINER ID   IMAGE               COMMAND                  CREATED          STATUS         PORTS                                        NAMES<br>3a902a0ec4ae   nginx-rocky2:1.20   <span class="hljs-string">&quot;/apps/nginx/sbin/ng…&quot;</span>   10 seconds ago   Up 9 seconds   0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp, 443/tcp   nginx<br>[root@Rocky8 1.20]<span class="hljs-comment"># </span><br>[root@Rocky8 1.20]<span class="hljs-comment"># curl 127.0.0.1 #查看页面</span><br>Test page <span class="hljs-keyword">in</span> app<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第十一周作业</title>
    <link href="/2023/08/29/%E7%AC%AC%E5%8D%81%E4%B8%80%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2023/08/29/%E7%AC%AC%E5%8D%81%E4%B8%80%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<h4 id="1-ansible-常用指令总结，并附有相关示例。"><a href="#1-ansible-常用指令总结，并附有相关示例。" class="headerlink" title="1 ansible 常用指令总结，并附有相关示例。"></a>1 ansible 常用指令总结，并附有相关示例。</h4><p>当使用 Ansible 进行自动化管理时，有一些常用的指令可以帮助你执行不同的任务。以下是一些常见的 Ansible 指令示例：</p><ol><li><p><strong>Ping 模块：检查主机的连通性。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">ansible all -m ping<br></code></pre></td></tr></table></figure></li><li><p><strong>Command 模块：在目标主机上执行命令。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ansible all -m <span class="hljs-built_in">command</span> -a <span class="hljs-string">&quot;hostname&quot;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>Shell 模块：在目标主机上执行 Shell 命令。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ansible all -m shell -a <span class="hljs-string">&quot;ls -l /tmp&quot;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>Copy 模块：将文件复制到目标主机。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ansible all -m copy -a <span class="hljs-string">&quot;src=/path/to/local/file dest=/remote/path/&quot;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>File 模块：管理目标主机上的文件和目录。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ansible all -m file -a <span class="hljs-string">&quot;path=/remote/path/file state=absent&quot;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>Service 模块：管理系统服务状态。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ansible all -m service -a <span class="hljs-string">&quot;name=httpd state=started&quot;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>Yum 模块：管理软件包。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ansible all -m yum -a <span class="hljs-string">&quot;name=package state=present&quot;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>User 模块：管理系统用户。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ansible all -m user -a <span class="hljs-string">&quot;name=username state=present&quot;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>Group 模块：管理系统用户组。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ansible all -m group -a <span class="hljs-string">&quot;name=groupname state=present&quot;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>Template 模块：使用模板生成文件并复制到目标主机。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ansible all -m template -a <span class="hljs-string">&quot;src=template.j2 dest=/remote/path/&quot;</span><br></code></pre></td></tr></table></figure></li></ol><h4 id="2-总结ansible-playbook目录结构及文件用途。"><a href="#2-总结ansible-playbook目录结构及文件用途。" class="headerlink" title="2. 总结ansible playbook目录结构及文件用途。"></a>2. 总结ansible playbook目录结构及文件用途。</h4><p>Ansible Playbook 是用于定义、部署和管理自动化任务的文件，它可以包含一系列的任务、变量、剧本（plays）等内容。Playbook 文件通常按照一定的目录结构进行组织，以便更好地管理和维护自动化任务。以下是典型的 Ansible Playbook 目录结构及文件用途的总结：</p><p>一个典型的 Ansible Playbook 目录结构可能如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">my_playbook/<br>├── inventory<br>├── playbooks/<br>│   ├── main.yml<br>├── roles/<br>│   ├── role1/<br>│   │   ├── tasks/<br>│   │   │   ├── main.yml<br>│   │   ├── templates/<br>│   │   │   ├── config.j2<br>│   │   ├── vars/<br>│   │   │   ├── main.yml<br>│   ├── role2/<br>│   │   ├── ...<br>└── group_vars/<br>    ├── all.yml<br></code></pre></td></tr></table></figure><ul><li><code>inventory</code>: 存储主机清单文件，用于定义目标主机和主机组。</li><li><code>playbooks/</code>: 存储主要的 Playbook 文件。<ul><li><code>main.yml</code>: 主要 Playbook 文件，包含一个或多个剧本（plays）。</li></ul></li><li><code>roles/</code>: 存储角色目录，用于组织和复用任务和变量。<ul><li><code>role1/</code>, <code>role2/</code>: 每个角色的目录。<ul><li><code>tasks/</code>: 存储任务文件。<ul><li><code>main.yml</code>: 角色的主要任务列表。</li></ul></li><li><code>templates/</code>: 存储模板文件（用于生成配置文件等）。<ul><li><code>config.j2</code>: 模板文件。</li></ul></li><li><code>vars/</code>: 存储变量文件。<ul><li><code>main.yml</code>: 角色的变量定义。</li></ul></li></ul></li></ul></li><li><code>group_vars/</code>: 存储针对主机组的变量文件。<ul><li><code>all.yml</code>: 默认的主机组变量文件。</li></ul></li></ul><p>在这种目录结构下，你可以将不同的任务组织成角色，然后在 Playbook 中使用这些角色。这种结构使得你可以更好地组织和复用代码，使得自动化任务更加模块化和可维护。</p><p>要注意，这只是一个示例目录结构，你可以根据实际需求进行适当的调整和扩展。Ansible 支持灵活的目录结构，让你根据项目的规模和复杂度进行组织。</p><h4 id="3-使用ansible-playbook实现一个mysql角色。"><a href="#3-使用ansible-playbook实现一个mysql角色。" class="headerlink" title="3. 使用ansible playbook实现一个mysql角色。"></a>3. 使用ansible playbook实现一个mysql角色。</h4><p>在这个示例中，我们将创建一个简单的 MySQL 角色，用于安装 MySQL 服务器并设置数据库，下面为具体步骤</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">环境准备：rock8.5 IP:10.0.0.133 已经安装ansible的服务器，本次环境中使用的版本为2.12版本，与                                       10.0.0.134建立免秘钥连接（ssh-copy-id 10.0.0.134）<br>        rock8.5 IP:10.0.0.134 一个初始化的系统<br>        rock8.5 IP:10.0.0.136 一个初始化的系统<br>文件准备：mysql8.0二进制安装包:mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz,下载地址https://mirrors.aliyun.com/mysql/MySQL-8.0/mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz <br></code></pre></td></tr></table></figure><ol><li><strong>创建角色目录结构：</strong></li></ol><p>在你的 Ansible Playbook 项目目录下，创建一个名为 <code>roles</code> 的文件夹，然后在其中创建一个名为 <code>mysql</code> 的目录，以组织 MySQL 角色的内容。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">[root@Rocky8 lnmp]# tree<br>.<br>├── ansible.cfg   #ansible配置文件从ansible安装文件路径拷贝<br>├── hosts<br>├── mysql_role.yml<br>└── roles<br>    ├── mysql<br>    │   ├── files<br>    │   │   └── mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz<br>    │   ├── handlers<br>    │   ├── tasks<br>    │   │   └── main.yml<br>    │   └── templates<br>    │       └── my.cnf.j2<br><br></code></pre></td></tr></table></figure><ol start="2"><li><strong>创建角色任务：</strong></li></ol><p>在 <code>roles/mysql</code> 目录下，创建一个名为 <code>tasks</code> 的文件夹，然后在其中创建一个名为 <code>main.yml</code> 的 YAML 文件，用于定义 MySQL 角色的任务。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># cat /opt/lnmp/roles/mysql/tasks/main.yml </span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">packages</span><br>  <span class="hljs-attr">yum:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; item &#125;&#125;</span>&quot;</span><br>  <span class="hljs-attr">loop:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">libaio</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">numactl-libs</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span> <span class="hljs-string">mysql</span> <span class="hljs-string">user</span><br>  <span class="hljs-attr">user:</span> <span class="hljs-string">name=&#123;&#123;</span> <span class="hljs-string">db_user</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">uid=&#123;&#123;</span> <span class="hljs-string">db_uid</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">group=&#123;&#123;</span> <span class="hljs-string">db_group</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">system=yes</span> <span class="hljs-string">shell=&quot;/sbin/nologin&quot;</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">mysql</span> <span class="hljs-string">tar</span> <span class="hljs-string">to</span> <span class="hljs-string">remote</span> <span class="hljs-string">host</span> <span class="hljs-string">and</span> <span class="hljs-string">file</span> <span class="hljs-string">mode</span><br>  <span class="hljs-attr">unarchive:</span><br>    <span class="hljs-attr">src:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; db_file &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">dest:</span> <span class="hljs-string">&quot;/usr/local/&quot;</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span> <span class="hljs-string">mysql</span> <span class="hljs-string">lingfile</span><br>  <span class="hljs-attr">file:</span> <br>    <span class="hljs-attr">src:</span> <span class="hljs-string">&quot;/usr/local/mysql-<span class="hljs-template-variable">&#123;&#123; db_version &#125;&#125;</span>-linux-glibc2.12-x86_64&quot;</span><br>    <span class="hljs-attr">dest:</span> <span class="hljs-string">&quot;/usr/local/mysql&quot;</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">link</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">path</span> <span class="hljs-string">file</span><br>  <span class="hljs-attr">copy:</span><br>    <span class="hljs-attr">content:</span> <span class="hljs-string">&quot;PATH=/usr/local/mysql/bin:$PATH&quot;</span><br>    <span class="hljs-attr">dest:</span> <span class="hljs-string">&quot;/etc/profile.d/mysql.sh&quot;</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">config</span> <span class="hljs-string">file</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">src:</span> <span class="hljs-string">my.cnf.j2</span><br>    <span class="hljs-attr">dest:</span> <span class="hljs-string">&quot;/etc/my.cnf&quot;</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">creat</span> <span class="hljs-string">data</span><br>  <span class="hljs-attr">file:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;/data&quot;</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">directory</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">init</span> <span class="hljs-string">mysql</span> <span class="hljs-string">data</span><br>  <span class="hljs-attr">shell:</span><br>    <span class="hljs-attr">cmd:</span> <span class="hljs-string">&quot;/usr/local/mysql/bin/mysqld --initialize-insecure --user=<span class="hljs-template-variable">&#123;&#123; db_user &#125;&#125;</span> --datadir=<span class="hljs-template-variable">&#123;&#123; db_data_dir &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">tags:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">init</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">service</span> <span class="hljs-string">script</span><br>  <span class="hljs-attr">copy:</span><br>    <span class="hljs-attr">src:</span> <span class="hljs-string">&quot;/usr/local/mysql/support-files/mysql.server&quot;</span><br>    <span class="hljs-attr">dest:</span> <span class="hljs-string">&quot;/etc/init.d/mysqld&quot;</span><br>    <span class="hljs-attr">remote_src:</span> <span class="hljs-literal">yes</span><br>    <span class="hljs-attr">mode:</span> <span class="hljs-string">&#x27;+x&#x27;</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">config</span> <span class="hljs-string">file</span> <span class="hljs-string">mode</span><br>  <span class="hljs-attr">file:</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">&quot;/usr/local/mysql-<span class="hljs-template-variable">&#123;&#123; db_version &#125;&#125;</span>-linux-glibc2.12-x86_64&quot;</span><br>    <span class="hljs-attr">owner:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; db_user &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; db_group &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">recurse:</span> <span class="hljs-literal">yes</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">start</span> <span class="hljs-string">service</span><br>  <span class="hljs-attr">shell:</span><br>    <span class="hljs-attr">cmd:</span> <span class="hljs-string">chkconfig</span> <span class="hljs-string">--add</span> <span class="hljs-string">mysqld;chkconfig</span> <span class="hljs-string">mysqld</span> <span class="hljs-string">on;service</span> <span class="hljs-string">mysqld</span> <span class="hljs-string">start</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">change</span> <span class="hljs-string">root</span> <span class="hljs-string">password</span><br>  <span class="hljs-attr">shell:</span><br>    <span class="hljs-attr">cmd:</span> <span class="hljs-string">&quot;/usr/local/mysql/bin/mysqladmin -uroot password <span class="hljs-template-variable">&#123;&#123; db_root_passwd &#125;&#125;</span>&quot;</span><br><br></code></pre></td></tr></table></figure><ol start="3"><li><strong>在honts文件中添加134和136主机和创建角色变量：</strong></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># cat hosts </span><br>[<span class="hljs-string">dbhosts</span>]<br><span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.136</span><br><span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.134</span><br>[<span class="hljs-string">dbhosts:vars</span>]<br><span class="hljs-string">db_group=mysql</span><br><span class="hljs-string">db_gid=306</span><br><span class="hljs-string">db_user=mysql</span><br><span class="hljs-string">db_uid=306</span><br><span class="hljs-string">db_version=8.0.28</span><br><span class="hljs-string">db_file=&quot;mysql-&#123;&#123;db_version&#125;&#125;-linux-glibc2.12-x86_64.tar.xz&quot;</span><br><span class="hljs-string">db_data_dir=&quot;/data/mysql&quot;</span><br><span class="hljs-string">db_root_passwd=&quot;xq123456&quot;</span><br></code></pre></td></tr></table></figure><ol start="4"><li><strong>准备mysql角色在 Playbook 中：</strong></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># cat mysql_role.yml </span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">dbhosts</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">gather_facts:</span> <span class="hljs-literal">no</span><br><br>  <span class="hljs-attr">roles:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">mysql</span><br></code></pre></td></tr></table></figure><ol start="5"><li><strong>运行 Playbook：</strong></li></ol><p>运行 Playbook 来执行 MySQL 角色的任务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@Rocky8 lnmp]<span class="hljs-comment"># ansible-playbook -i hosts mysql_role.yml </span><br><br>PLAY [dbhosts] **********************************************************************************************************<br><br>TASK [mysql : install packages] *****************************************************************************************<br>ok: [10.0.0.136] =&gt; (item=libaio)<br>ok: [10.0.0.136] =&gt; (item=numactl-libs)<br>ok: [10.0.0.134] =&gt; (item=libaio)<br>ok: [10.0.0.134] =&gt; (item=numactl-libs)<br><br>TASK [mysql : create mysql user] ****************************************************************************************<br>changed: [10.0.0.134]<br>changed: [10.0.0.136]<br><br>TASK [mysql : create mysql lingfile] ************************************************************************************<br>changed: [10.0.0.134]<br>changed: [10.0.0.136]<br><br>TASK [mysql : copy path file] *******************************************************************************************<br>changed: [10.0.0.134]<br>changed: [10.0.0.136]<br><br>TASK [mysql : config file] **********************************************************************************************<br>changed: [10.0.0.134]<br>changed: [10.0.0.136]<br><br>TASK [mysql : creat data] ***********************************************************************************************<br>changed: [10.0.0.134]<br>changed: [10.0.0.136]<br><br>TASK [mysql : init mysql data] ******************************************************************************************<br>changed: [10.0.0.134]<br>changed: [10.0.0.136]<br><br>TASK [mysql : copy service script] **************************************************************************************<br>changed: [10.0.0.134]<br>changed: [10.0.0.136]<br><br>TASK [mysql : config file mode] *****************************************************************************************<br>changed: [10.0.0.134]<br>changed: [10.0.0.136]<br><br>TASK [mysql : start service] ********************************************************************************************<br>changed: [10.0.0.134]<br>changed: [10.0.0.136]<br><br>TASK [mysql : mysql start <span class="hljs-built_in">enable</span>] ***************************************************************************************<br>changed: [10.0.0.136]<br>changed: [10.0.0.134]<br><br>TASK [mysql : change root password] *************************************************************************************<br>changed: [10.0.0.136]<br>changed: [10.0.0.134]<br><br>PLAY RECAP *****************************************************************************************<br>10.0.0.134: ok=12   changed=10    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   <br>10.0.0.136: ok=12   changed=10    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0 <br></code></pre></td></tr></table></figure><h4 id="4-基于角色完成部署LNMP架构，并支持一键发布，回滚应用。同时基于zabbix角色批量部署zabbix。"><a href="#4-基于角色完成部署LNMP架构，并支持一键发布，回滚应用。同时基于zabbix角色批量部署zabbix。" class="headerlink" title="4. 基于角色完成部署LNMP架构，并支持一键发布，回滚应用。同时基于zabbix角色批量部署zabbix。"></a>4. 基于角色完成部署LNMP架构，并支持一键发布，回滚应用。同时基于zabbix角色批量部署zabbix。</h4><p>部署一个基于 LNMP（Linux + Nginx + MySQL + PHP + Zabbix）</p><p><img src="image-20230828134018941.png" alt="image-20230828134018941"></p><p>环境准备一台client,6台host主机，分别为</p><p>10.0.0.133：ansible host </p><p>10.0.0.134:   Mysql</p><p>10.0.0.135:   DNS</p><p>10.0.0.136:   nginx+php+zabbix</p><p>10.0.0.137:   zabbix-agent2</p><p>10.0.0.138:   zabbix-agent2</p><p><strong>1. 创建 LNMP 角色：</strong></p><p>创建一个名为 <code>lnmp</code> 的角色，其中包括安装和配置 Nginx、MySQL 、PHP和Zabbix。</p><p><strong>目录结构：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">[root@Rocky8 opt]# tree<br>.<br>└── lnmp<br>    ├── ansible.cfg<br>    ├── hosts<br>    ├── mysql_role.yml<br>    ├── nginx_role.yml<br>    ├── php_fpm_role.yml<br>    ├── roles<br>    │   ├── mysql<br>    │   │   ├── files<br>    │   │   │   └── mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz<br>    │   │   ├── handlers<br>    │   │   ├── tasks<br>    │   │   │   └── main.yml<br>    │   │   └── templates<br>    │   │       └── my.cnf.j2<br>    │   ├── nginx<br>    │   │   ├── files<br>    │   │   │   └── nginx-1.20.2.tar.gz<br>    │   │   ├── handlers<br>    │   │   │   └── main.yml<br>    │   │   ├── tasks<br>    │   │   │   └── main.yml<br>    │   │   └── templates<br>    │   │       ├── nginx.conf.j2<br>    │   │       └── nginx.service.j2<br>    │   ├── php-fpm<br>    │   │   ├── file<br>    │   │   ├── handlers<br>    │   │   │   └── main.yml<br>    │   │   ├── tasks<br>    │   │   │   └── main.yml<br>    │   │   └── templates<br>    │   │       ├── php-fpm.conf.j2<br>    │   │       ├── php.ini.j2<br>    │   │       └── www.conf.j2<br>    │   ├── wordpress<br>    │   │   ├── file<br>    │   │   ├── handlers<br>    │   │   ├── tasks<br>    │   │   └── templates<br>    │   └── zabbix_server<br>    │       ├── handlers<br>    │       │   └── main.yml<br>    │       ├── tasks<br>    │       │   └── main.yml<br>    │       └── templates<br>    │           ├── zabbix.conf.j2<br>    │           ├── zabbix_server.conf.j2<br>    │           └── zabbix-server-ngx.conf.j2<br>    └── zabbix_server.yml<br><br>26 directories, 24 files<br></code></pre></td></tr></table></figure><h5 id="4-1-LNMP架构所需主机清单以及变量设置"><a href="#4-1-LNMP架构所需主机清单以及变量设置" class="headerlink" title="4.1 LNMP架构所需主机清单以及变量设置"></a>4.1 LNMP架构所需主机清单以及变量设置</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># cat hosts </span><br>[<span class="hljs-string">webserver</span>]<br><span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.136</span><br><br>[<span class="hljs-string">webserver:vars</span>]<br><span class="hljs-string">group=www</span><br><span class="hljs-string">gid=80</span><br><span class="hljs-string">user=www</span><br><span class="hljs-string">uid=80</span><br><span class="hljs-string">version=&quot;1.20.2&quot;</span><br><span class="hljs-string">url=&quot;nginx-&#123;&#123;</span> <span class="hljs-string">version</span> <span class="hljs-string">&#125;&#125;.tar.gz&quot;</span><br><span class="hljs-string">install_dir=&quot;/apps/nginx&quot;</span><br><span class="hljs-string">fqdn=&quot;www.xinqi66.org&quot;</span><br><span class="hljs-string">DBHost=10.0.0.134</span><br><span class="hljs-string">DBName=zabbix</span><br><span class="hljs-string">DBUser=zabbix</span><br><span class="hljs-string">DBPassword=123456</span><br><span class="hljs-string">zabbix_version=5.0</span><br><br>[<span class="hljs-string">dbhost</span>]<br><span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.134</span><br>[<span class="hljs-string">dbhost:vars</span>]<br><span class="hljs-string">db_group=mysql</span><br><span class="hljs-string">db_gid=306</span><br><span class="hljs-string">db_user=mysql</span><br><span class="hljs-string">db_uid=306</span><br><span class="hljs-string">db_version=8.0.28</span><br><span class="hljs-string">db_file=&quot;mysql-&#123;&#123;db_version&#125;&#125;-linux-glibc2.12-x86_64.tar.xz&quot;</span><br><span class="hljs-string">db_data_dir=&quot;/data/mysql&quot;</span><br><span class="hljs-string">db_root_passwd=&quot;xq123456&quot;</span><br><span class="hljs-string">DBName=zabbix</span><br><span class="hljs-string">DBUser=zabbix</span><br><span class="hljs-string">DBPassword=123456</span><br><br>[<span class="hljs-string">zabbix_agent2host</span>]<br><span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.138</span><br><span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.137</span><br>[<span class="hljs-string">zabbix_agent2host:vars</span>]<br><span class="hljs-string">zabbix_server_ip=10.0.0.136</span><br><span class="hljs-string">zabbix_version=5.0</span><br><br></code></pre></td></tr></table></figure><h5 id="4-2-实现编译安装nginx角色"><a href="#4-2-实现编译安装nginx角色" class="headerlink" title="4.2 实现编译安装nginx角色"></a>4.2 实现编译安装nginx角色</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># cat roles/nginx/tasks/main.yml </span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">packages</span><br>  <span class="hljs-attr">yum:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; item &#125;&#125;</span>&quot;</span><br>  <span class="hljs-attr">loop:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">gcc</span>  <br>    <span class="hljs-bullet">-</span> <span class="hljs-string">make</span> <br>    <span class="hljs-bullet">-</span> <span class="hljs-string">pcre-devel</span> <br>    <span class="hljs-bullet">-</span> <span class="hljs-string">openssl-devel</span> <br>    <span class="hljs-bullet">-</span> <span class="hljs-string">zlib-devel</span> <br>    <span class="hljs-bullet">-</span> <span class="hljs-string">perl-ExtUtils-Embed</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">get</span> <span class="hljs-string">nginx</span> <span class="hljs-string">source</span><br>  <span class="hljs-attr">unarchive:</span><br>    <span class="hljs-attr">src:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; url &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">dest:</span> <span class="hljs-string">&quot;/usr/local/src&quot;</span><br>    <span class="hljs-comment">#remote_src: yes</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">compile</span> <span class="hljs-string">and</span> <span class="hljs-string">install</span> <br>  <span class="hljs-attr">shell:</span><br>    <span class="hljs-attr">cmd:</span> <span class="hljs-string">&quot;./configure --prefix=<span class="hljs-template-variable">&#123;&#123; install_dir &#125;&#125;</span> --user=nginx --group=nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-stream_ssl_module --with-stream_realip_module &amp;&amp;  make &amp;&amp; make install&quot;</span><br>    <span class="hljs-attr">chdir:</span> <span class="hljs-string">&quot;/usr/local/src/nginx-<span class="hljs-template-variable">&#123;&#123; version &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">creates:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123;install_dir&#125;&#125;</span>/sbin/nginx&quot;</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span>  &#123;&#123; <span class="hljs-string">group</span> &#125;&#125;<br>  <span class="hljs-attr">group:</span> <br>    <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; group &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">gid:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; gid&#125;&#125;</span>&quot;</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span> &#123;&#123; <span class="hljs-string">user</span> &#125;&#125;<br>  <span class="hljs-attr">user:</span> <br>    <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; user &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">uid:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; uid &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; group &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">system:</span> <span class="hljs-literal">yes</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">config</span> <br>  <span class="hljs-attr">template:</span>  <br>    <span class="hljs-attr">src:</span> <span class="hljs-string">nginx.conf.j2</span><br>    <span class="hljs-attr">dest:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123;install_dir&#125;&#125;</span>/conf/nginx.conf&quot;</span><br>  <span class="hljs-attr">notify:</span> <br>    <span class="hljs-bullet">-</span> <span class="hljs-string">restart</span> <span class="hljs-string">nginx</span> <br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">config</span> <span class="hljs-string">dir</span><br>  <span class="hljs-attr">file:</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123;install_dir&#125;&#125;</span>/conf.d&quot;</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">directory</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">config</span> <span class="hljs-string">file</span> <span class="hljs-string">mode</span><br>  <span class="hljs-attr">file:</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123;install_dir&#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">owner:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; user &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; group &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">recurse:</span> <span class="hljs-literal">yes</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">check</span> <span class="hljs-string">nginx</span> <span class="hljs-string">config</span><br>  <span class="hljs-attr">shell:</span><br>    <span class="hljs-attr">cmd:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123;install_dir&#125;&#125;</span>/sbin/nginx -t&quot;</span><br>  <span class="hljs-attr">register:</span> <span class="hljs-string">check_nginx_config</span> <br>  <span class="hljs-attr">changed_when:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">check_nginx_config.stdout.find(&#x27;successful&#x27;)</span> <br>    <span class="hljs-bullet">-</span> <span class="hljs-literal">false</span> <br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">service</span> <span class="hljs-string">file</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">src:</span> <span class="hljs-string">nginx.service.j2</span><br>    <span class="hljs-attr">dest:</span> <span class="hljs-string">/lib/systemd/system/nginx.service</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">start</span> <span class="hljs-string">nginx</span><br>  <span class="hljs-attr">service:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">nginx</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">started</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">yes</span><br><br><span class="hljs-comment">#创建handler文件</span><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># cat roles/nginx/handlers/main.yml </span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">restart</span> <span class="hljs-string">nginx</span><br>  <span class="hljs-attr">service:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">nginx</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">restarted</span><br><br><span class="hljs-comment">#准备两个template文件</span><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># cat roles/nginx/templates/nginx.conf.j2 </span><br><span class="hljs-string">user</span> &#123;&#123; <span class="hljs-string">user</span> &#125;&#125;<span class="hljs-string">;</span><br><span class="hljs-string">worker_processes</span>  &#123;&#123; <span class="hljs-string">ansible_processor_vcpus*2</span> &#125;&#125;<span class="hljs-string">;</span><br><br><span class="hljs-comment">#error_log  logs/error.log;</span><br><span class="hljs-comment">#error_log  logs/error.log  notice;</span><br><span class="hljs-comment">#error_log  logs/error.log  info;</span><br><br><span class="hljs-comment">#pid        logs/nginx.pid;</span><br><br><br><span class="hljs-string">events</span> &#123;<br>    <span class="hljs-string">worker_connections</span>  <span class="hljs-number">1024</span><span class="hljs-string">;</span><br>&#125;<br><br><br><span class="hljs-string">http</span> &#123;<br>    <span class="hljs-string">include</span>       <span class="hljs-string">mime.types;</span><br>    <span class="hljs-string">default_type</span>  <span class="hljs-string">application/octet-stream;</span><br><br>    <span class="hljs-comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br>    <span class="hljs-comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br>    <span class="hljs-comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><br>    <span class="hljs-comment">#access_log  logs/access.log  main;</span><br>    <span class="hljs-string">keepalive_timeout</span>  <span class="hljs-number">65</span><span class="hljs-string">;</span><br>    <span class="hljs-string">include</span> &#123;&#123;<span class="hljs-string">install_dir</span>&#125;&#125;<span class="hljs-string">/conf.d/*.conf;</span><br>&#125;<br><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># cat roles/nginx/templates/nginx.service.j2 </span><br>[<span class="hljs-string">Unit</span>]<br><span class="hljs-string">Description=The</span> <span class="hljs-string">nginx</span> <span class="hljs-string">HTTP</span> <span class="hljs-string">and</span> <span class="hljs-string">reverse</span> <span class="hljs-string">proxy</span> <span class="hljs-string">server</span><br><span class="hljs-string">After=network.target</span> <span class="hljs-string">remote-fs.target</span> <span class="hljs-string">nss-lookup.target</span><br><br>[<span class="hljs-string">Service</span>]<br><span class="hljs-string">Type=forking</span><br><span class="hljs-string">PIDFile=&#123;&#123;install_dir&#125;&#125;/logs/nginx.pid</span><br><span class="hljs-string">ExecStartPre=/bin/rm</span> <span class="hljs-string">-f</span> &#123;&#123;<span class="hljs-string">install_dir</span>&#125;&#125;<span class="hljs-string">/logs/nginx.pid</span><br><span class="hljs-string">ExecStartPre=&#123;&#123;install_dir&#125;&#125;/sbin/nginx</span> <span class="hljs-string">-t</span><br><span class="hljs-string">ExecStart=&#123;&#123;install_dir&#125;&#125;/sbin/nginx</span><br><span class="hljs-string">ExecReload=/bin/kill</span> <span class="hljs-string">-s</span> <span class="hljs-string">HUP</span> <span class="hljs-string">\$MAINPID</span><br><span class="hljs-string">KillSignal=SIGQUIT</span><br><span class="hljs-string">TimeoutStopSec=5</span><br><span class="hljs-string">KillMode=process</span><br><span class="hljs-string">PrivateTmp=true</span>                                                                                        <br><span class="hljs-string">LimitNOFILE=100000</span><br><br>[<span class="hljs-string">Install</span>]<br><span class="hljs-string">WantedBy=multi-user.target</span><br><br><br><span class="hljs-comment">#总入口playbook文件</span><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># cat nginx_role.yml </span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">webserver</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br><br>  <span class="hljs-attr">roles:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">nginx</span><br></code></pre></td></tr></table></figure><h5 id="4-3-实现php-fpm角色"><a href="#4-3-实现php-fpm角色" class="headerlink" title="4.3 实现php-fpm角色"></a>4.3 实现php-fpm角色</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#首先准备php.ini.j2和www.conf文件</span><br><span class="hljs-comment">#修改php上传限制配置</span><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># vim roles/php-fpm/templates/php.ini.j2</span><br><span class="hljs-string">post_max_size</span> <span class="hljs-string">=</span> <span class="hljs-string">100M</span> <span class="hljs-comment">#将次行从8M修改为100M</span><br><span class="hljs-string">upload_max_filesize</span> <span class="hljs-string">=</span> <span class="hljs-string">100M</span> <span class="hljs-comment">#将此行从2M改为100M</span><br><br><span class="hljs-comment">#配置文件模板</span><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># vim roles/php-fpm/templates/www.conf.j2 </span><br><br>[<span class="hljs-string">www</span>]<br><span class="hljs-string">user</span> <span class="hljs-string">=</span> &#123;&#123; <span class="hljs-string">user</span> &#125;&#125;<br><span class="hljs-string">group</span> <span class="hljs-string">=</span> &#123;&#123; <span class="hljs-string">group</span> &#125;&#125;<br><span class="hljs-string">listen</span> <span class="hljs-string">=</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:9000</span><br><span class="hljs-string">listen.acl_users</span> <span class="hljs-string">=</span> <span class="hljs-string">apache,nginx</span><br><span class="hljs-string">listen.allowed_clients</span> <span class="hljs-string">=</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><br><span class="hljs-string">pm</span> <span class="hljs-string">=</span> <span class="hljs-string">dynamic</span><br><span class="hljs-string">pm.max_children</span> <span class="hljs-string">=</span> <span class="hljs-number">50</span><br><span class="hljs-string">pm.start_servers</span> <span class="hljs-string">=</span> <span class="hljs-number">5</span><br><span class="hljs-string">pm.min_spare_servers</span> <span class="hljs-string">=</span> <span class="hljs-number">5</span><br><span class="hljs-string">pm.max_spare_servers</span> <span class="hljs-string">=</span> <span class="hljs-number">35</span><br><span class="hljs-string">slowlog</span> <span class="hljs-string">=</span> <span class="hljs-string">/var/log/php-fpm/www-slow.log</span><br><span class="hljs-string">php_admin_value[error_log]</span> <span class="hljs-string">=</span> <span class="hljs-string">/var/log/php-fpm/www-error.log</span><br><span class="hljs-string">php_admin_flag[log_errors]</span> <span class="hljs-string">=</span> <span class="hljs-string">on</span><br><span class="hljs-string">php_value[session.save_handler]</span> <span class="hljs-string">=</span> <span class="hljs-string">files</span><br><span class="hljs-string">php_value[session.save_path]</span>    <span class="hljs-string">=</span> <span class="hljs-string">/var/lib/php/session</span><br><span class="hljs-string">php_value[soap.wsdl_cache_dir]</span>  <span class="hljs-string">=</span> <span class="hljs-string">/var/lib/php/wsdlcache</span><br><br><span class="hljs-comment">#准备tasks文件</span><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># cat roles/php-fpm/tasks/main.yml </span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">packages</span><br>  <span class="hljs-attr">yum:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; item &#125;&#125;</span>&quot;</span><br>  <span class="hljs-attr">loop:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">php-fpm</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">php-mysqlnd</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">php-json</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">php-xml</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">php-gd</span> <br>    <span class="hljs-bullet">-</span> <span class="hljs-string">php-pecl-zip</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">php</span> <span class="hljs-string">path</span> <br>  <span class="hljs-attr">file:</span> <br>    <span class="hljs-attr">path:</span> <span class="hljs-string">/var/lib/php/</span><br>    <span class="hljs-attr">owner:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; user &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; group &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">recurse:</span> <span class="hljs-literal">yes</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">config</span> <span class="hljs-string">php.ini</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">src:</span> <span class="hljs-string">php.ini.j2</span><br>    <span class="hljs-attr">dest:</span> <span class="hljs-string">/etc/php.ini</span>  <br>  <span class="hljs-attr">notify:</span> <span class="hljs-string">restart</span> <span class="hljs-string">php-fpm</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">config</span> <span class="hljs-string">www.conf</span><br>  <span class="hljs-attr">template:</span> <br>    <span class="hljs-attr">src:</span> <span class="hljs-string">www.conf.j2</span><br>    <span class="hljs-attr">dest:</span> <span class="hljs-string">/etc/php-fpm.d/www.conf</span><br>  <span class="hljs-attr">notify:</span> <span class="hljs-string">restart</span> <span class="hljs-string">php-fpm</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">start</span> <span class="hljs-string">php-fpm</span> <br>  <span class="hljs-attr">service:</span> <br>    <span class="hljs-attr">name:</span> <span class="hljs-string">php-fpm</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">started</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">yes</span><br><br>    <br><span class="hljs-comment">#准备handler文件</span><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># cat roles/php-fpm/handlers/main.yml </span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">restart</span> <span class="hljs-string">nginx</span><br>  <span class="hljs-attr">service:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">nginx</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">restarted</span><br>    <br><span class="hljs-comment">#准备总入口playbook文件</span><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># cat php-fpm_role.yml </span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">websrvs</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br><br>  <span class="hljs-attr">roles:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">php-fpm</span><br></code></pre></td></tr></table></figure><h5 id="4-4-实现MySQL角色"><a href="#4-4-实现MySQL角色" class="headerlink" title="4.4 实现MySQL角色"></a>4.4 实现MySQL角色</h5><p><strong>注意：ansible playbook调用mysql系列模块需要依赖python3-mysql包和利用pip安装pymysql</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#下载准备mysql源文件包</span><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># ls roles/mysql/files/</span><br><span class="hljs-string">mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz</span><br><br><span class="hljs-comment">#创建task文件</span><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># cat roles/mysql/tasks/main.yml </span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">packages</span><br>  <span class="hljs-attr">yum:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; item &#125;&#125;</span>&quot;</span><br>  <span class="hljs-attr">loop:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">libaio</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">numactl-libs</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">python39</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">python3-mysql</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span> <span class="hljs-string">mysql</span> <span class="hljs-string">user</span><br>  <span class="hljs-attr">user:</span> <span class="hljs-string">name=&#123;&#123;</span> <span class="hljs-string">db_user</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">uid=&#123;&#123;</span> <span class="hljs-string">db_uid</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">group=&#123;&#123;</span> <span class="hljs-string">db_group</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-string">system=yes</span> <span class="hljs-string">shell=&quot;/sbin/nologin&quot;</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">mysql</span> <span class="hljs-string">tar</span> <span class="hljs-string">to</span> <span class="hljs-string">remote</span> <span class="hljs-string">host</span> <span class="hljs-string">and</span> <span class="hljs-string">file</span> <span class="hljs-string">mode</span><br>  <span class="hljs-attr">unarchive:</span><br>    <span class="hljs-attr">src:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; db_file &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">dest:</span> <span class="hljs-string">&quot;/usr/local/&quot;</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span> <span class="hljs-string">mysql</span> <span class="hljs-string">lingfile</span><br>  <span class="hljs-attr">file:</span> <br>    <span class="hljs-attr">src:</span> <span class="hljs-string">&quot;/usr/local/mysql-<span class="hljs-template-variable">&#123;&#123; db_version &#125;&#125;</span>-linux-glibc2.12-x86_64&quot;</span><br>    <span class="hljs-attr">dest:</span> <span class="hljs-string">&quot;/usr/local/mysql&quot;</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">link</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">path</span> <span class="hljs-string">file</span><br>  <span class="hljs-attr">copy:</span><br>    <span class="hljs-attr">content:</span> <span class="hljs-string">&quot;PATH=/usr/local/mysql/bin:$PATH&quot;</span><br>    <span class="hljs-attr">dest:</span> <span class="hljs-string">&quot;/etc/profile.d/mysql.sh&quot;</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">config</span> <span class="hljs-string">file</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">src:</span> <span class="hljs-string">my.cnf.j2</span><br>    <span class="hljs-attr">dest:</span> <span class="hljs-string">&quot;/etc/my.cnf&quot;</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">creat</span> <span class="hljs-string">data</span><br>  <span class="hljs-attr">file:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;/data&quot;</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">directory</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">init</span> <span class="hljs-string">mysql</span> <span class="hljs-string">data</span><br>  <span class="hljs-attr">shell:</span><br>   <span class="hljs-attr">cmd:</span> <span class="hljs-string">&quot;/usr/local/mysql/bin/mysqld --initialize-insecure --user=<span class="hljs-template-variable">&#123;&#123; db_user &#125;&#125;</span> --datadir=<span class="hljs-template-variable">&#123;&#123; db_data_dir &#125;&#125;</span>&quot;</span><br>   <span class="hljs-attr">tags:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">init</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">service</span> <span class="hljs-string">script</span><br>  <span class="hljs-attr">copy:</span><br>    <span class="hljs-attr">src:</span> <span class="hljs-string">&quot;/usr/local/mysql/support-files/mysql.server&quot;</span><br>    <span class="hljs-attr">dest:</span> <span class="hljs-string">&quot;/etc/init.d/mysqld&quot;</span><br>    <span class="hljs-attr">remote_src:</span> <span class="hljs-literal">yes</span><br>    <span class="hljs-attr">mode:</span> <span class="hljs-string">&#x27;+x&#x27;</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">config</span> <span class="hljs-string">file</span> <span class="hljs-string">mode</span><br>  <span class="hljs-attr">file:</span><br>    <span class="hljs-attr">path:</span> <span class="hljs-string">&quot;/usr/local/mysql-<span class="hljs-template-variable">&#123;&#123; db_version &#125;&#125;</span>-linux-glibc2.12-x86_64&quot;</span><br>    <span class="hljs-attr">owner:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; db_user &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; db_group &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">recurse:</span> <span class="hljs-literal">yes</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">start</span> <span class="hljs-string">service</span><br>  <span class="hljs-attr">shell:</span><br>    <span class="hljs-attr">cmd:</span> <span class="hljs-string">chkconfig</span> <span class="hljs-string">--add</span> <span class="hljs-string">mysqld;chkconfig</span> <span class="hljs-string">mysqld</span> <span class="hljs-string">on;service</span> <span class="hljs-string">mysqld</span> <span class="hljs-string">start</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">mysql</span> <span class="hljs-string">start</span> <span class="hljs-string">enable</span><br>  <span class="hljs-attr">service:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">mysql</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">started</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">yes</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">change</span> <span class="hljs-string">root</span> <span class="hljs-string">password</span><br>  <span class="hljs-attr">shell:</span><br>    <span class="hljs-attr">cmd:</span> <span class="hljs-string">&quot;/usr/local/mysql/bin/mysqladmin -uroot password <span class="hljs-template-variable">&#123;&#123; db_root_passwd &#125;&#125;</span>&quot;</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span> &#123;&#123; <span class="hljs-string">DBName</span> &#125;&#125; <span class="hljs-string">database</span><br>  <span class="hljs-attr">mysql_db:</span><br>    <span class="hljs-attr">login_host:</span> <span class="hljs-string">&quot;localhost&quot;</span><br>    <span class="hljs-attr">login_user:</span> <span class="hljs-string">&quot;root&quot;</span><br>    <span class="hljs-attr">login_password:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; db_root_passwd &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">login_port:</span> <span class="hljs-number">3306</span><br>    <span class="hljs-attr">login_unix_socket:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; db_data_dir &#125;&#125;</span>/mysql.sock&quot;</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; DBName &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">collation:</span> <span class="hljs-string">utf8_bin</span><br>    <span class="hljs-attr">encoding:</span> <span class="hljs-string">utf8</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span> &#123;&#123; <span class="hljs-string">DBUser</span> &#125;&#125;<br>  <span class="hljs-attr">mysql_user:</span><br>    <span class="hljs-attr">login_host:</span> <span class="hljs-string">&quot;localhost&quot;</span><br>    <span class="hljs-attr">login_user:</span> <span class="hljs-string">&quot;root&quot;</span><br>    <span class="hljs-attr">login_password:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; db_root_passwd &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">login_port:</span> <span class="hljs-number">3306</span><br>    <span class="hljs-attr">login_unix_socket:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; db_data_dir &#125;&#125;</span>/mysql.sock&quot;</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; DBUser&#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; DBPassword &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">priv:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; DBUser &#125;&#125;</span>.*:ALL&quot;</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-string">&quot;10.0.0.%&quot;</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br>    <br>    <br><span class="hljs-comment">#准备MySQL 配置文件模板</span><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># cat roles/mysql/templates/my.cnf.j2</span><br>[<span class="hljs-string">mysqld</span>]<br><span class="hljs-string">server-id=1</span><br><span class="hljs-string">log-bin</span><br><span class="hljs-string">datadir=&#123;&#123;</span> <span class="hljs-string">db_data_dir</span> <span class="hljs-string">&#125;&#125;</span><br><span class="hljs-string">socket=&#123;&#123;</span> <span class="hljs-string">db_data_dir</span> <span class="hljs-string">&#125;&#125;/mysql.sock</span><br><span class="hljs-string">log-error=&#123;&#123;</span> <span class="hljs-string">db_data_dir</span> <span class="hljs-string">&#125;&#125;/mysql.log</span><br><span class="hljs-string">pid-file=&#123;&#123;</span> <span class="hljs-string">db_data_dir</span> <span class="hljs-string">&#125;&#125;/mysql.pid</span><br><br>[<span class="hljs-string">client</span>]<br><span class="hljs-string">socket=&#123;&#123;</span> <span class="hljs-string">db_data_dir</span> <span class="hljs-string">&#125;&#125;/mysql.sock</span><br><br><span class="hljs-comment">#准备总入口playbook文件</span><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># cat mysql_role.yml </span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">dbsrvs</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">gather_facts:</span> <span class="hljs-literal">no</span><br><br>  <span class="hljs-attr">roles:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">mysql</span><br></code></pre></td></tr></table></figure><h5 id="4-5-部署zabbix-server"><a href="#4-5-部署zabbix-server" class="headerlink" title="4.5 部署zabbix-server"></a>4.5 部署zabbix-server</h5><h6 id="依赖上面搭建好的LNMP架构实现"><a href="#依赖上面搭建好的LNMP架构实现" class="headerlink" title="依赖上面搭建好的LNMP架构实现"></a><strong>依赖上面搭建好的LNMP架构实现</strong></h6><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#主入口playbook</span><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># vim zabbix_server.yml </span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">webserver</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">roles:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">nginx</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">php-fpm</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">dbhost</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">roles:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">mysql</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">webserver</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">roles:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">zabbix_server</span><br><br><br><br><span class="hljs-comment">#tasks文件</span><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># cat roles/zabbix_server/tasks/main.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">config</span> <span class="hljs-string">zabbix</span> <span class="hljs-string">yum</span> <span class="hljs-string">repo</span><br>  <span class="hljs-attr">yum_repository:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;ansible_zabbix&quot;</span><br>    <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;zabbix repo&quot;</span><br>    <span class="hljs-attr">baseurl:</span> <span class="hljs-string">&quot;https://mirrors.aliyun.com/zabbix/zabbix/<span class="hljs-template-variable">&#123;&#123; zabbix_version &#125;&#125;</span>/rhel/<span class="hljs-template-variable">&#123;&#123; ansible_distribution_major_version &#125;&#125;</span>/<span class="hljs-template-variable">&#123;&#123; ansible_architecture &#125;&#125;</span>/&quot;</span><br>    <span class="hljs-attr">gpgcheck:</span> <span class="hljs-literal">yes</span><br>    <span class="hljs-attr">gpgkey:</span> <span class="hljs-string">&quot;https://mirrors.aliyun.com/zabbix/zabbix-official-repo.key&quot;</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">zabbix-server</span><br>  <span class="hljs-attr">yum:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; item &#125;&#125;</span>&quot;</span><br>  <span class="hljs-attr">loop:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">zabbix-server-mysql</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">zabbix-agent2</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">zabbix-get</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">zabbix-web-mysql</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">mysql</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">zabbix_server.conf</span> <br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">src:</span> <span class="hljs-string">zabbix_server.conf.j2</span><br>    <span class="hljs-attr">dest:</span> <span class="hljs-string">/etc/zabbix/zabbix_server.conf</span><br>    <span class="hljs-attr">mode:</span> <span class="hljs-number">0600</span><br>  <span class="hljs-attr">notify:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">restart</span> <span class="hljs-string">zabbix-server</span><br>  <span class="hljs-attr">tags:</span> <span class="hljs-string">restart</span> <span class="hljs-string">zabbix-server</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">chown</span>  <span class="hljs-string">zabbix-web</span><br>  <span class="hljs-attr">file:</span><br>    <span class="hljs-attr">path:</span>  <span class="hljs-string">/etc/zabbix/web</span>    <br>    <span class="hljs-attr">state:</span> <span class="hljs-string">directory</span><br>    <span class="hljs-attr">owner:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; user &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; group &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">recurse:</span> <span class="hljs-literal">yes</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">zabbix-server</span> <span class="hljs-string">web</span> <span class="hljs-string">conf</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">src:</span> <span class="hljs-string">zabbix-server-ngx.conf.j2</span><br>    <span class="hljs-attr">dest:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; install_dir &#125;&#125;</span>/conf.d/zabbix_server_ngx.conf&quot;</span><br>    <span class="hljs-attr">owner:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; user &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">group:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; group &#125;&#125;</span>&quot;</span><br>  <span class="hljs-attr">notify:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">restart</span> <span class="hljs-string">nginx</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Example</span> <span class="hljs-string">Initialize</span> <span class="hljs-string">the</span> <span class="hljs-string">zabbix</span> <span class="hljs-string">table</span><br>  <span class="hljs-attr">shell:</span> <span class="hljs-string">gunzip</span> <span class="hljs-string">-c</span> <span class="hljs-string">/usr/share/doc/zabbix-server-mysql*/create.sql.gz</span> <span class="hljs-string">|</span> <span class="hljs-string">mysql</span> <span class="hljs-string">-uzabbix</span> <span class="hljs-string">-h10.0.0.134</span> <span class="hljs-string">-p123456</span> <span class="hljs-string">zabbix</span><br>  <span class="hljs-attr">args:</span><br>    <span class="hljs-attr">executable:</span> <span class="hljs-string">/bin/bash</span><br><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">start</span> <span class="hljs-string">zabbix-server</span><br>  <span class="hljs-attr">service:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">zabbix-server</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">restarted</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">yes</span><br><br>    <br><span class="hljs-comment">#查看handler</span><br>[<span class="hljs-number">20</span><span class="hljs-string">:34:11</span> <span class="hljs-string">root@ansible-rocky</span> <span class="hljs-string">zabbix_server</span>]<span class="hljs-string">$</span> <span class="hljs-string">cat</span> <span class="hljs-string">/opt/roles/zabbix_server/handlers/main.yml</span> <br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">restart</span> <span class="hljs-string">zabbix-server</span><br>  <span class="hljs-attr">service:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">zabbix-server</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">restarted</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">restart</span> <span class="hljs-string">nginx</span><br>  <span class="hljs-attr">service:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">nginx</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">restarted</span><br>    <br><span class="hljs-comment">#查看template文件</span><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># grep -Ev &#x27;^$|#&#x27; roles/zabbix_server/templates/zabbix_server.conf.j2 </span><br><span class="hljs-string">LogFile=/var/log/zabbix/zabbix_server.log</span><br><span class="hljs-string">LogFileSize=0</span><br><span class="hljs-string">PidFile=/var/run/zabbix/zabbix_server.pid</span><br><span class="hljs-string">SocketDir=/var/run/zabbix</span><br><span class="hljs-string">DBHost=&#123;&#123;</span> <span class="hljs-string">DBHost</span> <span class="hljs-string">&#125;&#125;</span><br><span class="hljs-string">DBName=&#123;&#123;</span> <span class="hljs-string">DBName</span> <span class="hljs-string">&#125;&#125;</span><br><span class="hljs-string">DBUser=&#123;&#123;</span> <span class="hljs-string">DBUser</span> <span class="hljs-string">&#125;&#125;</span><br><span class="hljs-string">DBPassword=&#123;&#123;</span> <span class="hljs-string">DBPassword</span> <span class="hljs-string">&#125;&#125;</span><br><span class="hljs-string">SNMPTrapperFile=/var/log/snmptrap/snmptrap.log</span><br><span class="hljs-string">Timeout=4</span><br><span class="hljs-string">AlertScriptsPath=/usr/lib/zabbix/alertscripts</span><br><span class="hljs-string">ExternalScripts=/usr/lib/zabbix/externalscripts</span><br><span class="hljs-string">LogSlowQueries=3000</span><br><span class="hljs-string">StatsAllowedIP=127.0.0.1</span><br><span class="hljs-comment">##zabbix网页配置文件</span><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># cat roles/zabbix_server/templates/zabbix-server-ngx.conf.j2</span><br><span class="hljs-string">server</span> &#123;<br>    <span class="hljs-string">listen</span> <span class="hljs-number">80</span><span class="hljs-string">;</span><br>    <span class="hljs-string">server_name</span> &#123;&#123; <span class="hljs-string">fqdn</span> &#125;&#125;<span class="hljs-string">;</span><br>    <span class="hljs-string">root</span> <span class="hljs-string">/usr/share/zabbix;</span><br>    <span class="hljs-string">index</span> <span class="hljs-string">index.php;</span><br>    <span class="hljs-string">location</span> <span class="hljs-string">=</span> <span class="hljs-string">/favicon.ico</span> &#123;<br>        <span class="hljs-string">log_not_found</span>   <span class="hljs-string">off;</span><br>    &#125;<br><br>    <span class="hljs-string">location</span> <span class="hljs-string">/</span> &#123;<br>        <span class="hljs-string">try_files</span>       <span class="hljs-string">$uri</span> <span class="hljs-string">$uri/</span> <span class="hljs-string">=404;</span><br>    &#125;<br><br>    <span class="hljs-string">location</span> <span class="hljs-string">/assets</span> &#123;<br>         <span class="hljs-string">access_log</span>      <span class="hljs-string">off;</span><br>         <span class="hljs-string">expires</span>         <span class="hljs-string">10d;</span><br>    &#125;<br><br>    <span class="hljs-string">location</span> <span class="hljs-string">~</span> <span class="hljs-string">/\.ht</span> &#123;<br>         <span class="hljs-string">deny</span>            <span class="hljs-string">all;</span><br>    &#125;<br><br>    <span class="hljs-string">location</span> <span class="hljs-string">~</span> <span class="hljs-string">/(api\/|conf</span>[<span class="hljs-string">^\.</span>]<span class="hljs-string">|include|locale|vendor)</span> &#123;<br>         <span class="hljs-string">deny</span>            <span class="hljs-string">all;</span><br>         <span class="hljs-string">return</span>          <span class="hljs-number">404</span><span class="hljs-string">;</span><br>    &#125;<br>    <span class="hljs-string">location</span> <span class="hljs-string">~</span> [<span class="hljs-string">^/</span>]<span class="hljs-string">\.php(/|$)</span> &#123;<br>        <span class="hljs-string">fastcgi_pass</span>   <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:9000;</span><br>        <span class="hljs-comment">#fastcgi_pass    unix:/run/php-fpm/zabbix.sock;</span><br>        <span class="hljs-string">fastcgi_split_path_info</span> <span class="hljs-string">^(.+\.php)(/.+)$;</span><br>        <span class="hljs-string">fastcgi_index</span>   <span class="hljs-string">index.php;</span><br><br>        <span class="hljs-string">fastcgi_param</span>   <span class="hljs-string">DOCUMENT_ROOT</span>   <span class="hljs-string">/usr/share/zabbix;</span><br>        <span class="hljs-string">fastcgi_param</span>   <span class="hljs-string">SCRIPT_FILENAME</span> <span class="hljs-string">/usr/share/zabbix$fastcgi_script_name;</span><br>        <span class="hljs-string">fastcgi_param</span>   <span class="hljs-string">PATH_TRANSLATED</span> <span class="hljs-string">/usr/share/zabbix$fastcgi_script_name;</span><br><br>        <span class="hljs-string">include</span> <span class="hljs-string">fastcgi_params;</span><br>        <span class="hljs-string">fastcgi_param</span>   <span class="hljs-string">QUERY_STRING</span>    <span class="hljs-string">$query_string;</span><br>        <span class="hljs-string">fastcgi_param</span>   <span class="hljs-string">REQUEST_METHOD</span>  <span class="hljs-string">$request_method;</span><br>        <span class="hljs-string">fastcgi_param</span>   <span class="hljs-string">CONTENT_TYPE</span>    <span class="hljs-string">$content_type;</span><br>        <span class="hljs-string">fastcgi_param</span>   <span class="hljs-string">CONTENT_LENGTH</span>  <span class="hljs-string">$content_length;</span><br><br>        <span class="hljs-string">fastcgi_intercept_errors</span>        <span class="hljs-string">on;</span><br>        <span class="hljs-string">fastcgi_ignore_client_abort</span>     <span class="hljs-string">off;</span><br>        <span class="hljs-string">fastcgi_connect_timeout</span>         <span class="hljs-number">60</span><span class="hljs-string">;</span><br>        <span class="hljs-string">fastcgi_send_timeout</span>            <span class="hljs-number">180</span><span class="hljs-string">;</span><br>        <span class="hljs-string">fastcgi_read_timeout</span>            <span class="hljs-number">180</span><span class="hljs-string">;</span><br>        <span class="hljs-string">fastcgi_buffer_size</span>             <span class="hljs-string">128k;</span><br>        <span class="hljs-string">fastcgi_buffers</span>                 <span class="hljs-number">4</span> <span class="hljs-string">256k;</span><br>        <span class="hljs-string">fastcgi_busy_buffers_size</span>       <span class="hljs-string">256k;</span><br>        <span class="hljs-string">fastcgi_temp_file_write_size</span>    <span class="hljs-string">256k;</span><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>在client端访问<a href="http://www.xinqi66.org对zabbix/">www.xinqi66.org对zabbix</a> server进行初始化配置后，验证zabbix是否可以登录使用</p><p><img src="image-20230828145310945.png" alt="image-20230828145310945"></p><h4 id="4-2-2-部署zabbix-agent"><a href="#4-2-2-部署zabbix-agent" class="headerlink" title="4.2.2 部署zabbix-agent"></a>4.2.2 部署zabbix-agent</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#目录结构</span><br>[<span class="hljs-number">22</span><span class="hljs-string">:59:31</span> <span class="hljs-string">root@ansible-rocky</span> <span class="hljs-string">zabbix_agent2</span>]<span class="hljs-string">$</span> <span class="hljs-string">tree</span><br><span class="hljs-string">.</span><br><span class="hljs-string">├──</span> <span class="hljs-string">files</span><br><span class="hljs-string">├──</span> <span class="hljs-string">handlers</span><br><span class="hljs-string">│</span>   <span class="hljs-string">└──</span> <span class="hljs-string">main.yml</span><br><span class="hljs-string">├──</span> <span class="hljs-string">tasks</span><br><span class="hljs-string">│</span>   <span class="hljs-string">└──</span> <span class="hljs-string">main.yml</span><br><span class="hljs-string">└──</span> <span class="hljs-string">templates</span><br>    <span class="hljs-string">└──</span> <span class="hljs-string">zabbix_agent2.conf.j2</span><br><br><span class="hljs-number">5</span> <span class="hljs-string">directories,</span> <span class="hljs-number">11</span> <span class="hljs-string">files</span><br><br><span class="hljs-comment">#task文件</span><br>[<span class="hljs-number">23</span><span class="hljs-string">:14:12</span> <span class="hljs-string">root@ansible-rocky</span> <span class="hljs-string">opt</span>]<span class="hljs-string">$</span> <span class="hljs-string">cat</span> <span class="hljs-string">/opt/roles/zabbix_agent2/tasks/main.yml</span> <br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">repo</span> <br>  <span class="hljs-attr">yum_repository:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;ansible_zabbix&quot;</span><br>    <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;zabbix repo&quot;</span><br>    <span class="hljs-attr">baseurl:</span> <span class="hljs-string">&quot;https://mirrors.aliyun.com/zabbix/zabbix/<span class="hljs-template-variable">&#123;&#123; zabbix_version &#125;&#125;</span>/rhel/<span class="hljs-template-variable">&#123;&#123; ansible_distribution_major_version &#125;&#125;</span>/<span class="hljs-template-variable">&#123;&#123; ansible_architecture &#125;&#125;</span>/&quot;</span><br>    <span class="hljs-attr">gpgcheck:</span> <span class="hljs-literal">yes</span><br>    <span class="hljs-attr">gpgkey:</span> <span class="hljs-string">&quot;https://mirrors.aliyun.com/zabbix/zabbix-official-repo.key&quot;</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">agent2</span> <span class="hljs-string">for</span> <span class="hljs-string">centos</span> <span class="hljs-string">or</span> <span class="hljs-string">rocky</span><br>  <span class="hljs-attr">yum:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">zabbix-agent2</span><br>  <span class="hljs-attr">when:</span> <br>    <span class="hljs-bullet">-</span> <span class="hljs-string">ansible_distribution</span> <span class="hljs-string">==</span> <span class="hljs-string">&quot;Rocky&quot;</span> <span class="hljs-string">or</span> <span class="hljs-string">ansible_distribution</span> <span class="hljs-string">==</span> <span class="hljs-string">&quot;Centos&quot;</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">agent2</span> <span class="hljs-string">for</span> <span class="hljs-string">centos</span> <span class="hljs-string">or</span> <span class="hljs-string">ubuntu</span><br>  <span class="hljs-attr">apt:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">zabbix-agent2</span><br>    <span class="hljs-attr">update_cache:</span> <span class="hljs-literal">yes</span><br>  <span class="hljs-attr">when:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">ansible_distribution</span> <span class="hljs-string">==</span> <span class="hljs-string">&quot;Ubuntu&quot;</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">config</span> <span class="hljs-string">file</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">src:</span> <span class="hljs-string">zabbix_agent2.conf.j2</span><br>    <span class="hljs-attr">dest:</span> <span class="hljs-string">&quot;/etc/zabbix/zabbix_agent2.conf&quot;</span><br>    <span class="hljs-attr">mode:</span> <span class="hljs-number">0644</span><br>  <span class="hljs-attr">notify:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">restart</span> <span class="hljs-string">zabbix_agent2</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">start</span> <span class="hljs-string">zabbix-agent2</span><br>  <span class="hljs-attr">service:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">zabbix-agent2</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">started</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">yes</span><br>    <br><span class="hljs-comment">#handler文件</span><br>[<span class="hljs-number">23</span><span class="hljs-string">:14:14</span> <span class="hljs-string">root@ansible-rocky</span> <span class="hljs-string">opt</span>]<span class="hljs-string">$</span> <span class="hljs-string">cat</span> <span class="hljs-string">/opt/roles/zabbix_agent2/handlers/main.yml</span> <br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">restart</span> <span class="hljs-string">zabbix_agent2</span><br>  <span class="hljs-attr">service:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">zabbix-agent2</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">restarted</span><br>    <br><span class="hljs-comment">#template文件</span><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># cat roles/zabbix-agent2/templates/zabbix_agent2.conf.j2 </span><br><span class="hljs-string">PidFile=/var/run/zabbix/zabbix_agent2.pid</span><br><span class="hljs-string">LogFile=/var/log/zabbix/zabbix_agent2.log</span><br><span class="hljs-string">LogFileSize=0</span><br><span class="hljs-string">Server=&#123;&#123;</span> <span class="hljs-string">zabbix_server_ip</span> <span class="hljs-string">&#125;&#125;</span><br><span class="hljs-string">ServerActive=&#123;&#123;</span> <span class="hljs-string">zabbix_server_ip</span> <span class="hljs-string">&#125;&#125;</span><br><span class="hljs-string">Hostname=&#123;&#123;</span> <span class="hljs-string">ansible_default_ipv4.address</span> <span class="hljs-string">&#125;&#125;</span><br><span class="hljs-string">Include=/etc/zabbix/zabbix_agent2.d/*.conf</span><br><span class="hljs-string">ControlSocket=/tmp/agent.sock</span><br><br><br>[<span class="hljs-string">root@Rocky8</span> <span class="hljs-string">lnmp</span>]<span class="hljs-comment"># cat zabbix_agent2.yml </span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">zabbinx_agent2host</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br><br>  <span class="hljs-attr">roles:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">zabbix-agent2</span><br></code></pre></td></tr></table></figure><p>验证主机</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@Rocky8</span> /]<span class="hljs-meta"># zabbix_get -s 10.0.0.138 -k agent.ping</span><br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第四周作业</title>
    <link href="/2023/08/03/%E7%AC%AC%E5%9B%9B%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2023/08/03/%E7%AC%AC%E5%9B%9B%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><h4 id="1-自定义写出10个定时任务的示例："><a href="#1-自定义写出10个定时任务的示例：" class="headerlink" title="1. 自定义写出10个定时任务的示例："></a>1. 自定义写出10个定时任务的示例：</h4><p>使用周期性计划任务crond来完成定时任务，在linux中<code>crond</code>服务是一个用于调度和执行定时任务的后台服务。它使用<code>cron</code>表达式来表示定时任务的执行时间。<code>cron</code>表达式由5个或6个字段组成，每个字段代表不同的时间单位。这些字段的含义如下：</p><ol><li>分钟（Minute）：取值范围为0-59。</li><li>小时（Hour）：取值范围为0-23。</li><li>日期（Day of the Month）：取值范围为1-31。</li><li>月份（Month）：取值范围为1-12或使用英文缩写（Jan-Dec）。</li><li>星期（Day of the Week）：取值范围为0-7或使用英文缩写（Sun-Sat）。注意：0和7都表示周日。</li></ol><figure class="highlight apache"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># For details see man 4 crontabs</span><br><span class="hljs-comment"># Example of job definition:</span><br><span class="hljs-comment"># .---------------- minute (0 - 59)</span><br><span class="hljs-comment"># | .------------- hour (0 - 23)</span><br><span class="hljs-comment"># | | .---------- day of month (1 - 31)</span><br><span class="hljs-comment"># | | | .------- month (1 - 12) OR jan,feb,mar,apr ...</span><br><span class="hljs-comment"># | | | | .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span><br><span class="hljs-comment"># | | | | |</span><br><span class="hljs-comment"># * * * * * user-name command to be executed</span><br></code></pre></td></tr></table></figure><p><code>cron</code>表达式还可以包含第六个字段，用于指定要运行的用户。</p><p>一个典型的<code>cron</code>表达式的格式如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">*</span> <span class="hljs-emphasis">* *</span> <span class="hljs-emphasis">* *</span> command<br></code></pre></td></tr></table></figure><p>每个星号（*）代表一个字段，表示“任意值”。因此，一个<code>cron</code>表达式可以用来描述定时任务的执行时间。</p><p>例如：</p><ul><li><code>* * * * * command</code>：每分钟都运行一次。</li><li><code>0 * * * * command</code>：每小时的第0分钟运行一次。</li><li><code>0 0 * * * command</code>：每天的0点0分运行一次。</li><li><code>0 0 * * 1 command</code>：每周一的0点0分运行一次。</li><li><code>0 0 1 * * command</code>：每月1日的0点0分运行一次。</li></ul><p>使用<code>crontab</code>命令可以编辑和管理用户的定时任务。常用的<code>crontab</code>命令选项包括：</p><ul><li><code>crontab -e</code>：编辑当前用户的定时任务。</li><li><code>crontab -l</code>：列出当前用户的定时任务。</li><li><code>crontab -r</code>：删除当前用户的定时任务。</li></ul><p>例如，要编辑当前用户的定时任务，可以运行：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">crontab -e</span><br></code></pre></td></tr></table></figure><p>然后，编辑<code>crontab</code>文件，按照上述格式添加定时任务，并保存文件即可。</p><h5 id="以下为10个定时任务的示例："><a href="#以下为10个定时任务的示例：" class="headerlink" title="以下为10个定时任务的示例："></a>以下为10个定时任务的示例：</h5><ol><li><p><strong>更新系统包和安全补丁：</strong></p><ul><li>配置过程：编辑root用户的定时任务表<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo crontab -e<br></code></pre></td></tr></table></figure></li><li>添加定时任务：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">0 3 * * * apt-get update &amp;&amp; apt-get upgrade -y<br></code></pre></td></tr></table></figure></li></ul></li><li><p><strong>清理临时文件和日志：</strong></p><ul><li>脚本：使用Bash脚本清理指定目录的临时文件和过期日志。</li><li>脚本文件：clean_temp_logs.sh<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>find /tmp -<span class="hljs-built_in">type</span> f -mtime +7 -delete<br>find /var/log -<span class="hljs-built_in">type</span> f -mtime +30 -delete<br></code></pre></td></tr></table></figure></li><li>配置过程：编辑root用户的定时任务表<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo crontab -e<br></code></pre></td></tr></table></figure></li><li>添加定时任务：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">30 3 * * * /path/to/clean_temp_logs.sh<br></code></pre></td></tr></table></figure></li></ul></li><li><p><strong>备份重要数据：</strong></p><ul><li>脚本：使用rsync命令备份重要数据到远程服务器。</li><li>脚本文件：backup_data.sh<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>rsync -avz /path/to/source/ user@remote_server:/path/to/backup/<br></code></pre></td></tr></table></figure></li><li>配置过程：编辑root用户的定时任务表<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo crontab -e<br></code></pre></td></tr></table></figure></li><li>添加定时任务：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">0 2 * * * /path/to/backup_data.sh<br></code></pre></td></tr></table></figure></li></ul></li><li><p><strong>监控系统资源使用情况：</strong></p><ul><li>脚本：使用sar或vmstat等工具记录系统资源使用情况。</li><li>配置过程：编辑root用户的定时任务表<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo crontab -e<br></code></pre></td></tr></table></figure></li><li>添加定时任务：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">* * * * * /usr/bin/sar -q &gt;&gt; /var/log/sar.log<br></code></pre></td></tr></table></figure></li></ul></li><li><p><strong>监控磁盘空间：</strong></p><ul><li>脚本：使用df命令记录磁盘空间使用情况。</li><li>配置过程：编辑root用户的定时任务表<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo crontab -e<br></code></pre></td></tr></table></figure></li><li>添加定时任务：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">0 4 * * * /bin/df -h &gt;&gt; /var/log/disk_space.log<br></code></pre></td></tr></table></figure></li></ul></li><li><p><strong>备份数据库：</strong></p><ul><li>脚本：使用数据库备份工具，如mysqldump，备份数据库到指定目录。</li><li>配置过程：编辑root用户的定时任务表<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo crontab -e<br></code></pre></td></tr></table></figure></li><li>添加定时任务：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">30 2 * * * /path/to/mysqldump -u DB_USER -pDB_PASSWORD DB_NAME &gt; /path/to/backup/db_backup_$(<span class="hljs-built_in">date</span> +\%Y\%m\%d).sql<br></code></pre></td></tr></table></figure></li></ul></li><li><p><strong>监控网络连接：</strong></p><ul><li>脚本：使用netstat或ss等工具记录当前网络连接情况。</li><li>配置过程：编辑root用户的定时任务表<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo crontab -e<br></code></pre></td></tr></table></figure></li><li>添加定时任务：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">* * * * * /bin/netstat -nat &gt;&gt; /var/log/network_connections.log<br></code></pre></td></tr></table></figure></li></ul></li><li><p><strong>检查日志文件：</strong></p><ul><li>脚本：使用grep或awk等工具检查关键字是否出现在日志文件中。</li><li>配置过程：编辑root用户的定时任务表<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo crontab -e<br></code></pre></td></tr></table></figure></li><li>添加定时任务：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">0 3 * * * grep <span class="hljs-string">&quot;ERROR&quot;</span> /var/log/application.log &gt;&gt; /var/log/error.log<br></code></pre></td></tr></table></figure></li></ul></li><li><p><strong>监控进程状态：</strong></p><ul><li>脚本：使用ps命令检查关键进程的状态。</li><li>配置过程：编辑root用户的定时任务表<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo crontab -e<br></code></pre></td></tr></table></figure></li><li>添加定时任务：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">* * * * * /bin/ps aux | grep <span class="hljs-string">&quot;my_process&quot;</span> &gt;&gt; /var/log/process_status.log<br></code></pre></td></tr></table></figure></li></ul></li><li><p><strong>定期重启服务：</strong></p><ul><li>脚本：使用systemctl或service命令重启指定服务。</li><li>配置过程：编辑root用户的定时任务表<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo crontab -e<br></code></pre></td></tr></table></figure></li><li>添加定时任务：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">0 4 * * * /bin/systemctl restart my_service<br></code></pre></td></tr></table></figure></li></ul></li></ol><h4 id="2-图文并茂说明Linux进程和内存概念："><a href="#2-图文并茂说明Linux进程和内存概念：" class="headerlink" title="2. 图文并茂说明Linux进程和内存概念："></a>2. 图文并茂说明Linux进程和内存概念：</h4><h5 id="1-进程"><a href="#1-进程" class="headerlink" title="1. 进程"></a><strong>1. 进程</strong></h5><ul><li>进程是计算机中正在执行的程序的实例。每个进程都有独立的虚拟内存空间，包含代码、数据和堆栈段。进程之间相互隔离，通过操作系统调度进行并发执行。每个进程有唯一的进程标识符（PID）来标识自己。</li></ul><p><strong>2. 进程状态</strong></p><ul><li>创建状态（Creation State）：进程在创建时需要申请一个空白的PCB（进程控制块），填写控制和管理进程的信息，完成资源分配。如果创建工作无法完成（例如资源不足），进程处于创建状态，无法被调度运行。</li><li>就绪状态（Ready State）：进程已准备好，已分配到所需资源，只要分配到CPU就能够立即运行。</li><li>执行状态（Running State）：进程处于就绪状态被调度后，进入执行状态，正在使用CPU执行指令。</li><li>阻塞状态（Blocked State）：正在执行的进程由于某些事件（例如I/O请求、申请缓存区失败）而暂时无法运行，进程被阻塞。在满足请求时进入就绪状态等待系统调度。</li><li>终止状态（Termination State）：进程结束，或出现错误，或被系统终止，进入终止状态，无法再执行。</li><li>僵死状态态（zombie）：僵尸态，结束进程，父进程结束前，子进程不关闭，杀死父进程可以关闭僵死<br>态的子进程</li></ul><p><img src="image-20230803220913928.png" alt="image-20230803220913928"></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#bash</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#echo $BASHPID</span><br><span class="hljs-number">1809</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#echo $PPID</span><br><span class="hljs-number">1436</span><br><span class="hljs-meta">#将父进程设为停止态</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#kill -19 1436</span><br><span class="hljs-meta">#杀死子进程，使其进入僵尸态</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#kill -9 1809</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#ps aux #可以看到上面图示的结果，STAT为Z，表示为僵尸态</span><br><span class="hljs-meta">#方法1:恢复父进程</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#kill -18 1436</span><br><span class="hljs-meta">#方法2:杀死父进程</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#kill -9 1436</span><br><span class="hljs-meta">#再次观察，可以僵尸态的进程不存在了</span><br>[root<span class="hljs-symbol">@centos8</span> ~]<span class="hljs-meta">#ps aux</span><br></code></pre></td></tr></table></figure><p><strong>3. 状态之间的转换</strong></p><p><img src="image-20230803221133174.png" alt="image-20230803221133174"></p><ul><li>运行态（Running State） -&gt; 就绪态（Ready State）：进程占用CPU的时间过长，或者有更高优先级的进程需要运行时，当前进程被迫让出CPU，进入就绪状态。</li><li>就绪态（Ready State） -&gt; 运行态（Running State）：运行的进程的时间片用完，调度选择合适的进程分配CPU。</li><li>运行态（Running State） -&gt; 阻塞态（Blocked State）：正在执行的进程因发生某等待事件而无法执行，例如发生了I/O请求。</li><li>阻塞态（Blocked State） -&gt; 就绪态（Ready State）：进程所等待的事件已经发生，进程进入就绪队列。</li></ul><p><strong>4. Linux内存管理</strong> Linux的内存管理涉及以下几个概念：</p><ul><li>物理内存：计算机实际的硬件内存。</li><li>虚拟内存：每个进程看到的独立内存空间，包括代码、数据、堆、栈等。</li><li>页（Page）：虚拟内存和物理内存之间的固定大小的内存块。</li><li>页面置换：将虚拟内存中的某些页从RAM（物理内存）移出到磁盘，以便为其他需要的页腾出空间。</li></ul><p><strong>5. 进程优先级</strong> </p><p>Linux中的进程优先级用Nice值来表示，取值范围一般是-20（最高优先级）到+19（最低优先级）。Nice值越低，优先级越高。进程可以通过调整Nice值来影响CPU调度，但需要足够的权限来修改。</p><p><strong>6. 进程分类</strong></p><ul><li>前台进程：在终端直接运行的进程，通常会占用终端的输入输出。</li><li>后台进程：在终端后加上<code>&amp;</code>运行的进程，它不会占用终端的输入输出。</li><li>守护进程（Daemon）：在后台运行的特殊进程，通常用于在系统启动时运行，没有终端交互。</li></ul><p><strong>7. 进程父子关系</strong> 在Linux中，进程的创建和管理通常遵循父子关系。当一个进程（父进程）创建另一个进程（子进程）时，子进程将继承一些父进程的属性。父进程可以通过PID跟踪和管理子进程，并在需要时等待子进程结束。这种关系可以形成进程树，其中父进程是根，子进程是树干和树枝。</p><h4 id="3-图文并茂说明Linux启动流程："><a href="#3-图文并茂说明Linux启动流程：" class="headerlink" title="3. 图文并茂说明Linux启动流程："></a>3. 图文并茂说明Linux启动流程：</h4><p><img src="wKiom1fVBELjXsvaAAUkuL83t2Q304-1691329547377.jpg" alt="wKiom1fVBELjXsvaAAUkuL83t2Q304"></p><p>Linux的启动流程经过多个阶段，包括BIOS/UEFI、Bootloader、内核加载和初始化、系统服务启动等步骤。</p><ol><li><p><strong>BIOS/UEFI：</strong></p><ul><li>计算机通电后首先执行BIOS或UEFI固件。这个固件执行硬件自检（POST）并初始化硬件设备。</li><li>然后从可引导设备中加载Bootloader。</li></ul></li><li><p><strong>Bootloader：</strong></p><ul><li>Bootloader负责加载Linux内核。最常见的Bootloader是GRUB（GRand Unified Bootloader）。</li><li>GRUB允许用户选择不同的内核版本和操作系统进行启动。</li><li>Bootloader加载内核映像文件并将控制权交给内核。</li></ul></li><li><p><strong>Linux内核加载和初始化：</strong></p><ul><li>内核被加载到内存中并解压缩。</li><li>初始化内核数据结构、设置中断处理、初始化设备驱动等。</li></ul></li><li><p><strong>用户空间初始化：</strong></p><ul><li>内核启动后，它会执行用户空间的初始化程序<code>/sbin/init</code>或者其他指定的程序。</li><li>通常，现代系统使用systemd作为init进程。</li></ul></li><li><p><strong>系统服务启动：</strong></p><ul><li>systemd根据配置文件启动各种系统服务和守护进程。</li><li>完成初始化后，系统进入多用户状态，可以开始用户登录和应用程序的运行。</li></ul></li></ol><h4 id="4-自定义一个systemd服务定时去其他服务器上检查-tmp-下文件的个数，如果发现数量有变化就记录变化情况到文件中。"><a href="#4-自定义一个systemd服务定时去其他服务器上检查-tmp-下文件的个数，如果发现数量有变化就记录变化情况到文件中。" class="headerlink" title="4. 自定义一个systemd服务定时去其他服务器上检查/tmp/下文件的个数，如果发现数量有变化就记录变化情况到文件中。"></a>4. 自定义一个systemd服务定时去其他服务器上检查/tmp/下文件的个数，如果发现数量有变化就记录变化情况到文件中。</h4><p>要在Linux中创建一个自定义的systemd服务，定期检查远程服务器上的文件数量，并记录变化情况到文件中，可以按照以下步骤进行操作：</p><ol><li>编写脚本：首先，创建一个脚本，用于检查文件数量并记录变化情况。在本例中，我们将创建一个Bash脚本，保存为<code>check_files.sh</code>，并放置在合适的位置，比如<code>/usr/local/bin/</code>。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br>REMOTE_SERVER=<span class="hljs-string">&quot;10.0.0.133&quot;</span><br>REMOTE_DIR=<span class="hljs-string">&quot;/tmp/&quot;</span><br>LOG_FILE=<span class="hljs-string">&quot;/var/log/file_count.log&quot;</span><br><br><span class="hljs-comment"># 获取当前文件数量</span><br>current_count=$(ssh <span class="hljs-string">&quot;<span class="hljs-variable">$REMOTE_SERVER</span>&quot;</span> <span class="hljs-string">&quot;ls -1 \&quot;<span class="hljs-variable">$REMOTE_DIR</span>\&quot; | wc -l&quot;</span>)<br><br><span class="hljs-comment"># 读取上一次记录的文件数量</span><br><span class="hljs-keyword">if</span> [ -f <span class="hljs-string">&quot;<span class="hljs-variable">$LOG_FILE</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>    last_count=$(<span class="hljs-built_in">tail</span> -n 1 <span class="hljs-string">&quot;<span class="hljs-variable">$LOG_FILE</span>&quot;</span> | <span class="hljs-built_in">cut</span> -d <span class="hljs-string">&#x27; &#x27;</span> -f 3)<br><span class="hljs-keyword">else</span><br>    last_count=0<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment"># 如果数量有变化，则记录到日志文件</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$current_count</span>&quot;</span> -ne <span class="hljs-string">&quot;<span class="hljs-variable">$last_count</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>    timestamp=$(<span class="hljs-built_in">date</span> +<span class="hljs-string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$timestamp</span> Files in <span class="hljs-variable">$REMOTE_DIR</span>: <span class="hljs-variable">$current_count</span>&quot;</span> &gt;&gt; <span class="hljs-string">&quot;<span class="hljs-variable">$LOG_FILE</span>&quot;</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><ol start="2"><li>给脚本添加执行权限：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">chmod</span> +x /usr/local/bin/check_files.sh<br></code></pre></td></tr></table></figure><ol start="3"><li>创建systemd服务单元：现在，我们将创建一个systemd服务单元来运行我们的脚本。</li></ol><p>在<code>/etc/systemd/system/</code>目录下，创建一个名为<code>check-files.service</code>的文件：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=Check Files Count <span class="hljs-literal">on</span> Remote Server<br><span class="hljs-attr">After</span>=network.target<br><br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">Type</span>=<span class="hljs-literal">on</span>eshot<br><span class="hljs-attr">ExecStart</span>=/usr/local/bin/check_files.sh<br><br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure><ol start="4"><li>重新加载systemd并启动服务：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl daemon-reload<br>sudo systemctl start check-files.service<br></code></pre></td></tr></table></figure><ol start="5"><li>设置定时运行：为了定期运行该服务，我们将使用systemd的定时器功能。在<code>/etc/systemd/system/</code>目录下，创建一个名为<code>check-files.timer</code>的文件：</li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=Run Check Files Service Every <span class="hljs-number">5</span> Minutes<br><br><span class="hljs-section">[Timer]</span><br><span class="hljs-attr">OnBootSec</span>=<span class="hljs-number">1</span>min<br><span class="hljs-attr">OnUnitActiveSec</span>=<span class="hljs-number">5</span>min<br><br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=timers.target<br></code></pre></td></tr></table></figure><p>上述配置将每隔5分钟运行一次我们的检查服务。</p><ol start="6"><li>启动定时器并启用自启动：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl start check-files.timer<br>sudo systemctl <span class="hljs-built_in">enable</span> check-files.timer<br></code></pre></td></tr></table></figure><p>现在，您的自定义systemd服务已经配置完成。它会定期检查远程服务器上<code>/tmp/</code>目录下文件的数量，并记录变化情况到<code>/var/log/file_count.log</code>文件中。</p><h4 id="5-写Linux内核编译安装博客："><a href="#5-写Linux内核编译安装博客：" class="headerlink" title="5. 写Linux内核编译安装博客："></a>5. 写Linux内核编译安装博客：</h4><p><strong>Linux内核编译安装的详细过程</strong></p><ol><li><p><strong>下载Linux内核</strong><br>首先，您可以从官网或第三方网站下载Linux内核源代码。官网网址为：<a href="https://www.kernel.org/%EF%BC%8C%E6%88%96%E8%80%85%E6%82%A8%E4%B9%9F%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E6%9B%B4%E5%BF%AB%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80%EF%BC%9Ahttp://ftp.sjtu.edu.cn/sites/ftp.kernel.org/pub/linux/kernel/%E3%80%82%E4%BB%8E%E9%80%82%E5%90%88%E6%82%A8%E9%9C%80%E6%B1%82%E7%9A%84%E7%89%88%E6%9C%AC%E4%B8%AD%E4%B8%8B%E8%BD%BD%E5%8E%8B%E7%BC%A9%E5%8C%85%EF%BC%8C%E4%BE%8B%E5%A6%82%E2%80%9Clinux-5.19.tar.gz%E2%80%9D[[1](https://blog.csdn.net/qq_45041871/article/details/127335586)]%E3%80%82">https://www.kernel.org/，或者您也可以使用更快的下载地址：http://ftp.sjtu.edu.cn/sites/ftp.kernel.org/pub/linux/kernel/。从适合您需求的版本中下载压缩包，例如“linux-5.19.tar.gz”[[1](https://blog.csdn.net/qq_45041871/article/details/127335586)]。</a></p></li><li><p><strong>解压Linux内核</strong><br>使用以下命令解压下载的Linux内核压缩包：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tar</span> -zxvf linux-<span class="hljs-number">5</span>.<span class="hljs-number">19</span>.tar.gz<br></code></pre></td></tr></table></figure></li><li><p><strong>选择参考配置文件</strong><br>为了后续的配置工作，您可以选择一个参考配置文件。使用以下命令将配置文件复制到当前目录（假设这里的参考配置文件是/boot/config-5.15.0-46-generic）：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">cp</span> /boot/config-<span class="hljs-number">5</span>.<span class="hljs-number">15</span>.<span class="hljs-number">0</span>-<span class="hljs-number">46</span>-generic .config<br></code></pre></td></tr></table></figure></li><li><p><strong>安装必要依赖</strong><br>在使用make命令编译之前，需要安装一些必要的依赖库。根据您的Linux发行版执行以下命令安装所需依赖：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros">   sudo apt-<span class="hljs-built_in">get</span> update<br>   sudo apt install make<br>   sudo apt-<span class="hljs-built_in">get</span> install gcc<br>   sudo apt-<span class="hljs-built_in">get</span> install libncurses5-dev<br>   sudo apt-<span class="hljs-built_in">get</span> install flex<br>   sudo apt-<span class="hljs-built_in">get</span> install bison<br>   sudo apt-<span class="hljs-built_in">get</span> install libelf-dev<br>sudo apt-<span class="hljs-built_in">get</span> install libgelf-dev<br></code></pre></td></tr></table></figure></li><li><p><strong>配置内核</strong><br>使用命令<code>make menuconfig</code>可以打开一个可视化终端，让您根据需要对内核参数进行设置。如果不需要更改任何参数，则可以直接保存并退出。</p></li><li><p><strong>编译内核</strong><br>使用以下命令编译Linux内核.大约需要数小时。</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">make bzImage</span><br></code></pre></td></tr></table></figure></li><li><p><strong>安装内核映像和模块</strong><br>编译完成后，可以将内核映像和模块安装到系统中。执行以下命令安装：</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gauss"><span class="hljs-built_in">make</span> modules_install<br><span class="hljs-built_in">make</span> install<br></code></pre></td></tr></table></figure></li><li><p><strong>更新引导加载器</strong><br>编译安装完成后，您需要更新引导加载器以使用新编译的内核。这一步可能因系统和引导加载器的不同而有所差异。例如，使用GRUB引导加载器的情况下，可以使用<code>update-grub</code>命令更新引导配置。</p></li></ol><h4 id="6-总结5个自我觉得比较有用的awk的使用场景，比如在什么情况下用awk处理文本效率最高，发散题，至少写1个。"><a href="#6-总结5个自我觉得比较有用的awk的使用场景，比如在什么情况下用awk处理文本效率最高，发散题，至少写1个。" class="headerlink" title="6. 总结5个自我觉得比较有用的awk的使用场景，比如在什么情况下用awk处理文本效率最高，发散题，至少写1个。"></a>6. 总结5个自我觉得比较有用的awk的使用场景，比如在什么情况下用awk处理文本效率最高，发散题，至少写1个。</h4>   <figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">**<span class="hljs-number">1</span>. 提取和处理文本数据：** awk在处理结构化文本数据时非常高效。例如，从日志文件中提取特定列、过滤行、计算汇总数据等操作。<br><br>**<span class="hljs-number">2</span>. 报告生成：** awk可以用于生成格式化的报告。例如，处理一些数据并生成报表或者以适合打印的形式输出。<br><br>**<span class="hljs-number">3</span>. 数据格式化和转换：** awk可以根据数据的特定格式进行转换和重构。它能够处理固定宽度、CSV、JSON等格式，并且可以将它们转换成其他需要的格式。<br><br>**<span class="hljs-number">4</span>. 数据清洗：** 在数据清洗阶段，awk可以用于移除文本数据中的无效行、处理重复数据，或者进行数据重排。<br><br>**<span class="hljs-number">5</span>. 日志分析：** awk在处理日志文件时也非常有用。它可以根据特定的模式或条件查找和分析日志，从中提取有用的信息。<br><br>**使用Awk处理CSV文件中的数据**<br><br>假设有一个名为`data.csv`的CSV文件，包含以下数据：<br><br>​```csv<br><span class="hljs-built_in">Name,</span>Age,Email<br><span class="hljs-built_in">John,</span><span class="hljs-number">25</span>,john@example.com<br><span class="hljs-built_in">Alice,</span><span class="hljs-number">30</span>,alice@example.com<br><span class="hljs-built_in">Bob,</span><span class="hljs-number">22</span>,bob@example.com<br></code></pre></td></tr></table></figure><p>我们可以使用Awk来处理这个CSV文件，比如按条件筛选、计算年龄总和等：</p><ol><li>统计年龄总和：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">awk -F<span class="hljs-string">&#x27;,&#x27;</span> <span class="hljs-string">&#x27;NR &gt; 1 &#123;sum += $2&#125; END &#123;print &quot;Total Age:&quot;, sum&#125;&#x27;</span> data.csv<br></code></pre></td></tr></table></figure><ol start="2"><li>按条件筛选：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">awk -F<span class="hljs-string">&#x27;,&#x27;</span> <span class="hljs-string">&#x27;$2 &gt;= 25 &#123;print $1 &quot; is older than 25&quot;&#125;&#x27;</span> data.csv<br></code></pre></td></tr></table></figure><ol start="3"><li>添加新的列：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">awk -F<span class="hljs-string">&#x27;,&#x27;</span> <span class="hljs-string">&#x27;BEGIN &#123;OFS=&quot;,&quot;&#125; &#123;print $1, $2, $2 &gt;= 25 ? &quot;Old&quot; : &quot;Young&quot;&#125;&#x27;</span> data.csv<br></code></pre></td></tr></table></figure><p>awk非常适合在命令行下处理文本数据，特别是当需要快速处理结构化的文本数据时，它的效率很高。它简洁的语法和强大的文本处理能力使得它成为文本处理的首选工具之一。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第三周作业</title>
    <link href="/2023/07/21/%E7%AC%AC%E4%B8%89%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2023/07/21/%E7%AC%AC%E4%B8%89%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<h4 id="1-yum私有仓库的实现及博客输出"><a href="#1-yum私有仓库的实现及博客输出" class="headerlink" title="1.yum私有仓库的实现及博客输出"></a>1.yum私有仓库的实现及博客输出</h4><p>1）centos8.5-yum源服务器端配置(epel源)安装httpd,启动服务并设置为开机启动（关闭selinux,防火墙）。</p><figure class="highlight sh"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs sh">yum -y install httpd<br>systemctl <span class="hljs-built_in">enable</span> --now httpd<br></code></pre></td></tr></table></figure><p>下载阿里epl源文件到本地html路径。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">root@centos8 ~]<span class="hljs-comment">#cat /etc/yum.repos.d/base.repo</span><br>[epel]<br>name=EPEL<br>baseurl=https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/epel/</span><span class="hljs-number">8</span><span class="hljs-regexp">/Everything/</span>x86_64/<br>gpgcheck=<span class="hljs-number">0</span><br><br>dnf reposync --repo=epel --download-metadata -p <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span><br></code></pre></td></tr></table></figure><ol start="2"><li>在客户端配置epel源文件路径指定本地yum仓库，10.0.0.132为本地yum服务器IP地址。</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">vim /etc/yum.repos.d/base.repo<br>[epel]<br>name=EPEL<br>baseurl=http://10.0.0.132/epel<br>gpgcheck=0<br></code></pre></td></tr></table></figure><p>安装epel源软件验证yum源是否可以使用</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum -y install AMF-devel<br></code></pre></td></tr></table></figure><h4 id="2-画图-TCP协议和三次握手及四次挥手，可以参考别人的，但是需要自己画一次"><a href="#2-画图-TCP协议和三次握手及四次挥手，可以参考别人的，但是需要自己画一次" class="headerlink" title="2.画图 TCP协议和三次握手及四次挥手，可以参考别人的，但是需要自己画一次"></a>2.画图 TCP协议和三次握手及四次挥手，可以参考别人的，但是需要自己画一次</h4><h5 id="1）TCP三次握手：三次握手是一个客户端和服务器端建立连接的一个过程。"><a href="#1）TCP三次握手：三次握手是一个客户端和服务器端建立连接的一个过程。" class="headerlink" title="1）TCP三次握手：三次握手是一个客户端和服务器端建立连接的一个过程。"></a>1）TCP三次握手：三次握手是一个客户端和服务器端建立连接的一个过程。</h5><p><img src="%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230721211015.jpg" alt="微信图片_20230721211015"></p><p>第一次握手：客户端发送SYN包（SYN=1，SEQ=X）到服务器，表示客户端想要连接服务器，并将初始序列号X作为SEQ字段的值。</p><p>第二次握手：当服务器接收到客户端的SYN包后，如果服务器同意连接，则回复一个ACK包（ACK=1，SEQ=Y，ACKnum=X+1）和SYN包（SYN=1，SEQ=Z），ACKnum为客户端初始序列号X加1，SEQ字段为服务器初始序列号Y。</p><p>第三次握手：客户端接收到服务器的回复后，发送一个ACK包（ACK=1，SEQ=X+1，ACKnum=Z+1），表示接收到服务器的请求，并完成三次握手，连接建立。</p><p>那为什么是三次握手而不是二次？</p><p>那是因为如果客户端发送第一个SYN包后可能由于网络延迟等原因并没有到达服务器，在某个网络节点产生了滞留，这时客户端认为服务器没有收到发送的SYN包，为了建立连接客户端重新发送第二个SYN包，服务器收到SYN包后回复SYN+ACK包后建立了连接。这是第一个未到达的SYN包到达了服务器，这时服务器会认为客户端又发起了一次新的连接，从而在两次握手后处于在等待数据的状态，服务器认为是两个连接，而客户端认为是一个连接，造成了两者的状态不一致，而在三次握手的状态，服务端收不到最后的ACK包则连接不会建立，所以三次握手就是为了解决网络信道不可靠的问题。</p><h5 id="2）TCP四次挥手：四次挥手是客户端和服务器端断开连接的一个过程。"><a href="#2）TCP四次挥手：四次挥手是客户端和服务器端断开连接的一个过程。" class="headerlink" title="2）TCP四次挥手：四次挥手是客户端和服务器端断开连接的一个过程。"></a>2）TCP四次挥手：四次挥手是客户端和服务器端断开连接的一个过程。</h5><p><img src="%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230721211004.jpg" alt="微信图片_20230721211004"></p><p>第一次挥手：客户端发送一个FIN包（FIN=1，SEQ=U）到服务器，自己进入终止等待一状态。#服务器端和客户端都可以来发送这个请求。</p><p>第二次挥手：服务器接收到客户端的FIN包后，发送一个ACK包（ACK=1，SEQ=V，ACKnum=U+1）给客户端，表示已经接收到客户端的请求，进入关闭等待状态，客户端收到ACK包后进入终止等待二状态，这个状态下服务器还可以发送未发送完的数据而客户端也可以接受数据。</p><p>第三次挥手：当服务器等待数据传输完成后，发送最后一个FIN包（FIN=1，SEQ=W，ACKnum=U+1）给客户端，进入最后的确认状态。</p><p>第四次挥手：客户端接收到服务器的FIN包后，回复一个ACK包（ACK=1，SEQ=U+1，ACKnum=W+1）给服务器，表示已经接收到服务器的请求，并且进入超时等待状态，超过超时时间后自动关闭连接。那为什么要进入超时等待状态而不是直接断开连接呢？，其实这跟TCP三次握手一样，都是为了确保数据传输的可靠性！如果最后一个ACK包在网络中丢失服务器没有收到，服务器就会一直处于待确认状态。如果服务器未收到ACK包，这是服务器就会重新发送FIN包，客户端收到新的FIN包后会重新发送ACK包并且刷新超时等待时间。</p><h4 id="3-静态配置网卡IP，centos-ubuntu实现"><a href="#3-静态配置网卡IP，centos-ubuntu实现" class="headerlink" title="3.静态配置网卡IP，centos/ubuntu实现"></a>3.静态配置网卡IP，centos/ubuntu实现</h4><h5 id="1）Centos配置静态IP地址"><a href="#1）Centos配置静态IP地址" class="headerlink" title="1）Centos配置静态IP地址"></a>1）Centos配置静态IP地址</h5><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs pf">[root@Rocky8 ~]<span class="hljs-comment"># ip a #运行ip a 命令确认需要修改的网卡名称</span><br><span class="hljs-number">1</span>: lo: <span class="hljs-variable">&lt;LOOPBACK,UP,LOWER_UP&gt;</span> mtu <span class="hljs-number">65536</span> qdisc noqueue <span class="hljs-keyword">state</span> UNKNOWN <span class="hljs-keyword">group</span> <span class="hljs-keyword">default</span> qlen <span class="hljs-number">1000</span><br>    link/loopback <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> brd <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span><br>    <span class="hljs-keyword">inet</span> <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>/<span class="hljs-number">8</span> scope host lo<br>       valid_lft forever preferred_lft forever<br>    <span class="hljs-keyword">inet6</span> ::<span class="hljs-number">1</span>/<span class="hljs-number">128</span> scope host <br>       valid_lft forever preferred_lft forever<br><span class="hljs-number">2</span>: eth0: <span class="hljs-variable">&lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt;</span> mtu <span class="hljs-number">1500</span> qdisc fq_codel <span class="hljs-keyword">state</span> UP <span class="hljs-keyword">group</span> <span class="hljs-keyword">default</span> qlen <span class="hljs-number">1000</span><br>    link/ether <span class="hljs-number">00</span>:<span class="hljs-number">0</span>c:<span class="hljs-number">29</span>:a8:<span class="hljs-number">95</span>:<span class="hljs-number">8</span>d brd ff:ff:ff:ff:ff:ff<br>    <span class="hljs-keyword">inet</span> <span class="hljs-number">10.0</span>.<span class="hljs-number">0.133</span>/<span class="hljs-number">24</span> brd <span class="hljs-number">10.0</span>.<span class="hljs-number">0.255</span> scope <span class="hljs-keyword">global</span> noprefixroute eth0<br>       valid_lft forever preferred_lft forever<br>    <span class="hljs-keyword">inet6</span> fe80::<span class="hljs-number">20</span>c:<span class="hljs-number">29</span>ff:fea8:<span class="hljs-number">958</span>d/<span class="hljs-number">64</span> scope link <br>       valid_lft forever preferred_lft forever<br><br><br>[root@Rocky8 ~] vim /etc/sysconfig/network-scripts/ifcfg-eth0  <span class="hljs-comment">#使用vim修改网卡配置文件，eth0为要修开的网卡名称</span><br><br>DEVICE=eth0               <span class="hljs-comment"># 网卡对应的设备别名，</span><br>NAME=eth0                 <span class="hljs-comment"># 网卡名称</span><br>BOOTPROTO=static          <span class="hljs-comment"># 网卡获得IP地址的方式，设置为static或者none表示使用静态IP地址</span><br>GATEWAY=<span class="hljs-number">10.0</span>.<span class="hljs-number">0.2</span>          <span class="hljs-comment"># 默认网关</span><br>IPADDR=<span class="hljs-number">10.0</span>.<span class="hljs-number">0.133</span>         <span class="hljs-comment"># 网卡IP地址</span><br>PREFIX=<span class="hljs-number">24</span>                 <span class="hljs-comment"># 网卡对应的子网掩码</span><br>DNS1=<span class="hljs-number">8.8</span>.<span class="hljs-number">8.8</span>               <span class="hljs-comment"># DNS服务器地址</span><br><br>[root@Rocky8 ~]<span class="hljs-comment"># nmcli connection reload #重新加载配置文件</span><br>[root@Rocky8 ~]<span class="hljs-comment"># nmcli connection up eth0 #重新启动eth0网卡</span><br>Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/<span class="hljs-number">2</span>) <span class="hljs-comment">#修改成功</span><br></code></pre></td></tr></table></figure><h5 id="2）ubuntu配置静态IP地址"><a href="#2）ubuntu配置静态IP地址" class="headerlink" title="2）ubuntu配置静态IP地址"></a>2）ubuntu配置静态IP地址</h5><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs dts">[<span class="hljs-number">08</span>:<span class="hljs-number">53</span>:<span class="hljs-number">48</span> root@ubuntu1804 ~]<span class="hljs-meta">#vim /etc/netplan/eth0.yaml #ubantu网卡配置文件路径，修改eth0网卡</span><br><span class="hljs-symbol">network:</span><br><span class="hljs-symbol">  version:</span> <span class="hljs-number">2</span><br><span class="hljs-symbol">  renderer:</span> networkd<br><span class="hljs-symbol">  ethernets:</span><br><span class="hljs-symbol">   eth0:</span> <span class="hljs-meta">#设备名</span><br><span class="hljs-symbol">           addresses:</span> [<span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.129</span>/<span class="hljs-number">24</span>] <span class="hljs-meta">#IP地址和子网掩码</span><br><span class="hljs-symbol">           gateway4:</span> <span class="hljs-number">10.0</span><span class="hljs-number">.0</span><span class="hljs-number">.2</span> <span class="hljs-meta">#网关</span><br><span class="hljs-symbol">           nameservers:</span><br><span class="hljs-symbol">                   addresses:</span> [<span class="hljs-number">114.114</span><span class="hljs-number">.114</span><span class="hljs-number">.114</span>] <span class="hljs-meta">#DNS可指定多个</span><br><br>[<span class="hljs-number">08</span>:<span class="hljs-number">55</span>:<span class="hljs-number">29</span> root@ubuntu1804 ~]<span class="hljs-meta">#netplan apply #重新加载网卡使配置生效</span><br></code></pre></td></tr></table></figure><h4 id="5-实现免密登陆脚本-expect登陆远程主机，将生成的密钥写入到目标主机-expect测试远程登陆。"><a href="#5-实现免密登陆脚本-expect登陆远程主机，将生成的密钥写入到目标主机-expect测试远程登陆。" class="headerlink" title="5.实现免密登陆脚本, expect登陆远程主机，将生成的密钥写入到目标主机, expect测试远程登陆。"></a>5.实现免密登陆脚本, expect登陆远程主机，将生成的密钥写入到目标主机, expect测试远程登陆。</h4><p>1）通过shift读取脚本参数<br>2）通过select来选择功能.例如功能有</p><ul><li><p>安装mysql</p></li><li><p>安装apache</p></li><li><p>免密钥登陆主机</p><p>当前我们只实现免密钥登陆主机<br>3）通过函数封装每个功能<br>4）将免密钥登陆的过程可以重复进行, while 循环实现重复，需要有退出过程。当用户输入exit时，退出免密钥功能。<br>5）支持输入一批主机免密钥，使用数组 实现</p><p>一下为脚本</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment"># 函数：免密登陆主机</span><br><span class="hljs-function"><span class="hljs-title">login_without_pass</span></span>() &#123;<br>    <span class="hljs-comment"># 检查操作系统类型，安装 expect 工具</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">command</span> -v apt-get &amp;&gt; /dev/null; <span class="hljs-keyword">then</span><br>        dpkg -s expect &amp;&gt; /dev/null || apt -y install expect<br>    <span class="hljs-keyword">else</span>    <br>        rpm -q expect &amp;&gt; /dev/null || yum -y install expect<br>    <span class="hljs-keyword">fi</span><br><br>    <span class="hljs-comment"># 生成SSH密钥对</span><br>    <span class="hljs-keyword">if</span> [ ! -e /root/.ssh/id_rsa ];<span class="hljs-keyword">then</span><br>        ssh-keygen -t rsa -P <span class="hljs-string">&quot;&quot;</span> -f /root/.ssh/id_rsa &amp;&gt; /dev/null<br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;ssh key is created&quot;</span><br>    <span class="hljs-keyword">fi</span><br><br>    <span class="hljs-comment"># 获取要设置免密登录的主机数量</span><br>    <span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;请输入要设置免密登录的主机数量: &quot;</span> host_count<br><br>    <span class="hljs-comment"># 声明数组来存储主机和密码</span><br>    <span class="hljs-built_in">declare</span> -A hosts<br><br>    <span class="hljs-comment"># 通过循环依次获取主机</span><br>    <span class="hljs-keyword">for</span> ((i=1; i&lt;=host_count; i++)); <span class="hljs-keyword">do</span><br>        <span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;请输入第 <span class="hljs-variable">$i</span> 台主机的 IP 地址: &quot;</span> host_ip<br><span class="hljs-built_in">read</span> -p <span class="hljs-string">&quot;请输入第 <span class="hljs-variable">$i</span> 台主机的root密码: &quot;</span> host_password<br>        hosts[<span class="hljs-string">&quot;<span class="hljs-variable">$host_ip</span>&quot;</span>]=<span class="hljs-string">&quot;<span class="hljs-variable">$host_password</span>&quot;</span><br>    <span class="hljs-keyword">done</span><br><br>    <span class="hljs-comment"># 迭代 hosts 数组中的主机，并执行免密登录</span><br>    <span class="hljs-keyword">for</span> host <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;!hosts[@]&#125;</span>&quot;</span>; <span class="hljs-keyword">do</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;正在连接主机：<span class="hljs-variable">$host</span>&quot;</span><br>expect &amp;&gt; /dev/null &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">        set timeout 20</span><br><span class="hljs-string">spawn ssh-copy-id -i /root/.ssh/id_rsa.pub root@$host</span><br><span class="hljs-string">expect &#123;</span><br><span class="hljs-string">               &quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue &#125;</span><br><span class="hljs-string">               &quot;password&quot; &#123; send &quot;$&#123;hosts[$host]&#125;\n&quot; &#125;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">expect eof</span><br><span class="hljs-string">EOF</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;主机 <span class="hljs-variable">$host</span> 已设置免密登录。&quot;</span><br>    <span class="hljs-keyword">done</span><br><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;所有主机免密登录设置完成。&quot;</span><br>&#125;<br><br><span class="hljs-comment"># 函数：安装MySQL</span><br><span class="hljs-function"><span class="hljs-title">install_mysql</span></span>() &#123;<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;正在安装MySQL...&quot;</span><br>    <span class="hljs-comment"># 在这里写MySQL安装的具体步骤</span><br>    <span class="hljs-comment"># 例如：yum install -y mysql-server</span><br>&#125;<br><br><span class="hljs-comment"># 函数：安装Apache</span><br><span class="hljs-function"><span class="hljs-title">install_apache</span></span>() &#123;<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;正在安装Apache...&quot;</span><br>    <span class="hljs-comment"># 在这里写Apache安装的具体步骤</span><br>    <span class="hljs-comment"># 例如：yum install -y httpd</span><br>&#125;<br><br><span class="hljs-comment"># 主函数</span><br><span class="hljs-function"><span class="hljs-title">main</span></span>() &#123;<br>    PS3=<span class="hljs-string">&quot;请选择操作(1-4): &quot;</span><br>    select MENU <span class="hljs-keyword">in</span> 免密登陆 安装MySQL 安装Apache 退出; <span class="hljs-keyword">do</span><br>        <span class="hljs-keyword">case</span> <span class="hljs-variable">$REPLY</span> <span class="hljs-keyword">in</span><br>            1)<br>                <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;===== 免密登陆 =====&quot;</span><br>                login_without_pass<br>                <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;免密登陆成功。&quot;</span><br>                ;;<br>            2)<br>                <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;===== 安装MySQL =====&quot;</span><br>                install_mysql<br>                <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;安装MySQL成功。&quot;</span><br>                ;;<br>            3)<br>                <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;===== 安装Apache =====&quot;</span><br>                install_apache<br>                <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;安装Apache成功。&quot;</span><br>                ;;<br>            4)<br>                <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;===== 退出菜单 =====&quot;</span><br>                <span class="hljs-built_in">break</span><br>                ;;<br>            *)<br>                <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;错误选项，请重新选择。&quot;</span><br>                ;;<br>        <span class="hljs-keyword">esac</span><br>    <span class="hljs-keyword">done</span><br>&#125;<br><br><span class="hljs-comment"># 执行主函数</span><br>main<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第二周作业</title>
    <link href="/2023/07/07/%E7%AC%AC%E4%BA%8C%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2023/07/07/%E7%AC%AC%E4%BA%8C%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<h3 id="“完成一个shell脚本，脚本的作用。"><a href="#“完成一个shell脚本，脚本的作用。" class="headerlink" title="“完成一个shell脚本，脚本的作用。"></a>“完成一个shell脚本，脚本的作用。</h3><ol><li>运行脚本可以显示出本机的ip地址</li><li>如果ip地址中有3这个数字，那么就打印出当前的系统时间</li><li>如果ip地址中不含3这个数字，就批量建立用户magedu_00, magedu_01, … magedu_100并且所有用户同属于magedu组</li><li>打印出/etc/passwd这个文件中可以登陆的用户（非/usr/sbin/nologin）</li><li>yum安装nginx服务，并且启动该服务</li><li>一个脚本完成”</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></div></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-comment"># 获取本机ip地址</span><br>ipaddr=$(hostname -I | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>)<br><br><span class="hljs-comment"># 显示本机ip地址</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;本机ip地址为：<span class="hljs-variable">$&#123;ipaddr&#125;</span>&quot;</span><br><br><span class="hljs-comment"># 判断ip地址中是否有数字 3</span><br><span class="hljs-keyword">if</span> [[ <span class="hljs-variable">$ipaddr</span> == *<span class="hljs-string">&quot;3&quot;</span>* ]]; <span class="hljs-keyword">then</span><br>  <span class="hljs-comment"># 如果ip地址中有3这个数字，则显示出当前系统时间</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;当前系统时间为：<span class="hljs-subst">$(date +%H:%M:%S)</span>&quot;</span><br><span class="hljs-keyword">else</span><br>  <span class="hljs-comment"># 如果ip地址中不含3这个数字，则批量创建用户</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;ip地址中不含3这个数字，正在创建用户...&quot;</span><br>  <span class="hljs-comment"># 循环创建 100 个用户，用户名格式为 magedu_00, magedu_01, ...</span><br>groupadd magedu<br><span class="hljs-keyword">for</span> ((i=0; i&lt;=100; i++)) <span class="hljs-keyword">do</span><br>    <span class="hljs-comment"># 创建用户设置默认密码并把所有用户添加到 magedu 组中</span><br>    username=<span class="hljs-string">&quot;magedu_<span class="hljs-subst">$(printf <span class="hljs-string">&quot;%02d&quot;</span> $i)</span>&quot;</span><br>    useradd <span class="hljs-variable">$username</span> -g magedu -p 123456<br>  <span class="hljs-keyword">done</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;用户创建完成,默认密码为123456&quot;</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment"># 获取所有可以登录系统的用户，并显示出来</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;可以登录系统的用户如下：&quot;</span><br>grep -v <span class="hljs-string">&#x27;/sbin/nologin&#x27;</span> /etc/passwd | awk -F: <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span> | grep -vE <span class="hljs-string">&#x27;sync|shutdown|halt|pollinate|tss|lxd&#x27;</span><br><br><span class="hljs-comment"># 安装并启动 Nginx 服务</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;正在安装 Nginx 服务...&quot;</span><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">command</span> -v apt-get &amp;&gt; /dev/null; <span class="hljs-keyword">then</span> <span class="hljs-comment"># Ubuntu 系统使用 apt 安装软件</span><br>  apt update -y<br>  apt install -y nginx<br>  systemctl <span class="hljs-built_in">enable</span> --now nginx<br><span class="hljs-keyword">else</span> <span class="hljs-comment"># 其他系统使用 yum 安装</span><br>  yum install -y nginx<br>  systemctl <span class="hljs-built_in">enable</span> --now nginx<br><span class="hljs-keyword">fi</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Nginx 服务安装并启动成功。&quot;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第一周作业</title>
    <link href="/2023/06/26/%E7%AC%AC%E4%B8%80%E5%91%A8%E4%BD%9C%E4%B8%9A/"/>
    <url>/2023/06/26/%E7%AC%AC%E4%B8%80%E5%91%A8%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<h4 id="1-图文并茂解释开源许可证-GPL、BSD、MIT、Mozilla、Apache和LGPL的区别？"><a href="#1-图文并茂解释开源许可证-GPL、BSD、MIT、Mozilla、Apache和LGPL的区别？" class="headerlink" title="1.图文并茂解释开源许可证 GPL、BSD、MIT、Mozilla、Apache和LGPL的区别？"></a>1.图文并茂解释开源许可证 GPL、BSD、MIT、Mozilla、Apache和LGPL的区别？</h4><p><img src="e24bed40dde14331a9dd5a4fcc16572b.png" alt="e24bed40dde14331a9dd5a4fcc16572b"></p><p>这些开源许可证主要有以下几个方面的区别：</p><ul><li><strong>是否允许闭源的后续开发</strong>：这是指是否允许使用开源代码的人将修改后的代码作为专有软件发布和销售，而不需要公开源代码。在这方面，GPL和LGPL是最严格的，它们要求任何使用或修改了GPL或LGPL代码的软件都必须采用相同的协议，并公开源代码。BSD、MIT、Mozilla和Apache则比较宽松，它们允许闭源的后续开发，只要保留原来代码中的版权声明和许可声明即可。</li><li><strong>是否保留原作者的署名</strong>：这是指是否要求使用开源代码的人在自己的产品中注明原作者的姓名或机构名称。在这方面，GPL、LGPL、Mozilla和Apache都要求保留原作者的署名，而BSD和MIT则不强制要求，只要保留版权声明和许可声明即可。</li><li><strong>是否重视专利权</strong>：这是指是否要求使用开源代码的人在自己的产品中遵守原作者的专利声明，或者授予原作者对自己产品中使用了开源代码部分的专利权。在这方面，Apache是最重视专利权的，它要求使用者遵守原作者的专利声明，并授予原作者对自己产品中使用了Apache代码部分的专利权。GPL、LGPL和Mozilla也有一定程度的关注专利权，它们要求使用者在自己产品中包含原作者的专利声明，并且不得对使用了GPL、LGPL或Mozilla代码部分的产品提出专利诉讼。BSD和MIT则对专利权没有特别的规定。</li></ul><h4 id="2-安装各发行版系统的安装-centos-rockylinux-ubuntu-等-【任选1个】"><a href="#2-安装各发行版系统的安装-centos-rockylinux-ubuntu-等-【任选1个】" class="headerlink" title="2. 安装各发行版系统的安装(centos, rockylinux, ubuntu, 等) 【任选1个】"></a>2. 安装各发行版系统的安装(centos, rockylinux, ubuntu, 等) 【任选1个】</h4><p>ubantu20.04.6 安装</p><p>1.<a href="https://releases.ubuntu.com/20.04/">https://releases.ubuntu.com/20.04/</a> 下载链接，选择服务器版下载。</p><p><img src="image-20230629155911338.png" alt="image-20230629155911338"></p><p>2.在VM上新建虚拟机选择典型。</p><p><img src="image-20230629160106016.png" alt="image-20230629160106016"></p><p>3.选择稍后安装，下一步</p><p><img src="image-20230629160354008.png" alt="image-20230629160354008"></p><p>4.选择Ubantu64位，下一步。</p><p><img src="image-20230629160523578.png" alt="image-20230629160523578"></p><p>5.设置虚拟机名称，虚拟机文件存放位置。</p><p><img src="image-20230629160914138.png" alt="image-20230629160914138"></p><p>6.调整磁盘大小，选择将虚拟磁盘存储为单个文件</p><p><img src="image-20230629161023665.png" alt="image-20230629161023665"></p><p>7.调整合适的使用内存和CPU,选择下载完成的安装镜像</p><p><img src="image-20230629161222259.png" alt="image-20230629161222259"></p><p><img src="image-20230629161335394.png" alt="image-20230629161335394"></p><p>9.选择语言英文</p><p><img src="image-20230629162425380.png" alt="image-20230629162425380"></p><p>10<img src="image-20230629162837089.png" alt="image-20230629162837089"><img src="image-20230629162908255.png" alt="image-20230629162908255"></p><p><img src="image-20230629162943095.png" alt="image-20230629162943095"></p><p>11.修改地址阿里云</p><p><img src="11.png" alt="11"></p><p><img src="12.png" alt="12"></p><p>12.设置用户名密码</p><p><img src="13.png" alt="13"></p><p>14,安装OPENSSH<img src="14.png" alt="14"></p><p>15.选择需要安装的软件</p><p><img src="15.png" alt="15"></p><p>16.选择不更新直接重启</p><p><img src="16.png" alt="16"></p><p>17.安装完成</p><p><img src="17.png" alt="17"></p><h4 id="3-Linux中总结，1）如何通过一个简短的关键字-，例如process-获取相关的命令。2）通过命令的描述，选择一个命令，获取命令的man文档。-3）解读man文档，man分几个部分？man每个部分的解释，特别是语法部分。-lt-gt-…等各代表什么含义。4）根据语法部分-简要的写几个操作。"><a href="#3-Linux中总结，1）如何通过一个简短的关键字-，例如process-获取相关的命令。2）通过命令的描述，选择一个命令，获取命令的man文档。-3）解读man文档，man分几个部分？man每个部分的解释，特别是语法部分。-lt-gt-…等各代表什么含义。4）根据语法部分-简要的写几个操作。" class="headerlink" title="3.Linux中总结，1）如何通过一个简短的关键字 ，例如process 获取相关的命令。2）通过命令的描述，选择一个命令，获取命令的man文档。 3）解读man文档，man分几个部分？man每个部分的解释，特别是语法部分。&lt;&gt;, [] …等各代表什么含义。4）根据语法部分 简要的写几个操作。"></a>3.Linux中总结，1）如何通过一个简短的关键字 ，例如process 获取相关的命令。2）通过命令的描述，选择一个命令，获取命令的man文档。 3）解读man文档，man分几个部分？man每个部分的解释，特别是语法部分。&lt;&gt;, [] …等各代表什么含义。4）根据语法部分 简要的写几个操作。</h4><p>1）如何通过一个简短的关键字 ，例如process 获取相关的命令。</p><p>要获取与 “process” 相关的命令，可以运行 <code>man -k process</code>命令。</p><p>2）通过命令的描述，选择一个命令，获取命令的man文档</p><p>要获取命令的 man 文档，可以使用 <code>man top</code>命令。</p><p>3）man 文档分为几个不同的部分（section），每个部分包含不同的内容。这些部分是：</p><ul><li>Section 1：用户命令和可执行程序的文档（例如，ls、cp、gcc）。</li><li>Section 2：系统调用和内核函数的文档。</li><li>Section 3：库函数的文档（例如，stdio、malloc）。</li><li>Section 4：特殊文件（例如，设备文件、文件系统）的文档。</li><li>Section 5：文件和文件格式的文档（例如，passwd、fstab）。</li><li>Section 6：游戏和演示程序的文档。</li><li>Section 7：一般性杂项文档（例如，约定、文件格式）。</li><li>Section 8：管理命令和系统管理的文档（例如，mount、ifconfig）。</li></ul><ol><li><code>&lt;file&gt;</code>：尖括号内的内容表示必选项，需要用户提供具体的参数。例如 <code>&lt;file&gt;</code> 可以表示文件名或文件路径。</li><li><code>[option]</code>：方括号内的内容表示可选项，表示用户可以根据需求选择是否使用该选项。例如 <code>[option]</code> 可以表示命令的某种功能或设置。</li><li><code>[...]</code>：方括号内的省略号表示可以重复的内容。例如 <code>[file ...]</code> 表示可以接受多个文件作为参数。</li><li><code>-flag</code> 或 <code>--flag</code>：破折号加上标志或选项表示单字符选项或长选项。例如 <code>-l</code> 表示使用 “l” 选项，<code>--help</code> 表示使用 “help” 选项。</li><li><code>|</code>：竖线表示多个选项之间的互斥关系，用户只能选择其中一个选项。例如 <code>command -a | -b</code> 表示用户只能同时选择 “-a” 或 “-b” 选项。</li></ol><p>4）以下是几个基本操作的简要说明（以常见的 <code>ls</code> 命令为例）：</p><ul><li><code>ls</code>：显示当前目录中的文件和子目录。</li><li><code>ls -l</code>：以列表形式显示文件和子目录的详细信息，包括文件类型、权限、所有者等。</li><li><code>ls -a</code>：显示所有文件和子目录，包括以<code>.</code>开头的隐藏文件。</li><li><code>ls -t</code>：按照修改时间的顺序显示文件和子目录。</li><li><code>ls -R</code>：递归地显示当前目录及其子目录中的文件和子目录。</li></ul><h4 id="4-切换到-etc-目录，列出fstab文件的详细信息，详细解决fstab一行，每个或每几个字符的详细含义。"><a href="#4-切换到-etc-目录，列出fstab文件的详细信息，详细解决fstab一行，每个或每几个字符的详细含义。" class="headerlink" title="4.切换到/etc/目录，列出fstab文件的详细信息，详细解决fstab一行，每个或每几个字符的详细含义。"></a>4.切换到/etc/目录，列出fstab文件的详细信息，详细解决fstab一行，每个或每几个字符的详细含义。</h4><ol><li>要切换到 <code>/etc/</code> 目录，可以使用 <code>cd</code> 命令。输入以下命令进行切换：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /etc<br></code></pre></td></tr></table></figure><ol start="2"><li>要列出 <code>fstab</code> 文件的详细信息，可以使用 <code>ls</code> 命令，并使用 <code>-l</code> 选项来显示详细信息。输入以下命令进行查看：</li></ol><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">ls</span> <span class="hljs-literal">-</span><span class="hljs-comment">l /etc/fstab</span><br><span class="hljs-literal">-</span><span class="hljs-comment">（</span><span class="hljs-literal">-</span><span class="hljs-comment">表示这是一个文件）rw</span><span class="hljs-literal">-</span><span class="hljs-comment">r</span><span class="hljs-literal">--</span><span class="hljs-comment">r</span><span class="hljs-literal">--</span><span class="hljs-comment">（所有者，所有者组，其他人的权限）</span><span class="hljs-string">.</span> <span class="hljs-comment">1 （1表示指向文件的硬连接数量）root（所有者） root（所有者组） 655（文件大小） Jun 8 14:56（创建修改的时间） /etc/fstab（文件路径）</span><br><span class="hljs-literal">-</span><span class="hljs-comment">rw</span><span class="hljs-literal">-</span><span class="hljs-comment">r</span><span class="hljs-literal">--</span><span class="hljs-comment">r</span><span class="hljs-literal">--</span> <span class="hljs-comment">第一段rw</span><span class="hljs-literal">-</span><span class="hljs-comment">表示所有者对这个文件有读写权限，第二段r</span><span class="hljs-literal">--</span><span class="hljs-comment">所有者组只有读权限，第三段r</span><span class="hljs-literal">--</span><span class="hljs-comment">其他人只有读权限</span><br><br></code></pre></td></tr></table></figure><h4 id="5-简要说明FHS结构。"><a href="#5-简要说明FHS结构。" class="headerlink" title="5.简要说明FHS结构。"></a>5.简要说明FHS结构。</h4><ol start="4"><li>FHS（文件系统层次结构）是一个 Linux 文件系统标准，它确定了文件和目录的放置位置，以便不同的发行版都可以遵循相同的结构。它定义了以下几个关键目录：</li></ol><ul><li><p><code>/</code>：根目录，包含所有其他目录和文件。</p></li><li><p><code>/bin</code>：可执行命令文件。</p></li><li><p><code>/boot</code>：启动和引导文件。</p></li><li><p><code>/etc</code>：系统配置文件。</p></li><li><p><code>/home</code>：用户的主目录。</p></li><li><p><code>/lib</code>：共享库文件。</p></li><li><p><code>/opt</code>：可选安装的应用程序。</p></li><li><p><code>/tmp</code>：临时文件。</p></li><li><p><code>/usr</code>：用户程序和共享文件。</p></li><li><p><code>/var</code>：可变的文件，如日志和数据库。</p></li></ul><h4 id="6-用自己的理解总结-文件管理，用户管理，组用户，权限管理相关的命令。"><a href="#6-用自己的理解总结-文件管理，用户管理，组用户，权限管理相关的命令。" class="headerlink" title="6.用自己的理解总结 文件管理，用户管理，组用户，权限管理相关的命令。"></a>6.用自己的理解总结 文件管理，用户管理，组用户，权限管理相关的命令。</h4><p>文件管理相关命令</p><ul><li><code>touch</code>：创建文件。例如;使用<code>touch example.txt</code>创建一个名为example.txt的空文件</li><li><code>rm</code>：删除文件。例如；使用<code>rm example.txt</code>删除名为example.txt的文件。</li><li><code>rmdir</code>：删除目录。例如；使用<code>rmdir directory</code>删除名为directory的空目录。</li><li><code>cat</code>：显示文件的内容。例如；使用<code>cat file.txt</code>显示file.txt文件的内容。</li><li><code>head</code>：显示文件开头的几行。例如；使用<code>head -n 5 file.txt</code>显示file.txt文件的前5行内容。</li><li><code>less</code>：逐页查看文件内容。例如；使用<code>less file.txt</code>逐页查看file.txt文件的内容。</li><li><code>more</code>：逐屏查看文件内容。例如；使用<code>more file.txt</code>逐屏查看file.txt文件的内容。</li></ul><p>用户及组管理相关的命令：</p><ul><li><code>useradd</code>：创建新用户。例如；使用<code>useradd john</code>创建一个名为john的新用户。</li><li><code>userdel</code>：删除用户。例如；使用<code>userdel john</code>删除名为john的用户。</li><li><code>usermod</code>：修改用户属性。例如；使用<code>usermod -G group1 john</code>将用户john添加到group1组。</li><li><code>groupadd</code>：创建新组。例如；使用<code>groupadd group1</code>创建一个名为group1的新组。</li><li><code>groupdel</code>：删除组。例如；使用<code>groupdel group1</code>删除名为group1的组。</li><li><code>groupmod</code>：修改组属性。例如；使用<code>groupmod -n new_group group1</code>将group1组重命名为new_group。</li><li><code>chsh</code>：修改用户默认 shell。例如；使用<code>chsh -s /bin/bash john</code>将用户john的默认shell更改为bash。</li></ul><p>权限管理相关的命令：</p><ul><li><code>chmod</code>：修改文件或目录的权限。例如；使用<code>chmod +x script.sh</code>将脚本script.sh添加可执行权限</li><li><code>chown</code>：修改文件或目录的所有者。例如；使用<code>chown john file.txt</code>将文件file.txt的所有者更改为john。</li><li><code>setfacl</code>：设置文件或目录的访问控制列表。例如；使用<code>setfacl -m u:john:rw file.txt</code>将用户john赋予文件file.txt的读写权限。</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>免费搞网站-gitpages</title>
    <link href="/2022/05/12/%E5%85%8D%E8%B4%B9%E6%90%9E%E7%BD%91%E7%AB%99-gitpages/"/>
    <url>/2022/05/12/%E5%85%8D%E8%B4%B9%E6%90%9E%E7%BD%91%E7%AB%99-gitpages/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>完全免费的git网站搭建, 参考 <a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a></p><p>实现的目标: 本地写markdown, 推送github即可以看 github.io 域名查看网页。</p><p>实现的工具</p><ul><li><code>nodejs</code>           hexo生成网站</li><li><code>codeup.aliyun.com</code>    保存自己的博客代码</li><li><code>github.com</code>   静态页面展示 </li><li><code>vscode</code>   开发工具</li></ul><span id="more"></span><h1 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h1><p>参考  <a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a> 确保访问OK</p><p>slcnx.github.io 仓库名</p><p>准备index.html</p><figure class="highlight xml"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>主页<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  hello world<br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="20220512214701-16524035403072.png" alt="image-20220512214700115"></p><p><img src="20220512214623.png" alt="image-20220512214617755"></p><h1 id="docker推送github"><a href="#docker推送github" class="headerlink" title="docker推送github"></a>docker推送github</h1><p>新建临时目录，vscode打开, 准备以下文件</p><p>id_rsa_2048 <strong>需要linux生成或xshell生成，不可以自己生成</strong></p><p>id_rsa_2048的公钥加入到以上仓库中</p><p><img src="20220512225649.png" alt="image-20220512225647448"></p><p>Dockerfile</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">FROM</span> node:latest<br><br><br>WORKDIR /data/git <br><br><span class="hljs-built_in">ADD</span> id_rsa_2048 /root/.ssh/<br><span class="hljs-built_in">RUN</span>  chmod 600 /root/.ssh/id_rsa_2048 <br><br><span class="hljs-built_in">ADD</span> . ./<br><br><span class="hljs-comment"># 生成网页</span><br><span class="hljs-comment">#RUN npm run build </span><br><br><br><span class="hljs-comment"># 上传到GIT</span><br><br><span class="hljs-built_in">RUN</span> install -dv /data/page/ &amp;&amp; cp -a index.html /data/page/<br><br><br>WORKDIR /data/page/<br>ENV <span class="hljs-attribute">GIT_SSH_COMMAND</span>=<span class="hljs-string">&#x27;ssh -i /root/.ssh/id_rsa_2048  -o IdentitiesOnly=yes -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no&#x27;</span><br><span class="hljs-built_in">RUN</span> git<span class="hljs-built_in"> config </span>--global init.defaultBranch main &amp;&amp; git<span class="hljs-built_in"> config </span>--global user.email <span class="hljs-string">&#x27;2192383945@qq.com&#x27;</span> &amp;&amp; git<span class="hljs-built_in"> config </span>--global user.name <span class="hljs-string">&#x27;songliangcheng&#x27;</span>  &amp;&amp; \<br>    git<span class="hljs-built_in"> config </span>--global pull.rebase <span class="hljs-literal">true</span> &amp;&amp; \<br>    git init &amp;&amp; \<br>    git remote <span class="hljs-built_in">add</span> origin git@github.com:slcnx/slcnx.github.io.git &amp;&amp; git <span class="hljs-built_in">add</span> -A &amp;&amp; git commit -m init &amp;&amp; git push --force origin main <br></code></pre></td></tr></table></figure><p>index.html</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>主页<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    cat<br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">D:\vscode_projects\myblog&gt;docker build -t <span class="hljs-built_in">test</span> .<br></code></pre></td></tr></table></figure><p><img src="20220512223352.png" alt="image-20220512223351323"></p><h1 id="本地生成hexo仓库"><a href="#本地生成hexo仓库" class="headerlink" title="本地生成hexo仓库"></a>本地生成hexo仓库</h1><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-cli -g<br><br><span class="hljs-comment"># 当前目录为项目根</span><br>hexo init test1blog<br><span class="hljs-built_in">cd</span> test1blog<br><br><span class="hljs-comment"># 内容</span><br>$ <span class="hljs-built_in">ls</span><br>_config.landscape.yml  node_modules/  package-lock.json  <span class="hljs-built_in">source</span>/<br>_config.yml            package.json   scaffolds/         themes/<br></code></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta">hexo <span class="hljs-keyword">server</span><br></code></pre></td></tr></table></figure><p><img src="20220512224452.png" alt="image-20220512224451207"></p><h2 id="发布到github"><a href="#发布到github" class="headerlink" title="发布到github"></a>发布到github</h2><p>在以上目录 <code>test1blog</code> 中生成以下文件</p><ol><li><p><code>.dockerignore</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">node_modules/<br></code></pre></td></tr></table></figure></li><li><p><code>Dockerfile</code></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> node:latest<br><br><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /data/git </span><br><br><span class="hljs-keyword">ADD</span><span class="language-bash"> id_rsa_2048 /root/.ssh/</span><br><span class="hljs-keyword">RUN</span><span class="language-bash">  <span class="hljs-built_in">chmod</span> 600 /root/.ssh/id_rsa_2048 </span><br><br><span class="hljs-keyword">ADD</span><span class="language-bash"> . ./</span><br><br><span class="hljs-comment"># 生成网页</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> npm install &amp;&amp; npm run build </span><br><br><span class="hljs-comment"># 上传到GIT</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> install -dv /data/page/ &amp;&amp; <span class="hljs-built_in">cp</span> -a public /data/page/</span><br><br><span class="hljs-keyword">ARG</span> GITHUB<br><span class="hljs-keyword">ARG</span> GUSER <br><span class="hljs-keyword">ARG</span> EMAIL <br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /data/page/public/</span><br><span class="hljs-keyword">ENV</span> GIT_SSH_COMMAND=<span class="hljs-string">&#x27;ssh -i /root/.ssh/id_rsa_2048  -o IdentitiesOnly=yes -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no&#x27;</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> git config --global init.defaultBranch main &amp;&amp; git config --global user.email <span class="hljs-variable">$EMAIL</span>  &amp;&amp; git config --global user.name <span class="hljs-variable">$GUSER</span>  &amp;&amp; \</span><br><span class="language-bash">    git config --global pull.rebase <span class="hljs-literal">true</span> &amp;&amp; \</span><br><span class="language-bash">    git init &amp;&amp; \</span><br><span class="language-bash">    git remote add origin <span class="hljs-variable">$GITHUB</span> &amp;&amp; git add -A &amp;&amp; git commit -m init &amp;&amp; git push --force origin main </span><br></code></pre></td></tr></table></figure></li><li><p><code>id_rsa_2048</code> 以上与github互通的密钥</p></li><li><p>发布</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">docker build <span class="hljs-attr">--build-arg</span> GITHUB=git@github<span class="hljs-selector-class">.com</span>:slcnx/slcnx<span class="hljs-selector-class">.github</span><span class="hljs-selector-class">.io</span><span class="hljs-selector-class">.git</span> <span class="hljs-attr">--build-arg</span> EMAIL=<span class="hljs-string">&#x27;2192383945@qq.com&#x27;</span> <span class="hljs-attr">--build-arg</span> GUSER=<span class="hljs-string">&#x27;songliangcheng&#x27;</span> ./<br></code></pre></td></tr></table></figure></li></ol><p><img src="20220512225143.png" alt="image-20220512225141348"></p><h1 id="codeup一键发布"><a href="#codeup一键发布" class="headerlink" title="codeup一键发布"></a>codeup一键发布</h1><h2 id="添加codeup仓库"><a href="#添加codeup仓库" class="headerlink" title="添加codeup仓库"></a>添加codeup仓库</h2><p>将当前仓库加入到自己的codeup中</p><p><img src="20220512230442.png" alt="image-20220512230441057"></p><p>复制https地址 <a href="https://codeup.aliyun.com/5f73e5a3728df4b180fab5ca/myblog-2022-05-12.git">https://codeup.aliyun.com/5f73e5a3728df4b180fab5ca/myblog-2022-05-12.git</a></p><h2 id="初始化代码"><a href="#初始化代码" class="headerlink" title="初始化代码"></a>初始化代码</h2><p>将上面test1blog中，初始化，添加代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global init.defaultBranch main<br>git init<br>git remote add origin https://codeup.aliyun.com/5f73e5a3728df4b180fab5ca/myblog-2022-05-12.git<br></code></pre></td></tr></table></figure><p>添加文件 <code>.gitignore</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Logs</span><br>logs<br>*.<span class="hljs-built_in">log</span><br>npm-debug.log*<br>yarn-debug.log*<br>yarn-error.log*<br>lerna-debug.log*<br>.pnpm-debug.log*<br><br><span class="hljs-comment"># Diagnostic reports (https://nodejs.org/api/report.html)</span><br>report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json<br><br><span class="hljs-comment"># Runtime data</span><br>pids<br>*.pid<br>*.seed<br>*.pid.lock<br><br><span class="hljs-comment"># Directory for instrumented libs generated by jscoverage/JSCover</span><br>lib-cov<br><br><span class="hljs-comment"># Coverage directory used by tools like istanbul</span><br>coverage<br>*.lcov<br><br><span class="hljs-comment"># nyc test coverage</span><br>.nyc_output<br><br><span class="hljs-comment"># Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)</span><br>.grunt<br><br><span class="hljs-comment"># Bower dependency directory (https://bower.io/)</span><br>bower_components<br><br><span class="hljs-comment"># node-waf configuration</span><br>.lock-wscript<br><br><span class="hljs-comment"># Compiled binary addons (https://nodejs.org/api/addons.html)</span><br>build/Release<br><br><span class="hljs-comment"># Dependency directories</span><br>node_modules/<br>jspm_packages/<br><br><span class="hljs-comment"># Snowpack dependency directory (https://snowpack.dev/)</span><br>web_modules/<br><br><span class="hljs-comment"># TypeScript cache</span><br>*.tsbuildinfo<br><br><span class="hljs-comment"># Optional npm cache directory</span><br>.npm<br><br><span class="hljs-comment"># Optional eslint cache</span><br>.eslintcache<br><br><span class="hljs-comment"># Optional stylelint cache</span><br>.stylelintcache<br><br><span class="hljs-comment"># Microbundle cache</span><br>.rpt2_cache/<br>.rts2_cache_cjs/<br>.rts2_cache_es/<br>.rts2_cache_umd/<br><br><span class="hljs-comment"># Optional REPL history</span><br>.node_repl_history<br><br><span class="hljs-comment"># Output of &#x27;npm pack&#x27;</span><br>*.tgz<br><br><span class="hljs-comment"># Yarn Integrity file</span><br>.yarn-integrity<br><br><span class="hljs-comment"># dotenv environment variable files</span><br>.<span class="hljs-built_in">env</span><br>.env.development.local<br>.env.test.local<br>.env.production.local<br>.env.local<br><br><span class="hljs-comment"># parcel-bundler cache (https://parceljs.org/)</span><br>.cache<br>.parcel-cache<br><br><span class="hljs-comment"># Next.js build output</span><br>.next<br>out<br><br><span class="hljs-comment"># Nuxt.js build / generate output</span><br>.nuxt<br>dist<br><br><span class="hljs-comment"># Gatsby files</span><br>.cache/<br><span class="hljs-comment"># Comment in the public line in if your project uses Gatsby and not Next.js</span><br><span class="hljs-comment"># https://nextjs.org/blog/next-9-1#public-directory-support</span><br><span class="hljs-comment"># public</span><br><br><span class="hljs-comment"># vuepress build output</span><br>.vuepress/dist<br><br><span class="hljs-comment"># vuepress v2.x temp and cache directory</span><br>.temp<br>.cache<br><br><span class="hljs-comment"># Docusaurus cache and generated files</span><br>.docusaurus<br><br><span class="hljs-comment"># Serverless directories</span><br>.serverless/<br><br><span class="hljs-comment"># FuseBox cache</span><br>.fusebox/<br><br><span class="hljs-comment"># DynamoDB Local files</span><br>.dynamodb/<br><br><span class="hljs-comment"># TernJS port file</span><br>.tern-port<br><br><span class="hljs-comment"># Stores VSCode versions used for testing VSCode extensions</span><br>.vscode-test<br><br><span class="hljs-comment"># yarn v2</span><br>.yarn/cache<br>.yarn/unplugged<br>.yarn/build-state.yml<br>.yarn/install-state.gz<br>.pnp.*<br><br><br><span class="hljs-comment"># 静态文件</span><br>public <br></code></pre></td></tr></table></figure><h2 id="推送aliyun"><a href="#推送aliyun" class="headerlink" title="推送aliyun"></a>推送aliyun</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 状态</span><br>$ git status<br>hint: core.useBuiltinFSMonitor will be deprecated soon; use core.fsmonitor instead<br>hint: Disable this message with <span class="hljs-string">&quot;git config advice.useCoreFSMonitorConfig false&quot;</span><br>On branch main<br><br>No commits yet<br><br>Untracked files:<br>  (use <span class="hljs-string">&quot;git add &lt;file&gt;...&quot;</span> to include <span class="hljs-keyword">in</span> what will be committed)<br>        .dockerignore<br>        .github/<br>        .gitignore<br>        .npmignore<br>        Dockerfile<br>        _config.landscape.yml<br>        _config.yml<br>        db.json<br>        id_rsa_2048<br>        package-lock.json<br>        package.json<br>        scaffolds/<br>        <span class="hljs-built_in">source</span>/<br>        themes/<br>        <br><span class="hljs-comment"># 生成标志</span><br>$ <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;1111&#x27;</span> &gt;&gt; <span class="hljs-built_in">source</span>/_posts/hello-world.md<br><br><span class="hljs-comment"># 推送</span><br>git add . <br>git commit -m init<br><br>$ git push origin main<br>Enumerating objects: 122, <span class="hljs-keyword">done</span>.<br>Counting objects: 100% (122/122), <span class="hljs-keyword">done</span>.<br>Delta compression using up to 8 threads<br>Compressing objects: 100% (110/110), <span class="hljs-keyword">done</span>.<br>Writing objects: 100% (122/122), 580.00 KiB | 7.34 MiB/s, <span class="hljs-keyword">done</span>.<br>Total 122 (delta 0), reused 0 (delta 0), pack-reused 0<br>To https://codeup.aliyun.com/5f73e5a3728df4b180fab5ca/myblog-2022-05-12.git<br> * [new branch]      main -&gt; main<br><br></code></pre></td></tr></table></figure><h2 id="aliyun验证"><a href="#aliyun验证" class="headerlink" title="aliyun验证"></a>aliyun验证</h2><p><img src="20220512231059.png" alt="image-20220512231058218"></p><h2 id="添加流水线"><a href="#添加流水线" class="headerlink" title="添加流水线"></a>添加流水线</h2><p><img src="20220512231120.png" alt="image-20220512231118465"></p><p><img src="20220512231146.png" alt="image-20220512231145367"></p><p><img src="20220513000840.png" alt="image-20220513000838863"></p><p><img src="20220512231255.png" alt="image-20220512231253578"></p><p><img src="20220512231628.png" alt="image-20220512231626849"></p><p>删除kubernetes发布</p><p>保存并运行</p><p><img src="20220512231324.png" alt="image-20220512231322519"></p><h2 id="查看运行日志"><a href="#查看运行日志" class="headerlink" title="查看运行日志"></a>查看运行日志</h2><p><img src="20220512232021.png" alt="image-20220512232019242"></p><h2 id="查看github进度"><a href="#查看github进度" class="headerlink" title="查看github进度"></a>查看github进度</h2><p><img src="20220512232122.png" alt="image-20220512232121239"></p><h2 id="查看页面"><a href="#查看页面" class="headerlink" title="查看页面"></a>查看页面</h2><p>当进度为</p><p><img src="20220512232141.png" alt="image-20220512232140087"></p><p><img src="20220512232151.png" alt="image-20220512232150142"></p><h1 id="开发方式"><a href="#开发方式" class="headerlink" title="开发方式"></a>开发方式</h1><h2 id="准备vscode"><a href="#准备vscode" class="headerlink" title="准备vscode"></a>准备vscode</h2><p>在vscode中加载 codeup的仓库</p><p>安装插件 typora  <strong>安装后需要重启vscode</strong></p><p><img src="20220512231737.png" alt="image-20220512231735959"></p><h2 id="本地开发"><a href="#本地开发" class="headerlink" title="本地开发"></a>本地开发</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># clone 代码</span><br><br><span class="hljs-comment"># 安装依赖</span><br>npm install<br><br><span class="hljs-comment"># 运行服务</span><br>npx hexo server<br></code></pre></td></tr></table></figure><blockquote><p><code>npx command</code> 相当于加载了<code>$(npm bin)</code> 目录到环境变量, 后面的命令可以执行</p></blockquote><p>通过本地调试出合理的界面, 推送aliyun, 就可以一键发布</p><h2 id="本地添加文章"><a href="#本地添加文章" class="headerlink" title="本地添加文章"></a>本地添加文章</h2><p>脚本 <code>addarticle.sh</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">echo -ne <span class="hljs-string">&quot;Enter a \033[1;31mtitle\033[0m for your blog: &quot;</span>; read title<br>[ $? -ne <span class="hljs-number">0</span> ] &amp;&amp; echo <span class="hljs-string">&#x27;exit&#x27;</span> &amp;&amp; sleep <span class="hljs-number">3</span> &amp;&amp; <span class="hljs-keyword">exit</span> <span class="hljs-number">1</span><br>[ -z <span class="hljs-string">&quot;$title&quot;</span> ] &amp;&amp; echo title must be exists. &amp;&amp; sleep <span class="hljs-number">3</span> &amp;&amp; <span class="hljs-keyword">exit</span> <span class="hljs-number">1</span><br>npx hexo new <span class="hljs-string">&quot;$title&quot;</span><br><br>start $(readlink -f .)<span class="hljs-regexp">/source/</span>_posts<br></code></pre></td></tr></table></figure><p>生成文章, 运行脚本</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">第1个文章</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-05-12 23:27:58</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><h2 id="个性化页面展示"><a href="#个性化页面展示" class="headerlink" title="个性化页面展示"></a>个性化页面展示</h2><p><a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a></p><ul><li><code>hexo站点配置</code></li><li><code>fluid</code>主题配置</li><li><code>阅读量</code></li><li><code>评论功能</code></li></ul><p>例如修改标题 <code>_config.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">title:</span> <span class="hljs-string">&quot;5-12 23:30&quot;</span><br><span class="hljs-comment"># ...</span><br><br><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 处理typora相对路径</span><br>npm install hexo-typora-asset --registry https://registry.npmjs.org --save<br></code></pre></td></tr></table></figure><p>typora中的配置</p><p><img src="image-20220513092438970.png" alt="image-20220513092438970"></p><p>重启 <code>npx hexo server</code></p><p><img src="20220512233119.png" alt="image-20220512233117729"></p><h2 id="文章默认页面-可选"><a href="#文章默认页面-可选" class="headerlink" title="文章默认页面(可选)"></a>文章默认页面(可选)</h2><p><a href="https://hexo.io/docs/writing#Scaffolds">https://hexo.io/docs/writing#Scaffolds</a></p><p>当我们写大量的文章,发现主页不应该显示所有内容,需要readmore, readmore之前有1小段简介</p><p>如下, 上面的nginx文章会<code>显示标题,简介,readmore</code>, 而下面的hello world就显示所有, 这两者区别在于</p><p>后者,默认</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">第1个文章</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-05-12 23:27:58</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><p>前者</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">第1个文章</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-05-12 23:27:58</span><br><span class="hljs-attr">tags:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">hello</span><br><span class="hljs-attr">categories:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">nginx</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-meta"></span><br><span class="hljs-meta"></span><br><span class="hljs-comment"># 背景</span><br><br><span class="hljs-string">这篇讲解如何编译安装nginx,</span> <span class="hljs-string">优化nginx</span><br><br><span class="hljs-string">&lt;!--more--&gt;</span><br></code></pre></td></tr></table></figure><p><img src="20220512234116.png" alt="image-20220512234114962"></p><p>要实现每个文章创建均生成nginx这样的模板, 编辑 <code>scaffolds/post.md</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> &#123;&#123; <span class="hljs-string">title</span> &#125;&#125;<br><span class="hljs-attr">date:</span> &#123;&#123; <span class="hljs-string">date</span> &#125;&#125;<br><span class="hljs-attr">tags:</span><br><span class="hljs-bullet">-</span> <br><span class="hljs-attr">categories:</span><br><span class="hljs-bullet">-</span> <br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-comment"># 背景</span><br><br><span class="hljs-string">&lt;!--more--&gt;</span><br></code></pre></td></tr></table></figure><p>现在运行脚本 <code>addarticle.sh</code> 添加<strong>第2个文章</strong></p><p>网页已经达到效果</p><p><img src="20220512234553.png" alt="image-20220512234551537"></p><h2 id="准备一个主题-fluid"><a href="#准备一个主题-fluid" class="headerlink" title="准备一个主题 fluid"></a>准备一个主题 fluid</h2><blockquote><p>使用此主题后, 不需要前面的文章默认页面, 每个页面不需要加<code>&lt;!--more--&gt;</code> 主题会自动抽取前多少个字符,作为描述的.</p></blockquote><p>Fluid主题 <a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ git submodule add https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/fluid-dev/</span>hexo-theme-fluid.git themes/fluid<br></code></pre></td></tr></table></figure><p>编辑 <code>_config.yml</code></p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clean"># Extensions<br>## Plugins: https:<span class="hljs-comment">//hexo.io/plugins/</span><br>## Themes: https:<span class="hljs-comment">//hexo.io/themes/</span><br>theme: fluid<br></code></pre></td></tr></table></figure><p>重启 <code>npx hexo server</code></p><p><img src="20220512235039.png" alt="image-20220512235038001"></p><p>配置主题 <code>fluid</code> 需要准备一个文件 <code>_config.主题名.yml</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp themes<span class="hljs-regexp">/fluid/</span>_config.yml _config.fluid.yml<br></code></pre></td></tr></table></figure><p>测试配置是否生效,修改 <code>_config.fluid.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 首页副标题的独立设置</span><br><span class="hljs-comment"># Independent config of home page subtitle</span><br><span class="hljs-attr">slogan:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># 为空则按 hexo config.subtitle 显示</span><br>  <span class="hljs-comment"># If empty, text based on `subtitle` in hexo config</span><br>  <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;Hello 05-12 .... &quot;</span><br></code></pre></td></tr></table></figure><p>重启 <code>npx hexo server</code></p><p><img src="20220512235647.png" alt="image-20220512235645718"></p><h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><p>准备脚本 <code>push.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>git config --<span class="hljs-built_in">local</span> pull.rebase <span class="hljs-literal">true</span><br>git add .<br>git commit -m <span class="hljs-string">&quot;笔记本-`date +%F_%T`&quot;</span><br><br><br>git push origin main<br><br>git pull origin main<br>[ $? -ne 0 ] &amp;&amp; <span class="hljs-built_in">exit</span> -1<br><br>git push origin main<br><br><span class="hljs-comment"># test</span><br>start $(<span class="hljs-built_in">readlink</span> -f .)/source/_posts<br></code></pre></td></tr></table></figure><p><a href="https://slcnx.github.io/">https://slcnx.github.io/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
